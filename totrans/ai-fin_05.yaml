- en: Chapter 3\. Normative Finance
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The CAPM is based on many unrealistic assumptions. For example, the assumption
    that investors care only about the mean and variance of one-period portfolio returns
    is extreme.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Eugene Fama and Kenneth French (2004)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[S]ciences that involve human beings rather than elementary particles have
    proven more resistant to elegant mathematics.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Alon Halevy et al. (2009)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This chapter reviews major normative financial theories and models. Simply speaking
    and for the purposes of this book, a *normative theory* is one that is based on
    assumptions (mathematically, axioms) and derives insights, results, and more from
    the set of relevant assumptions. On the other hand, a *positive theory* is one
    that is based on observation, experiments, data, relationships, and the like and
    describes phenomena given the insights gained from the available information and
    the derived results. Rubinstein (2006) provides a detailed historical account
    of the origins of the theories and models presented in this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: '[“Uncertainty and Risk”](#uncertainty_risk) introduces central notions from
    financial modeling, such as uncertainty, risk, traded assets, and so on. [“Expected
    Utility Theory”](#eu_theory) discusses the major economic paradigm for decision
    making under uncertainty: *expected utility theory* (EUT). In its modern form,
    EUT dates back to von Neumann and Morgenstern (1944). [“Mean-Variance Portfolio
    Theory”](#mvp_theory) introduces the mean-variance portfolio (MVP) theory according
    to Markowitz (1952). [“Capital Asset Pricing Model”](#cap_model) analyzes the
    *capital asset pricing model* (CAPM) according to Sharpe (1964) and Lintner (1965).
    [“Arbitrage Pricing Theory”](#ap_theory) sketches the *arbitrage pricing theory*
    (APT) according to Ross (1971, 1976).'
  prefs: []
  type: TYPE_NORMAL
- en: This chapter’s purpose is to set the stage for the rest of the book in the form
    of central normative financial theories. This is important because generations
    of economists, financial analysts, asset managers, traders, bankers, accountants,
    and others have been trained in these theories. In that sense, it is safe to say
    that finance as both a theoretical and practical discipline has been shaped by
    these theories to a large extent.
  prefs: []
  type: TYPE_NORMAL
- en: Uncertainty and Risk
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: At its core, financial theory deals with investment, trading, and valuation
    in the presence of uncertainty and risk. This section introduces on a somewhat
    formal level central notions related to these topics. The focus is on fundamental
    concepts from probability theory that build the backbone of quantitative finance.^([1](ch03.xhtml#idm45625332671048))
  prefs: []
  type: TYPE_NORMAL
- en: Definitions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Assume an economy for which activity is only observed at two points in time:
    today, <math alttext="t equals 0"><mrow><mi>t</mi> <mo>=</mo> <mn>0</mn></mrow></math>
    , and one year later, <math alttext="t equals 1"><mrow><mi>t</mi> <mo>=</mo> <mn>1</mn></mrow></math>
    . The financial theories discussed later in this chapter are to a large extent
    based on such a *static economy*.^([2](ch03.xhtml#idm45625332662264))'
  prefs: []
  type: TYPE_NORMAL
- en: At <math alttext="t equals 0"><mrow><mi>t</mi> <mo>=</mo> <mn>0</mn></mrow></math>
    , there is no uncertainty whatsoever. At <math alttext="t equals 1"><mrow><mi>t</mi>
    <mo>=</mo> <mn>1</mn></mrow></math> , the economy can take on a finite number
    <math alttext="upper S"><mi>S</mi></math> of possible states <math alttext="omega
    element-of normal upper Omega equals StartSet omega 1 comma omega 2 comma ellipsis
    comma omega Subscript upper S Baseline EndSet"><mrow><mi>ω</mi> <mo>∈</mo> <mi>Ω</mi>
    <mo>=</mo> <mo>{</mo> <msub><mi>ω</mi> <mn>1</mn></msub> <mo>,</mo> <msub><mi>ω</mi>
    <mn>2</mn></msub> <mo>,</mo> <mo>...</mo> <mo>,</mo> <msub><mi>ω</mi> <mi>S</mi></msub>
    <mo>}</mo></mrow></math> . <math alttext="normal upper Omega"><mi>Ω</mi></math>
    is called the *state space*, and it holds <math alttext="StartAbsoluteValue normal
    upper Omega EndAbsoluteValue equals upper S"><mrow><mo>|</mo> <mi>Ω</mi> <mo>|</mo>
    <mo>=</mo> <mi>S</mi></mrow></math> for its cardinality.
  prefs: []
  type: TYPE_NORMAL
- en: 'An *algebra* <math alttext="script upper F"><mi>ℱ</mi></math> in <math alttext="normal
    upper Omega"><mi>Ω</mi></math> is a family of sets with the following:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="normal upper Omega element-of script upper F"><mrow><mi>Ω</mi>
    <mo>∈</mo> <mi>ℱ</mi></mrow></math>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <math alttext="double-struck upper E element-of script upper F right double
    arrow double-struck upper E Superscript c Baseline element-of script upper F"><mrow><mi>𝔼</mi>
    <mo>∈</mo> <mi>ℱ</mi> <mo>⇒</mo> <msup><mi>𝔼</mi> <mi>c</mi></msup> <mo>∈</mo>
    <mi>ℱ</mi></mrow></math>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <math alttext="double-struck upper E 1 comma double-struck upper E 2 comma period
    period period comma double-struck upper E Subscript upper I Baseline element-of
    script upper F right double arrow union double-struck upper E Subscript i Baseline
    element-of script upper F"><mrow><msub><mi>𝔼</mi> <mn>1</mn></msub> <mo>,</mo>
    <msub><mi>𝔼</mi> <mn>2</mn></msub> <mo>,</mo> <mo>.</mo> <mo>.</mo> <mo>.</mo>
    <mo>,</mo> <msub><mi>𝔼</mi> <mi>I</mi></msub> <mo>∈</mo> <mi>ℱ</mi> <mo>⇒</mo>
    <msubsup><mo>∪</mo> <mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow> <mi>I</mi></msubsup>
    <msub><mi>𝔼</mi> <mi>i</mi></msub> <mo>∈</mo> <mi>ℱ</mi></mrow></math>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <math alttext="double-struck upper E Superscript c"><msup><mi>𝔼</mi> <mi>c</mi></msup></math>
    denotes the complement of a set <math alttext="double-struck upper E"><mi>𝔼</mi></math>
    . The power set <math alttext="normal script upper P left-parenthesis normal upper
    Omega right-parenthesis"><mrow><mi>℘</mi> <mo>(</mo> <mi>Ω</mi> <mo>)</mo></mrow></math>
    is the largest algebra, while the set <math alttext="script upper F equals StartSet
    normal empty-set comma normal upper Omega EndSet"><mrow><mi>ℱ</mi> <mo>=</mo>
    <mo>{</mo> <mi>∅</mi> <mo>,</mo> <mi>Ω</mi> <mo>}</mo></mrow></math> is the smallest
    algebra in <math alttext="normal upper Omega"><mi>Ω</mi></math> . An algebra is
    a model for *observable events* in an economy. In this context, a single state
    of the economy <math alttext="omega element-of normal upper Omega"><mrow><mi>ω</mi>
    <mo>∈</mo> <mi>Ω</mi></mrow></math> can be interpreted as an *atomic event*.
  prefs: []
  type: TYPE_NORMAL
- en: A *probability* assigns a real number <math alttext="0 less-than-or-equal-to
    p Subscript omega Baseline identical-to upper P left-parenthesis StartSet omega
    EndSet right-parenthesis less-than-or-equal-to 1"><mrow><mn>0</mn> <mo>≤</mo>
    <msub><mi>p</mi> <mi>ω</mi></msub> <mo>≡</mo> <mi>P</mi> <mrow><mo>(</mo> <mrow><mo>{</mo>
    <mi>ω</mi> <mo>}</mo></mrow> <mo>)</mo></mrow> <mo>≤</mo> <mn>1</mn></mrow></math>
    to a state <math alttext="omega element-of normal upper Omega"><mrow><mi>ω</mi>
    <mo>∈</mo> <mi>Ω</mi></mrow></math> or a real number <math alttext="0 less-than-or-equal-to
    upper P left-parenthesis double-struck upper E double-struck right-parenthesis
    less-than-or-equal-to 1"><mrow><mn>0</mn> <mo>≤</mo> <mi>P</mi> <mo>(</mo> <mi>𝔼</mi>
    <mo>)</mo> <mo>≤</mo> <mn>1</mn></mrow></math> to an event <math alttext="double-struck
    upper E element-of script upper F"><mrow><mi>𝔼</mi> <mo>∈</mo> <mi>ℱ</mi></mrow></math>
    . If the probabilities for all states are known, it holds <math alttext="upper
    P left-parenthesis double-struck upper E right-parenthesis equals sigma-summation
    Underscript omega element-of double-struck upper E Endscripts p Subscript omega"><mrow><mi>P</mi>
    <mrow><mo>(</mo> <mi>𝔼</mi> <mo>)</mo></mrow> <mo>=</mo> <msub><mo>∑</mo> <mrow><mi>ω</mi><mo>∈</mo><mi>𝔼</mi></mrow></msub>
    <msub><mi>p</mi> <mi>ω</mi></msub></mrow></math> .
  prefs: []
  type: TYPE_NORMAL
- en: 'A *probability measure* <math alttext="upper P colon script upper F right-arrow
    left-bracket 0 comma 1 right-bracket"><mrow><mi>P</mi> <mo>:</mo> <mi>ℱ</mi> <mo>→</mo>
    <mo>[</mo> <mn>0</mn> <mo>,</mo> <mn>1</mn> <mo>]</mo></mrow></math> is characterized
    by the following:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="for-all double-struck upper E element-of script upper F colon
    upper P left-parenthesis double-struck upper E right-parenthesis greater-than-or-equal-to
    0"><mrow><mo>∀</mo> <mi>𝔼</mi> <mo>∈</mo> <mi>ℱ</mi> <mo>:</mo> <mi>P</mi> <mo>(</mo>
    <mi>𝔼</mi> <mo>)</mo> <mo>≥</mo> <mn>0</mn></mrow></math>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <math alttext="upper P left-parenthesis union double-struck upper E Subscript
    i Baseline right-parenthesis equals sigma-summation Underscript i equals 1 Overscript
    upper I Endscripts double-struck upper E Subscript i Baseline for disjoint sets
    double-struck upper E Subscript i Baseline element-of script upper F"><mrow><mi>P</mi>
    <mfenced separators="" open="(" close=")"><msubsup><mo>∪</mo> <mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow>
    <mi>I</mi></msubsup> <msub><mi>𝔼</mi> <mi>i</mi></msub></mfenced> <mo>=</mo> <msubsup><mo>∑</mo>
    <mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow> <mi>I</mi></msubsup> <msub><mi>𝔼</mi>
    <mi>i</mi></msub> <mtext>for</mtext> <mtext>disjoint</mtext> <mtext>sets</mtext>
    <msub><mi>𝔼</mi> <mi>i</mi></msub> <mo>∈</mo> <mi>ℱ</mi></mrow></math>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <math alttext="upper P left-parenthesis normal upper Omega right-parenthesis
    equals 1"><mrow><mi>P</mi> <mo>(</mo> <mi>Ω</mi> <mo>)</mo> <mo>=</mo> <mn>1</mn></mrow></math>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Together the three elements <math alttext="StartSet normal upper Omega comma
    script upper F comma upper P EndSet"><mrow><mo>{</mo> <mi>Ω</mi> <mo>,</mo> <mi>ℱ</mi>
    <mo>,</mo> <mi>P</mi> <mo>}</mo></mrow></math> form a *probability space*. A probability
    space is the formal representation for *uncertainty* in the model economy. If
    the probability measure <math alttext="upper P"><mi>P</mi></math> is fixed, the
    economy is said to be under *risk*. If it is known to all agents in the economy,
    the economy is said to have *symmetric information*.
  prefs: []
  type: TYPE_NORMAL
- en: 'Given a probability space <math alttext="StartSet normal upper Omega comma
    script upper F comma upper P EndSet"><mrow><mo>{</mo> <mi>Ω</mi> <mo>,</mo> <mi>ℱ</mi>
    <mo>,</mo> <mi>P</mi> <mo>}</mo></mrow></math> , a *random variable* is a function
    <math alttext="upper S colon normal upper Omega right-arrow double-struck upper
    R Subscript plus Baseline comma omega right-arrow from bar upper S left-parenthesis
    omega right-parenthesis"><mrow><mi>S</mi> <mo>:</mo> <mi>Ω</mi> <mo>→</mo> <msub><mi>ℝ</mi>
    <mo>+</mo></msub> <mo>,</mo> <mi>ω</mi> <mo>↦</mo> <mi>S</mi> <mrow><mo>(</mo>
    <mi>ω</mi> <mo>)</mo></mrow></mrow></math> that is <math alttext="script upper
    F minus"><mrow><mi>ℱ</mi> <mo>-</mo></mrow></math> measurable. This implies that
    for each <math alttext="double-struck upper E element-of left-brace left-bracket
    a comma b left-bracket colon a comma b element-of double-struck upper R comma
    a less-than b right-brace"><mrow><mi>𝔼</mi> <mo>∈</mo> <mo>{</mo> <mo>[</mo> <mi>a</mi>
    <mo>,</mo> <mi>b</mi> <mo>[</mo> <mo>:</mo> <mi>a</mi> <mo>,</mo> <mi>b</mi> <mo>∈</mo>
    <mi>ℝ</mi> <mo>,</mo> <mi>a</mi> <mo><</mo> <mi>b</mi> <mo>}</mo></mrow></math>
    one has the following:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="upper S Superscript negative 1 Baseline left-parenthesis double-struck
    upper E right-parenthesis identical-to StartSet omega element-of normal upper
    Omega colon upper S left-parenthesis omega right-parenthesis element-of double-struck
    upper E EndSet element-of script upper F" display="block"><mrow><msup><mi>S</mi>
    <mrow><mo>-</mo><mn>1</mn></mrow></msup> <mrow><mo>(</mo> <mi>𝔼</mi> <mo>)</mo></mrow>
    <mo>≡</mo> <mrow><mo>{</mo> <mi>ω</mi> <mo>∈</mo> <mi>Ω</mi> <mo>:</mo> <mi>S</mi>
    <mrow><mo>(</mo> <mi>ω</mi> <mo>)</mo></mrow> <mo>∈</mo> <mi>𝔼</mi> <mo>}</mo></mrow>
    <mo>∈</mo> <mi>ℱ</mi></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'If <math alttext="script upper F identical-to normal script upper P left-parenthesis
    normal upper Omega right-parenthesis"><mrow><mi>ℱ</mi> <mo>≡</mo> <mi>℘</mi> <mo>(</mo>
    <mi>Ω</mi> <mo>)</mo></mrow></math> , the *expectation* of a random variable is
    defined by the following:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="bold upper E Superscript upper P Baseline left-parenthesis upper
    S right-parenthesis equals sigma-summation Underscript omega element-of normal
    upper Omega Endscripts upper P left-parenthesis omega right-parenthesis dot upper
    S left-parenthesis omega right-parenthesis" display="block"><mrow><msup><mi>𝐄</mi>
    <mi>P</mi></msup> <mrow><mo>(</mo> <mi>S</mi> <mo>)</mo></mrow> <mo>=</mo> <munder><mo>∑</mo>
    <mrow><mi>ω</mi><mo>∈</mo><mi>Ω</mi></mrow></munder> <mi>P</mi> <mrow><mo>(</mo>
    <mi>ω</mi> <mo>)</mo></mrow> <mo>·</mo> <mi>S</mi> <mrow><mo>(</mo> <mi>ω</mi>
    <mo>)</mo></mrow></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'Otherwise, it is defined by:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="bold upper E Superscript upper P Baseline left-parenthesis upper
    S right-parenthesis equals sigma-summation Underscript double-struck upper E element-of
    script upper F Endscripts upper P left-parenthesis double-struck upper E right-parenthesis
    dot upper S left-parenthesis double-struck upper E right-parenthesis" display="block"><mrow><msup><mi>𝐄</mi>
    <mi>P</mi></msup> <mrow><mo>(</mo> <mi>S</mi> <mo>)</mo></mrow> <mo>=</mo> <munder><mo>∑</mo>
    <mrow><mi>𝔼</mi><mo>∈</mo><mi>ℱ</mi></mrow></munder> <mi>P</mi> <mrow><mo>(</mo>
    <mi>𝔼</mi> <mo>)</mo></mrow> <mo>·</mo> <mi>S</mi> <mrow><mo>(</mo> <mi>𝔼</mi>
    <mo>)</mo></mrow></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: In general, it is assumed that a financial economy is *perfect*. This means,
    among other things, that there are no transaction costs, available assets have
    fixed prices and are available in infinite quantities, everything happens at the
    speed of light, and agents have complete, symmetric information.
  prefs: []
  type: TYPE_NORMAL
- en: Numerical Example
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Assume now a simple *static* economy under *risk* <math alttext="StartSet normal
    upper Omega comma script upper F comma upper P EndSet"><mrow><mo>{</mo> <mi>Ω</mi>
    <mo>,</mo> <mi>ℱ</mi> <mo>,</mo> <mi>P</mi> <mo>}</mo></mrow></math> for which
    the following holds:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="normal upper Omega identical-to StartSet u comma d EndSet"><mrow><mi>Ω</mi>
    <mo>≡</mo> <mo>{</mo> <mi>u</mi> <mo>,</mo> <mi>d</mi> <mo>}</mo></mrow></math>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <math alttext="script upper F identical-to normal script upper P left-parenthesis
    normal upper Omega right-parenthesis"><mrow><mi>ℱ</mi> <mo>≡</mo> <mi>℘</mi> <mo>(</mo>
    <mi>Ω</mi> <mo>)</mo></mrow></math>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <math alttext="upper P identical-to StartSet upper P left-parenthesis StartSet
    u EndSet right-parenthesis equals one-half comma upper P left-parenthesis StartSet
    d EndSet right-parenthesis equals one-half EndSet"><mrow><mi>P</mi> <mo>≡</mo>
    <mo>{</mo> <mi>P</mi> <mrow><mo>(</mo> <mrow><mo>{</mo> <mi>u</mi> <mo>}</mo></mrow>
    <mo>)</mo></mrow> <mo>=</mo> <mfrac><mn>1</mn> <mn>2</mn></mfrac> <mo>,</mo> <mi>P</mi>
    <mrow><mo>(</mo> <mrow><mo>{</mo> <mi>d</mi> <mo>}</mo></mrow> <mo>)</mo></mrow>
    <mo>=</mo> <mfrac><mn>1</mn> <mn>2</mn></mfrac> <mo>}</mo></mrow></math>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Traded assets
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'In the economy, two assets are traded. The first is a risky asset, the *stock*,
    with a certain price today of <math alttext="upper S 0 equals 10"><mrow><msub><mi>S</mi>
    <mn>0</mn></msub> <mo>=</mo> <mn>10</mn></mrow></math> and an uncertain payoff
    tomorrow in the form of the random variable:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="upper S 1 equals StartLayout Enlarged left-brace 1st Row 1st
    Column upper S 1 Superscript u Baseline equals 20 2nd Column if omega equals u
    2nd Row 1st Column upper S 1 Superscript d Baseline equals 5 2nd Column if omega
    equals d EndLayout" display="block"><mrow><msub><mi>S</mi> <mn>1</mn></msub> <mo>=</mo>
    <mfenced separators="" open="{" close=""><mtable><mtr><mtd columnalign="left"><mrow><msubsup><mi>S</mi>
    <mn>1</mn> <mi>u</mi></msubsup> <mo>=</mo> <mn>20</mn></mrow></mtd> <mtd columnalign="left"><mrow><mtext>if</mtext>
    <mi>ω</mi> <mo>=</mo> <mi>u</mi></mrow></mtd></mtr> <mtr><mtd columnalign="left"><mrow><msubsup><mi>S</mi>
    <mn>1</mn> <mi>d</mi></msubsup> <mo>=</mo> <mn>5</mn></mrow></mtd> <mtd columnalign="left"><mrow><mtext>if</mtext>
    <mi>ω</mi> <mo>=</mo> <mi>d</mi></mrow></mtd></mtr></mtable></mfenced></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'The second is a risk-less asset, the *bond*, with a certain price today of
    <math alttext="upper B 0 equals 10"><mrow><msub><mi>B</mi> <mn>0</mn></msub> <mo>=</mo>
    <mn>10</mn></mrow></math> and a certain payoff tomorrow of the following:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="upper B 1 equals StartLayout Enlarged left-brace 1st Row 1st
    Column upper B 1 Superscript u Baseline equals 11 2nd Column if omega equals u
    2nd Row 1st Column upper B 1 Superscript d Baseline equals 11 2nd Column if omega
    equals d EndLayout" display="block"><mrow><msub><mi>B</mi> <mn>1</mn></msub> <mo>=</mo>
    <mfenced separators="" open="{" close=""><mtable><mtr><mtd columnalign="left"><mrow><msubsup><mi>B</mi>
    <mn>1</mn> <mi>u</mi></msubsup> <mo>=</mo> <mn>11</mn></mrow></mtd> <mtd columnalign="left"><mrow><mtext>if</mtext>
    <mi>ω</mi> <mo>=</mo> <mi>u</mi></mrow></mtd></mtr> <mtr><mtd columnalign="left"><mrow><msubsup><mi>B</mi>
    <mn>1</mn> <mi>d</mi></msubsup> <mo>=</mo> <mn>11</mn></mrow></mtd> <mtd columnalign="left"><mrow><mtext>if</mtext>
    <mi>ω</mi> <mo>=</mo> <mi>d</mi></mrow></mtd></mtr></mtable></mfenced></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'Formally, the model economy can then be written as <math alttext="script upper
    M squared equals left-parenthesis StartSet normal upper Omega comma script upper
    F comma upper P EndSet comma double-struck upper A right-parenthesis"><mrow><msup><mi>ℳ</mi>
    <mn mathvariant="script">2</mn></msup> <mo>=</mo> <mrow><mo>(</mo> <mrow><mo>{</mo>
    <mi>Ω</mi> <mo>,</mo> <mi>ℱ</mi> <mo>,</mo> <mi>P</mi> <mo>}</mo></mrow> <mo>,</mo>
    <mi>𝔸</mi> <mo>)</mo></mrow></mrow></math> , where <math alttext="double-struck
    upper A"><mi>𝔸</mi></math> represents the tradable assets in the form of the price
    vector <math alttext="upper M 0 equals left-parenthesis upper S 0 comma upper
    B 0 right-parenthesis Superscript upper T"><mrow><msub><mi>M</mi> <mn>0</mn></msub>
    <mo>=</mo> <msup><mrow><mo>(</mo><msub><mi>S</mi> <mn>0</mn></msub> <mo>,</mo><msub><mi>B</mi>
    <mn>0</mn></msub> <mo>)</mo></mrow> <mi>T</mi></msup></mrow></math> today and
    the market payoff matrix tomorrow of the following:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="upper M 1 equals Start 2 By 2 Matrix 1st Row 1st Column upper
    S 1 Superscript u Baseline 2nd Column upper B 1 Superscript u Baseline 2nd Row
    1st Column upper S 1 Superscript d Baseline 2nd Column upper B 1 Superscript d
    EndMatrix" display="block"><mrow><msub><mi>M</mi> <mn>1</mn></msub> <mo>=</mo>
    <mfenced separators="" open="(" close=")"><mtable><mtr><mtd><msubsup><mi>S</mi>
    <mn>1</mn> <mi>u</mi></msubsup></mtd> <mtd><msubsup><mi>B</mi> <mn>1</mn> <mi>u</mi></msubsup></mtd></mtr>
    <mtr><mtd><msubsup><mi>S</mi> <mn>1</mn> <mi>d</mi></msubsup></mtd> <mtd><msubsup><mi>B</mi>
    <mn>1</mn> <mi>d</mi></msubsup></mtd></mtr></mtable></mfenced></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: Arbitrage pricing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In such an economy, one can, for example, address the problem of deriving the
    fair value of a *European call option* on the stock with a strike price of <math
    alttext="upper K equals"><mrow><mi>K</mi> <mo>=</mo></mrow></math> 14.5\. The
    arbitrage-free value of the European call option <math alttext="upper C 0"><msub><mi>C</mi>
    <mn>0</mn></msub></math> is derived by replicating the option’s payoff <math alttext="upper
    C 1"><msub><mi>C</mi> <mn>1</mn></msub></math> through a portfolio <math alttext="phi"><mi>ϕ</mi></math>
    of the stock and the bond. The price of the replicating portfolio must also be
    the price of the European call option. Otherwise, (infinite) arbitrage profits
    would be possible. In Python, making use of such a replication argument, this
    is easily accomplished:^([3](ch03.xhtml#idm45625332913576))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[![1](Images/1.png)](#co_normative_finance_CO1-1)'
  prefs: []
  type: TYPE_NORMAL
- en: The prices of the stock and bond today.
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](#co_normative_finance_CO1-3)'
  prefs: []
  type: TYPE_NORMAL
- en: The uncertain payoff of the stock and bond tomorrow.
  prefs: []
  type: TYPE_NORMAL
- en: '[![3](Images/3.png)](#co_normative_finance_CO1-5)'
  prefs: []
  type: TYPE_NORMAL
- en: The market price vector.
  prefs: []
  type: TYPE_NORMAL
- en: '[![4](Images/4.png)](#co_normative_finance_CO1-7)'
  prefs: []
  type: TYPE_NORMAL
- en: The market payoff matrix.
  prefs: []
  type: TYPE_NORMAL
- en: '[![5](Images/5.png)](#co_normative_finance_CO1-9)'
  prefs: []
  type: TYPE_NORMAL
- en: The strike price of the option.
  prefs: []
  type: TYPE_NORMAL
- en: '[![6](Images/6.png)](#co_normative_finance_CO1-10)'
  prefs: []
  type: TYPE_NORMAL
- en: The uncertain payoff of the option.
  prefs: []
  type: TYPE_NORMAL
- en: '[![7](Images/7.png)](#co_normative_finance_CO1-12)'
  prefs: []
  type: TYPE_NORMAL
- en: The replication portfolio <math alttext="phi"><mi>ϕ</mi></math> .
  prefs: []
  type: TYPE_NORMAL
- en: '[![8](Images/8.png)](#co_normative_finance_CO1-14)'
  prefs: []
  type: TYPE_NORMAL
- en: A check whether its payoff is the same as the option’s payoff.
  prefs: []
  type: TYPE_NORMAL
- en: '[![9](Images/9.png)](#co_normative_finance_CO1-15)'
  prefs: []
  type: TYPE_NORMAL
- en: The price of the replication portfolio is the arbitrage-free price of the option.
  prefs: []
  type: TYPE_NORMAL
- en: Arbitrage Pricing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Arbitrage pricing theory, as illustrated in the preceding example, can be considered
    one of the strongest financial theories with some of the most robust mathematical
    results, such as the *fundamental theorem of asset pricing (FTAP)*.^([4](ch03.xhtml#idm45625331905816))
    Among other reasons, this is due to the fact that prices of options, for example,
    can be derived from other observable market parameters, say, the share price of
    the stock on which the option is written. Arbitrage pricing in that sense does
    not take care of how to come up with a fair share price in the first place, but
    simply takes it as an input. Therefore, arbitrage pricing works already with few
    and mild assumptions, such as *absence of arbitrage*, which cannot be said of
    many other financial theories. Note that not even the probability measure is used
    to derive the arbitrage price.
  prefs: []
  type: TYPE_NORMAL
- en: Expected Utility Theory
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Expected utility theory (EUT) is a cornerstone of financial theory. Since its
    formulation in the 1940s, it has been one of the central paradigms for modeling
    decision making under uncertainty.^([5](ch03.xhtml#idm45625331795688)) Basically
    every introductory textbook about financial theory and the theory of investments
    provides an account of EUT. One of the reasons is that other central results in
    finance can be derived from the EUT paradigm.
  prefs: []
  type: TYPE_NORMAL
- en: Assumptions and Results
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: EUT is an axiomatic theory, dating back to the seminal work of von Neumann and
    Morgenstern (1944). *Axiomatic* here means that major results of the theory can
    be deduced from a small number of axioms only. For a survey of axiomatic utility
    theory, different variants, and applications, see Fishburn (1968).
  prefs: []
  type: TYPE_NORMAL
- en: Axioms and normative theory
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'On [Wolfram MathWorld](https://oreil.ly/pZqal), you find the following definition
    for *axiom*: “An axiom is a proposition regarded as self-evidently true without
    proof.”'
  prefs: []
  type: TYPE_NORMAL
- en: EUT is generally based on a small set of major axioms with regard to the *preferences*
    of an agent when faced with choice under uncertainty. Although the definition
    of axiom suggests otherwise, not all of the axioms are regarded as “self-evidently
    true without proof” by all economists.
  prefs: []
  type: TYPE_NORMAL
- en: 'Von Neumann and Morgenstern (1944, p. 25) comment on the choice of axioms:'
  prefs: []
  type: TYPE_NORMAL
- en: 'A choice of axioms is not a purely objective task. It is usually expected to
    achieve some definite aim—some specific theorem or theorems are to be derivable
    from the axioms—and to this extent the problem is exact and objective. But beyond
    this there are always other important desiderata of a less exact nature: The axioms
    should not be too numerous, their system is to be as simple and transparent as
    possible, and each axiom should have an immediate intuitive meaning by which its
    appropriateness may be judged directly.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: In that sense, a set of axioms constitutes a *normative theory* of (the parts
    of) the world to be modeled by the theory. The set of axioms collects the minimum
    set of assumptions that should be satisfied a priori and not through some formal
    proof or similar. Before listing a set of axioms that leads to EUT, here are some
    words about the preferences of an agent themselves, formally <math alttext="succeeds-above-single-line-equals"><mo>⪰</mo></math>
    , when presented with choice under uncertainty.
  prefs: []
  type: TYPE_NORMAL
- en: Preferences of an agent
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Assume an agent with preferences <math alttext="succeeds-above-single-line-equals"><mo>⪰</mo></math>
    is faced with the problem of investing in the two traded assets of the model economy
    <math alttext="script upper M squared"><msup><mi>ℳ</mi> <mn mathvariant="script">2</mn></msup></math>
    . For example, the agent might have the option to choose between portfolio <math
    alttext="phi Subscript upper A"><msub><mi>ϕ</mi> <mi>A</mi></msub></math> leading
    to a future payoff <math alttext="upper A equals phi Subscript upper A Baseline
    dot upper M 1"><mrow><mi>A</mi> <mo>=</mo> <msub><mi>ϕ</mi> <mi>A</mi></msub>
    <mo>·</mo> <msub><mi>M</mi> <mn>1</mn></msub></mrow></math> or portfolio <math
    alttext="phi Subscript upper B"><msub><mi>ϕ</mi> <mi>B</mi></msub></math> leading
    to a future payoff <math alttext="upper B equals phi Subscript upper B Baseline
    dot upper M 1"><mrow><mi>B</mi> <mo>=</mo> <msub><mi>ϕ</mi> <mi>B</mi></msub>
    <mo>·</mo> <msub><mi>M</mi> <mn>1</mn></msub></mrow></math> . The agent’s preferences
    <math alttext="succeeds-above-single-line-equals"><mo>⪰</mo></math> are assumed
    to be defined over the future payoffs and not over the portfolios. If the agent
    (strongly) prefers payoff <math alttext="upper A"><mi>A</mi></math> over <math
    alttext="upper B"><mi>B</mi></math> , one writes <math alttext="upper A succeeds
    upper B"><mrow><mi>A</mi> <mo>≻</mo> <mi>B</mi></mrow></math> and <math alttext="upper
    A precedes upper B"><mrow><mi>A</mi> <mo>≺</mo> <mi>B</mi></mrow></math> in the
    other case. If the agent is indifferent to the two payoffs, one writes <math alttext="upper
    A tilde upper B"><mrow><mi>A</mi> <mo>∼</mo> <mi>B</mi></mrow></math> . Given
    these descriptions, one possible set of axioms leading to EUT is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Completeness
  prefs: []
  type: TYPE_NORMAL
- en: 'The agent can rank *all* payoffs relative to one another. One of the following
    must hold true: <math alttext="upper A succeeds upper B"><mrow><mi>A</mi> <mo>≻</mo>
    <mi>B</mi></mrow></math> , <math alttext="upper A precedes upper B"><mrow><mi>A</mi>
    <mo>≺</mo> <mi>B</mi></mrow></math> , or <math alttext="upper A tilde upper B"><mrow><mi>A</mi>
    <mo>∼</mo> <mi>B</mi></mrow></math> .'
  prefs: []
  type: TYPE_NORMAL
- en: Transitivity
  prefs: []
  type: TYPE_NORMAL
- en: If there is a third portfolio <math alttext="phi Subscript upper C"><msub><mi>ϕ</mi>
    <mi>C</mi></msub></math> with future payoff <math alttext="upper C equals phi
    Subscript upper C Baseline dot upper M 1"><mrow><mi>C</mi> <mo>=</mo> <msub><mi>ϕ</mi>
    <mi>C</mi></msub> <mo>·</mo> <msub><mi>M</mi> <mn>1</mn></msub></mrow></math>
    , it follows from <math alttext="upper A succeeds upper B"><mrow><mi>A</mi> <mo>≻</mo>
    <mi>B</mi></mrow></math> and <math alttext="upper B succeeds upper C"><mrow><mi>B</mi>
    <mo>≻</mo> <mi>C</mi></mrow></math> that <math alttext="upper A succeeds upper
    C"><mrow><mi>A</mi> <mo>≻</mo> <mi>C</mi></mrow></math> .
  prefs: []
  type: TYPE_NORMAL
- en: Continuity
  prefs: []
  type: TYPE_NORMAL
- en: If <math alttext="upper A succeeds upper B succeeds upper C"><mrow><mi>A</mi>
    <mo>≻</mo> <mi>B</mi> <mo>≻</mo> <mi>C</mi></mrow></math> , then there exists
    a number <math alttext="alpha element-of left-bracket 0 comma 1 right-bracket"><mrow><mi>α</mi>
    <mo>∈</mo> <mo>[</mo> <mn>0</mn> <mo>,</mo> <mn>1</mn> <mo>]</mo></mrow></math>
    such that <math alttext="upper B tilde alpha upper A plus left-parenthesis 1 minus
    alpha right-parenthesis upper C"><mrow><mi>B</mi> <mo>∼</mo> <mi>α</mi> <mi>A</mi>
    <mo>+</mo> <mo>(</mo> <mn>1</mn> <mo>-</mo> <mi>α</mi> <mo>)</mo> <mi>C</mi></mrow></math>
    .
  prefs: []
  type: TYPE_NORMAL
- en: Independence
  prefs: []
  type: TYPE_NORMAL
- en: From <math alttext="upper A tilde upper B"><mrow><mi>A</mi> <mo>∼</mo> <mi>B</mi></mrow></math>
    it follows that <math alttext="alpha upper A plus left-parenthesis 1 minus alpha
    right-parenthesis upper C tilde alpha upper B plus left-parenthesis 1 minus alpha
    right-parenthesis upper C"><mrow><mi>α</mi> <mi>A</mi> <mo>+</mo> <mo>(</mo> <mn>1</mn>
    <mo>-</mo> <mi>α</mi> <mo>)</mo> <mi>C</mi> <mo>∼</mo> <mi>α</mi> <mi>B</mi> <mo>+</mo>
    <mo>(</mo> <mn>1</mn> <mo>-</mo> <mi>α</mi> <mo>)</mo> <mi>C</mi></mrow></math>
    . Similarly, from <math alttext="upper A succeeds upper B"><mrow><mi>A</mi> <mo>≻</mo>
    <mi>B</mi></mrow></math> it follows that <math alttext="alpha upper A plus left-parenthesis
    1 minus alpha right-parenthesis upper C succeeds alpha upper B plus left-parenthesis
    1 minus alpha right-parenthesis upper C"><mrow><mi>α</mi> <mi>A</mi> <mo>+</mo>
    <mo>(</mo> <mn>1</mn> <mo>-</mo> <mi>α</mi> <mo>)</mo> <mi>C</mi> <mo>≻</mo> <mi>α</mi>
    <mi>B</mi> <mo>+</mo> <mo>(</mo> <mn>1</mn> <mo>-</mo> <mi>α</mi> <mo>)</mo> <mi>C</mi></mrow></math>
    .
  prefs: []
  type: TYPE_NORMAL
- en: Dominance
  prefs: []
  type: TYPE_NORMAL
- en: If <math alttext="upper C 1 equals alpha 1 upper A plus left-parenthesis 1 minus
    alpha 1 right-parenthesis upper C"><mrow><msub><mi>C</mi> <mn>1</mn></msub> <mo>=</mo>
    <msub><mi>α</mi> <mn>1</mn></msub> <mi>A</mi> <mo>+</mo> <mrow><mo>(</mo> <mn>1</mn>
    <mo>-</mo> <msub><mi>α</mi> <mn>1</mn></msub> <mo>)</mo></mrow> <mi>C</mi></mrow></math>
    and <math alttext="upper C 2 equals alpha 2 upper A plus left-parenthesis 1 minus
    alpha 2 right-parenthesis upper C"><mrow><msub><mi>C</mi> <mn>2</mn></msub> <mo>=</mo>
    <msub><mi>α</mi> <mn>2</mn></msub> <mi>A</mi> <mo>+</mo> <mrow><mo>(</mo> <mn>1</mn>
    <mo>-</mo> <msub><mi>α</mi> <mn>2</mn></msub> <mo>)</mo></mrow> <mi>C</mi></mrow></math>
    , it follows from <math alttext="upper A succeeds upper C"><mrow><mi>A</mi> <mo>≻</mo>
    <mi>C</mi></mrow></math> and <math alttext="upper C 1 succeeds upper C 2"><mrow><msub><mi>C</mi>
    <mn>1</mn></msub> <mo>≻</mo> <msub><mi>C</mi> <mn>2</mn></msub></mrow></math>
    that <math alttext="alpha 1 greater-than alpha 2"><mrow><msub><mi>α</mi> <mn>1</mn></msub>
    <mo>></mo> <msub><mi>α</mi> <mn>2</mn></msub></mrow></math> .
  prefs: []
  type: TYPE_NORMAL
- en: Utility functions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'A *utility function* is a way to represent the preferences <math alttext="succeeds-above-single-line-equals"><mo>⪰</mo></math>
    of an agent in a mathematical and numerical way in that such a function assigns
    a numerical value to a certain payoff. In this context, the absolute value is
    not relevant. It is rather the ordering that the values induce that is of interest.^([6](ch03.xhtml#idm45625331644552))
    Assume that <math alttext="double-struck upper X"><mi>𝕏</mi></math> represents
    all possible payoffs over which the agent can express her preferences. A utility
    function <math alttext="upper U"><mi>U</mi></math> is then defined as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="upper U colon double-struck upper X right-arrow double-struck
    upper R Subscript plus Baseline comma x right-arrow from bar upper U left-parenthesis
    x right-parenthesis" display="block"><mrow><mi>U</mi> <mo>:</mo> <mi>𝕏</mi> <mo>→</mo>
    <msub><mi>ℝ</mi> <mo>+</mo></msub> <mo>,</mo> <mi>x</mi> <mo>↦</mo> <mi>U</mi>
    <mrow><mo>(</mo> <mi>x</mi> <mo>)</mo></mrow></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'If <math alttext="upper U"><mi>U</mi></math> represents the preferences <math
    alttext="succeeds-above-single-line-equals"><mo>⪰</mo></math> of an agent, then
    the following relationships hold true:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="StartLayout 1st Row 1st Column upper A succeeds upper B right
    double arrow upper U left-parenthesis upper A right-parenthesis greater-than upper
    U left-parenthesis upper B right-parenthesis 2nd Column left-parenthesis strongly
    prefers right-parenthesis 2nd Row 1st Column upper A succeeds-above-single-line-equals
    upper B right double arrow upper U left-parenthesis upper A right-parenthesis
    greater-than-or-equal-to upper U left-parenthesis upper B right-parenthesis 2nd
    Column left-parenthesis weakly prefers right-parenthesis 3rd Row 1st Column upper
    A precedes upper B right double arrow upper U left-parenthesis upper A right-parenthesis
    less-than upper U left-parenthesis upper B right-parenthesis 2nd Column left-parenthesis
    strongly does not prefer right-parenthesis 4th Row 1st Column upper A precedes-above-single-line-equals
    upper B right double arrow upper U left-parenthesis upper A right-parenthesis
    less-than-or-equal-to upper U left-parenthesis upper B right-parenthesis 2nd Column
    left-parenthesis weakly does not prefer right-parenthesis 5th Row 1st Column upper
    A tilde upper B right double arrow upper U left-parenthesis upper A right-parenthesis
    equals upper U left-parenthesis upper B right-parenthesis 2nd Column left-parenthesis
    is indifferent right-parenthesis EndLayout" display="block"><mtable><mtr><mtd><mrow><mi>A</mi>
    <mo>≻</mo> <mi>B</mi> <mo>⇒</mo> <mi>U</mi> <mo>(</mo> <mi>A</mi> <mo>)</mo> <mo>></mo>
    <mi>U</mi> <mo>(</mo> <mi>B</mi> <mo>)</mo></mrow></mtd> <mtd><mrow><mtext>(strongly</mtext>
    <mtext>prefers)</mtext></mrow></mtd></mtr> <mtr><mtd><mrow><mi>A</mi> <mo>⪰</mo>
    <mi>B</mi> <mo>⇒</mo> <mi>U</mi> <mo>(</mo> <mi>A</mi> <mo>)</mo> <mo>≥</mo> <mi>U</mi>
    <mo>(</mo> <mi>B</mi> <mo>)</mo></mrow></mtd> <mtd><mrow><mtext>(weakly</mtext>
    <mtext>prefers)</mtext></mrow></mtd></mtr> <mtr><mtd><mrow><mi>A</mi> <mo>≺</mo>
    <mi>B</mi> <mo>⇒</mo> <mi>U</mi> <mo>(</mo> <mi>A</mi> <mo>)</mo> <mo><</mo> <mi>U</mi>
    <mo>(</mo> <mi>B</mi> <mo>)</mo></mrow></mtd> <mtd><mrow><mtext>(strongly</mtext>
    <mtext>does</mtext> <mtext>not</mtext> <mtext>prefer)</mtext></mrow></mtd></mtr>
    <mtr><mtd><mrow><mi>A</mi> <mo>⪯</mo> <mi>B</mi> <mo>⇒</mo> <mi>U</mi> <mo>(</mo>
    <mi>A</mi> <mo>)</mo> <mo>≤</mo> <mi>U</mi> <mo>(</mo> <mi>B</mi> <mo>)</mo></mrow></mtd>
    <mtd><mrow><mtext>(weakly</mtext> <mtext>does</mtext> <mtext>not</mtext> <mtext>prefer)</mtext></mrow></mtd></mtr>
    <mtr><mtd><mrow><mi>A</mi> <mo>∼</mo> <mi>B</mi> <mo>⇒</mo> <mi>U</mi> <mo>(</mo>
    <mi>A</mi> <mo>)</mo> <mo>=</mo> <mi>U</mi> <mo>(</mo> <mi>B</mi> <mo>)</mo></mrow></mtd>
    <mtd><mrow><mtext>(is</mtext> <mtext>indifferent)</mtext></mrow></mtd></mtr></mtable></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'A utility function <math alttext="upper U"><mi>U</mi></math> is only determined
    up to a positive linear transformation. Therefore, if <math alttext="upper U"><mi>U</mi></math>
    represents the preferences <math alttext="succeeds-above-single-line-equals"><mo>⪰</mo></math>
    , then <math alttext="upper V equals a plus b upper U"><mrow><mi>V</mi> <mo>=</mo>
    <mi>a</mi> <mo>+</mo> <mi>b</mi> <mi>U</mi></mrow></math> with <math alttext="a
    comma b greater-than 0"><mrow><mi>a</mi> <mo>,</mo> <mi>b</mi> <mo>></mo> <mn>0</mn></mrow></math>
    does so as well. Regarding utility functions, von Neumann and Morgenstern (1944,
    p. 25) summarize as follows: “So we see: If such a numerical valuation of utilities
    exists at all, then it is determined up to a linear transformation. I.e. then
    utility is a number up to a linear transformation.”'
  prefs: []
  type: TYPE_NORMAL
- en: Expected utility functions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Von Neumann and Morgenstern (1944) show that if the preferences of an agent
    <math alttext="succeeds-above-single-line-equals"><mo>⪰</mo></math> satisfy the
    preceding five axioms, then there exists an *expected utility function* of the
    form:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="upper U colon double-struck upper X right-arrow double-struck
    upper R Subscript plus Baseline comma x right-arrow from bar bold upper E Superscript
    upper P Baseline left-parenthesis u left-parenthesis x right-parenthesis right-parenthesis
    equals sigma-summation Underscript omega Overscript normal upper Omega Endscripts
    upper P left-parenthesis omega right-parenthesis u left-parenthesis x left-parenthesis
    omega right-parenthesis right-parenthesis" display="block"><mrow><mi>U</mi> <mo>:</mo>
    <mi>𝕏</mi> <mo>→</mo> <msub><mi>ℝ</mi> <mo>+</mo></msub> <mo>,</mo> <mi>x</mi>
    <mo>↦</mo> <msup><mi>𝐄</mi> <mi>P</mi></msup> <mrow><mo>(</mo> <mi>u</mi> <mrow><mo>(</mo>
    <mi>x</mi> <mo>)</mo></mrow> <mo>)</mo></mrow> <mo>=</mo> <munderover><mo>∑</mo>
    <mrow><mi>ω</mi></mrow> <mi>Ω</mi></munderover> <mi>P</mi> <mrow><mo>(</mo> <mi>ω</mi>
    <mo>)</mo></mrow> <mi>u</mi> <mrow><mo>(</mo> <mi>x</mi> <mrow><mo>(</mo> <mi>ω</mi>
    <mo>)</mo></mrow> <mo>)</mo></mrow></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: Here, <math alttext="u colon double-struck upper R right-arrow double-struck
    upper R comma x right-arrow from bar u left-parenthesis x right-parenthesis"><mrow><mi>u</mi>
    <mo>:</mo> <mi>ℝ</mi> <mo>→</mo> <mi>ℝ</mi> <mo>,</mo> <mi>x</mi> <mo>↦</mo> <mi>u</mi>
    <mo>(</mo> <mi>x</mi> <mo>)</mo></mrow></math> is a monotonically increasing,
    state-independent function, often called *Bernoulli utility*, such as <math alttext="u
    left-parenthesis x right-parenthesis equals ln left-parenthesis x right-parenthesis
    comma u left-parenthesis x right-parenthesis equals x"><mrow><mi>u</mi> <mo>(</mo>
    <mi>x</mi> <mo>)</mo> <mo>=</mo> <mo form="prefix">ln</mo> <mo>(</mo> <mi>x</mi>
    <mo>)</mo> <mo>,</mo> <mi>u</mi> <mo>(</mo> <mi>x</mi> <mo>)</mo> <mo>=</mo> <mi>x</mi></mrow></math>
    , or <math alttext="u left-parenthesis x right-parenthesis equals x squared"><mrow><mi>u</mi>
    <mrow><mo>(</mo> <mi>x</mi> <mo>)</mo></mrow> <mo>=</mo> <msup><mi>x</mi> <mn>2</mn></msup></mrow></math>
    .
  prefs: []
  type: TYPE_NORMAL
- en: In words, the expected utility function <math alttext="upper U"><mi>U</mi></math>
    first applies a function <math alttext="u"><mi>u</mi></math> to the payoff <math
    alttext="x left-parenthesis omega right-parenthesis"><mrow><mi>x</mi> <mo>(</mo>
    <mi>ω</mi> <mo>)</mo></mrow></math> in a certain state and then uses the probabilities
    for a given state to occur <math alttext="upper P left-parenthesis omega right-parenthesis"><mrow><mi>P</mi>
    <mo>(</mo> <mi>ω</mi> <mo>)</mo></mrow></math> to weigh the single utilities.
    In the special case of linear Bernoulli utility <math alttext="u left-parenthesis
    x right-parenthesis equals x"><mrow><mi>u</mi> <mo>(</mo> <mi>x</mi> <mo>)</mo>
    <mo>=</mo> <mi>x</mi></mrow></math> , the expected utility is simply the expected
    value of the state-dependent payoff, <math alttext="upper U left-parenthesis x
    right-parenthesis equals bold upper E Superscript upper P Baseline left-parenthesis
    x right-parenthesis"><mrow><mi>U</mi> <mrow><mo>(</mo> <mi>x</mi> <mo>)</mo></mrow>
    <mo>=</mo> <msup><mi>𝐄</mi> <mi>P</mi></msup> <mrow><mo>(</mo> <mi>x</mi> <mo>)</mo></mrow></mrow></math>
    .
  prefs: []
  type: TYPE_NORMAL
- en: Risk aversion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'In finance, the concept of *risk aversion* is important. The most commonly
    used measure of risk aversion is the Arrow-Pratt measure of *absolute risk aversion*
    (ARA), which dates back to Pratt (1964). Assume that an agent’s state-independent
    Bernoulli utility function is <math alttext="u left-parenthesis x right-parenthesis"><mrow><mi>u</mi>
    <mo>(</mo> <mi>x</mi> <mo>)</mo></mrow></math> . Then the Arrow-Pratt measure
    of ARA is defined by the following:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="upper A upper R upper A left-parenthesis x right-parenthesis
    equals minus StartFraction u double-prime left-parenthesis x right-parenthesis
    Over u prime left-parenthesis x right-parenthesis EndFraction comma x greater-than-or-equal-to
    0" display="block"><mrow><mi>A</mi> <mi>R</mi> <mi>A</mi> <mrow><mo>(</mo> <mi>x</mi>
    <mo>)</mo></mrow> <mo>=</mo> <mo>-</mo> <mfrac><mrow><msup><mi>u</mi> <mrow><mo>'</mo><mo>'</mo></mrow></msup>
    <mrow><mo>(</mo><mi>x</mi><mo>)</mo></mrow></mrow> <mrow><msup><mi>u</mi> <mo>'</mo></msup>
    <mrow><mo>(</mo><mi>x</mi><mo>)</mo></mrow></mrow></mfrac> <mo>,</mo> <mi>x</mi>
    <mo>≥</mo> <mn>0</mn></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'The following three cases can be distinguished according to this measure:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="upper A upper R upper A left-parenthesis x right-parenthesis
    equals minus StartFraction u double-prime left-parenthesis x right-parenthesis
    Over u prime left-parenthesis x right-parenthesis EndFraction StartLayout Enlarged
    left-brace 1st Row 1st Column Blank 2nd Column greater-than 3rd Column 0 4th Column
    risk hyphen averse 2nd Row 1st Column Blank 2nd Column equals 3rd Column 0 4th
    Column risk hyphen neutral 3rd Row 1st Column Blank 2nd Column less-than 3rd Column
    0 4th Column risk hyphen loving EndLayout" display="block"><mrow><mi>A</mi> <mi>R</mi>
    <mi>A</mi> <mrow><mo>(</mo> <mi>x</mi> <mo>)</mo></mrow> <mo>=</mo> <mo>-</mo>
    <mfrac><mrow><msup><mi>u</mi> <mrow><mo>'</mo><mo>'</mo></mrow></msup> <mrow><mo>(</mo><mi>x</mi><mo>)</mo></mrow></mrow>
    <mrow><msup><mi>u</mi> <mo>'</mo></msup> <mrow><mo>(</mo><mi>x</mi><mo>)</mo></mrow></mrow></mfrac>
    <mfenced separators="" open="{" close=""><mtable><mtr><mtd columnalign="left"><mo>></mo></mtd>
    <mtd><mn>0</mn></mtd> <mtd><mtext>risk-averse</mtext></mtd></mtr> <mtr><mtd columnalign="left"><mo>=</mo></mtd>
    <mtd><mn>0</mn></mtd> <mtd><mtext>risk-neutral</mtext></mtd></mtr> <mtr><mtd columnalign="left"><mo><</mo></mtd>
    <mtd><mn>0</mn></mtd> <mtd><mtext>risk-loving</mtext></mtd></mtr></mtable></mfenced></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: In financial theories and models, risk aversion and risk neutrality in general
    are assumed to be appropriate cases. In gambling, risk-loving agents probably
    can be found as well.
  prefs: []
  type: TYPE_NORMAL
- en: 'Consider the three Bernoulli functions previously mentioned: <math alttext="u
    left-parenthesis x right-parenthesis equals ln left-parenthesis x right-parenthesis
    comma u left-parenthesis x right-parenthesis equals x"><mrow><mi>u</mi> <mo>(</mo>
    <mi>x</mi> <mo>)</mo> <mo>=</mo> <mo form="prefix">ln</mo> <mo>(</mo> <mi>x</mi>
    <mo>)</mo> <mo>,</mo> <mi>u</mi> <mo>(</mo> <mi>x</mi> <mo>)</mo> <mo>=</mo> <mi>x</mi></mrow></math>
    , or <math alttext="u left-parenthesis x right-parenthesis equals x squared"><mrow><mi>u</mi>
    <mrow><mo>(</mo> <mi>x</mi> <mo>)</mo></mrow> <mo>=</mo> <msup><mi>x</mi> <mn>2</mn></msup></mrow></math>
    . It is easily verified that they model risk-averse, risk-neutral, and risk-loving
    agents, respectively. Consider, for example, <math alttext="u left-parenthesis
    x right-parenthesis equals x squared"><mrow><mi>u</mi> <mrow><mo>(</mo> <mi>x</mi>
    <mo>)</mo></mrow> <mo>=</mo> <msup><mi>x</mi> <mn>2</mn></msup></mrow></math>
    :'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="minus StartFraction u double-prime left-parenthesis x right-parenthesis
    Over u prime left-parenthesis x right-parenthesis EndFraction equals minus StartFraction
    2 Over 2 x EndFraction less-than 0 comma x greater-than 0 right double arrow risk
    hyphen loving" display="block"><mrow><mo>-</mo> <mfrac><mrow><msup><mi>u</mi>
    <mrow><mo>'</mo><mo>'</mo></mrow></msup> <mrow><mo>(</mo><mi>x</mi><mo>)</mo></mrow></mrow>
    <mrow><msup><mi>u</mi> <mo>'</mo></msup> <mrow><mo>(</mo><mi>x</mi><mo>)</mo></mrow></mrow></mfrac>
    <mo>=</mo> <mo>-</mo> <mfrac><mn>2</mn> <mrow><mn>2</mn><mi>x</mi></mrow></mfrac>
    <mo><</mo> <mn>0</mn> <mo>,</mo> <mi>x</mi> <mo>></mo> <mn>0</mn> <mo>⇒</mo> <mtext>risk-loving</mtext></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: Numerical Example
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The application of EUT is easily illustrated in Python. Assume the example model
    economy from the previous section <math alttext="script upper M squared"><msup><mi>ℳ</mi>
    <mn mathvariant="script">2</mn></msup></math> . Assume that an agent with preferences
    <math alttext="succeeds-above-single-line-equals"><mo>⪰</mo></math> decides according
    to the EUT between different future payoffs. The Bernoulli utility of the agent
    is given by <math alttext="u left-parenthesis x right-parenthesis equals StartRoot
    x EndRoot"><mrow><mi>u</mi> <mrow><mo>(</mo> <mi>x</mi> <mo>)</mo></mrow> <mo>=</mo>
    <msqrt><mi>x</mi></msqrt></mrow></math> . In the example, payoff <math alttext="upper
    A 1"><msub><mi>A</mi> <mn>1</mn></msub></math> resulting from portfolio <math
    alttext="phi Subscript upper A"><msub><mi>ϕ</mi> <mi>A</mi></msub></math> is preferred
    over the payoff <math alttext="upper D 1"><msub><mi>D</mi> <mn>1</mn></msub></math>
    resulting from portfolio <math alttext="phi Subscript upper D"><msub><mi>ϕ</mi>
    <mi>D</mi></msub></math> .
  prefs: []
  type: TYPE_NORMAL
- en: 'The following code illustrates this application:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[![1](Images/1.png)](#co_normative_finance_CO2-1)'
  prefs: []
  type: TYPE_NORMAL
- en: The risk-averse Bernoulli utility function
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](#co_normative_finance_CO2-2)'
  prefs: []
  type: TYPE_NORMAL
- en: Two portfolios with different weights
  prefs: []
  type: TYPE_NORMAL
- en: '[![3](Images/3.png)](#co_normative_finance_CO2-4)'
  prefs: []
  type: TYPE_NORMAL
- en: Shows that the cost to set up each portfolio is the same
  prefs: []
  type: TYPE_NORMAL
- en: '[![4](Images/4.png)](#co_normative_finance_CO2-5)'
  prefs: []
  type: TYPE_NORMAL
- en: The uncertain payoff of one portfolio…
  prefs: []
  type: TYPE_NORMAL
- en: '[![5](Images/5.png)](#co_normative_finance_CO2-7)'
  prefs: []
  type: TYPE_NORMAL
- en: …and the other one
  prefs: []
  type: TYPE_NORMAL
- en: '[![6](Images/6.png)](#co_normative_finance_CO2-9)'
  prefs: []
  type: TYPE_NORMAL
- en: The probability measure
  prefs: []
  type: TYPE_NORMAL
- en: '[![7](Images/7.png)](#co_normative_finance_CO2-10)'
  prefs: []
  type: TYPE_NORMAL
- en: The expected utility function
  prefs: []
  type: TYPE_NORMAL
- en: '[![8](Images/8.png)](#co_normative_finance_CO2-11)'
  prefs: []
  type: TYPE_NORMAL
- en: The utility values for the two uncertain payoffs
  prefs: []
  type: TYPE_NORMAL
- en: 'A typical problem in this context is to derive an optimal portfolio (that is,
    one that maximizes the expected utility) given a fixed budget of the agent <math
    alttext="w greater-than 0"><mrow><mi>w</mi> <mo>></mo> <mn>0</mn></mrow></math>
    . The following Python code models this problem and solves it exactly. Of its
    available budget, the agent puts roughly 60% in the risky asset and roughly 40%
    in the risk-less asset. The results are mainly driven by the particular form of
    the Bernoulli utility function:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[![1](Images/1.png)](#co_normative_finance_CO3-1)'
  prefs: []
  type: TYPE_NORMAL
- en: The fixed budget of the agent
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](#co_normative_finance_CO3-2)'
  prefs: []
  type: TYPE_NORMAL
- en: The budget constraint for use with `minimize`^([7](ch03.xhtml#idm45625330715848))
  prefs: []
  type: TYPE_NORMAL
- en: '[![3](Images/3.png)](#co_normative_finance_CO3-3)'
  prefs: []
  type: TYPE_NORMAL
- en: The expected utility function defined over portfolios
  prefs: []
  type: TYPE_NORMAL
- en: '[![4](Images/4.png)](#co_normative_finance_CO3-5)'
  prefs: []
  type: TYPE_NORMAL
- en: Minimizing `-EUT_(phi)` maximizes `EUT_(phi)`
  prefs: []
  type: TYPE_NORMAL
- en: '[![5](Images/5.png)](#co_normative_finance_CO3-6)'
  prefs: []
  type: TYPE_NORMAL
- en: The initial guess for the optimization
  prefs: []
  type: TYPE_NORMAL
- en: '[![6](Images/6.png)](#co_normative_finance_CO3-7)'
  prefs: []
  type: TYPE_NORMAL
- en: The budget constraint applied
  prefs: []
  type: TYPE_NORMAL
- en: '[![7](Images/7.png)](#co_normative_finance_CO3-8)'
  prefs: []
  type: TYPE_NORMAL
- en: The optimal results, including the optimal portfolio under `x`
  prefs: []
  type: TYPE_NORMAL
- en: '[![8](Images/8.png)](#co_normative_finance_CO3-9)'
  prefs: []
  type: TYPE_NORMAL
- en: The optimal (highest) expected utility given the budget of <math alttext="w
    equals 10"><mrow><mi>w</mi> <mo>=</mo> <mn>10</mn></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: Mean-Variance Portfolio Theory
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Mean-variance portfolio (MVP) theory, according to Markowitz (1952), is another
    cornerstone in financial theory. It is one of the first theories of investment
    under uncertainty that focused on statistical measures only for the construction
    of stock investment portfolios. MVP completely abstracts from, say, fundamentals
    of a company that might drive its stock performance or assumptions about the future
    competitiveness of a company that might be important for the growth prospects
    of a company. Basically, the only input data that counts is the time series of
    share prices and statistics derived therefrom, such as the (historical) annualized
    mean return and the (historical) annualized variance of the returns.
  prefs: []
  type: TYPE_NORMAL
- en: Assumptions and Results
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The central assumption of MVP, according to Markowitz (1952), is that investors
    *only* care about expected returns and the variance of these returns:'
  prefs: []
  type: TYPE_NORMAL
- en: We next consider the rule that the investor does (or should) consider expected
    return a desirable thing and variance of return an undesirable thing. This rule
    has many sound points, both as a maxim for, and hypothesis about, investment behavior.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The portfolio with maximum expected return is not necessarily the one with minimum
    variance. There is a rate at which the investor can gain expected return by taking
    on variance, or reduce variance by giving up expected return.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This approach to investors’ preferences is quite different to the approach that
    defines an agent’s preferences and utility function over payoffs directly. MVP
    rather assumes that an agent’s preferences and utility function can be defined
    over the first and second moment of the returns an investment portfolio is expected
    to yield.
  prefs: []
  type: TYPE_NORMAL
- en: Implicitly Assumed Normal Distribution
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In general, MVP theory, focusing on one period portfolio risk and return only,
    is not compatible with standard EUT. One way of resolving this issue is to assume
    that returns of risky assets are normally distributed such that the first and
    second moments are sufficient to describe the full distribution of an asset’s
    returns. This is something almost never observed in real financial data, as the
    next chapter illustrates. The other way is to assume a particular quadratic Bernoulli
    utility function, as shown in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Portfolio statistics
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Assume a static economy <math alttext="script upper M Superscript upper N Baseline
    equals left-parenthesis StartSet normal upper Omega comma script upper F comma
    upper P EndSet comma double-struck upper A right-parenthesis"><mrow><msup><mi>ℳ</mi>
    <mi>N</mi></msup> <mo>=</mo> <mrow><mo>(</mo> <mrow><mo>{</mo> <mi>Ω</mi> <mo>,</mo>
    <mi>ℱ</mi> <mo>,</mo> <mi>P</mi> <mo>}</mo></mrow> <mo>,</mo> <mi>𝔸</mi> <mo>)</mo></mrow></mrow></math>
    , for which the set of tradable assets <math alttext="double-struck upper A"><mi>𝔸</mi></math>
    consists of <math alttext="upper N"><mi>N</mi></math> risky assets, <math alttext="upper
    A Superscript 1 Baseline comma upper A squared comma ellipsis comma upper A Superscript
    upper N"><mrow><msup><mi>A</mi> <mn>1</mn></msup> <mo>,</mo> <msup><mi>A</mi>
    <mn>2</mn></msup> <mo>,</mo> <mo>...</mo> <mo>,</mo> <msup><mi>A</mi> <mi>N</mi></msup></mrow></math>
    . With <math alttext="upper A 0 Superscript n"><msubsup><mi>A</mi> <mn>0</mn>
    <mi>n</mi></msubsup></math> being the fixed price of asset <math alttext="n"><mi>n</mi></math>
    today and <math alttext="upper A 1 Superscript n"><msubsup><mi>A</mi> <mn>1</mn>
    <mi>n</mi></msubsup></math> being its payoff in one year, the (simple) net returns
    vector <math alttext="r Superscript n"><msup><mi>r</mi> <mi>n</mi></msup></math>
    of asset <math alttext="n"><mi>n</mi></math> is defined by the following:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="r Superscript n Baseline equals StartFraction upper A 1 Superscript
    n Baseline Over upper A 0 Superscript n Baseline EndFraction minus 1" display="block"><mrow><msup><mi>r</mi>
    <mi>n</mi></msup> <mo>=</mo> <mfrac><msubsup><mi>A</mi> <mn>1</mn> <mi>n</mi></msubsup>
    <msubsup><mi>A</mi> <mn>0</mn> <mi>n</mi></msubsup></mfrac> <mo>-</mo> <mn>1</mn></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'For all future states having the same probability to unfold, the *expected
    return* of asset <math alttext="n"><mi>n</mi></math> is given by:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="mu Superscript n Baseline equals StartFraction 1 Over StartAbsoluteValue
    normal upper Omega EndAbsoluteValue EndFraction sigma-summation Underscript omega
    Overscript normal upper Omega Endscripts r Superscript n Baseline left-parenthesis
    omega right-parenthesis" display="block"><mrow><msup><mi>μ</mi> <mi>n</mi></msup>
    <mo>=</mo> <mfrac><mn>1</mn> <mrow><mo>|</mo><mi>Ω</mi><mo>|</mo></mrow></mfrac>
    <munderover><mo>∑</mo> <mrow><mi>ω</mi></mrow> <mi>Ω</mi></munderover> <msup><mi>r</mi>
    <mi>n</mi></msup> <mrow><mo>(</mo> <mi>ω</mi> <mo>)</mo></mrow></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'Accordingly, the *vector of expected returns* is given by the following:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="mu equals Start 4 By 1 Matrix 1st Row  mu Superscript 1 Baseline
    2nd Row  mu squared 3rd Row   ellipsis 4th Row  mu Superscript upper N EndMatrix"
    display="block"><mrow><mi>μ</mi> <mo>=</mo> <mfenced open="[" close="]"><mtable><mtr><mtd><msup><mi>μ</mi>
    <mn>1</mn></msup></mtd></mtr> <mtr><mtd><msup><mi>μ</mi> <mn>2</mn></msup></mtd></mtr>
    <mtr><mtd><mo>⋮</mo></mtd></mtr> <mtr><mtd><msup><mi>μ</mi> <mi>N</mi></msup></mtd></mtr></mtable></mfenced></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: A *portfolio* (vector) <math alttext="phi equals left-parenthesis phi Superscript
    1 Baseline comma phi squared comma ellipsis comma phi Superscript upper N Baseline
    right-parenthesis Superscript upper T"><mrow><mi>ϕ</mi> <mo>=</mo> <msup><mfenced
    separators="" open="(" close=")"><msup><mi>ϕ</mi> <mn>1</mn></msup> <mo>,</mo><msup><mi>ϕ</mi>
    <mn>2</mn></msup> <mo>,</mo><mo>...</mo><mo>,</mo><msup><mi>ϕ</mi> <mi>N</mi></msup></mfenced>
    <mi>T</mi></msup></mrow></math> , with <math alttext="phi Subscript n Baseline
    greater-than-or-equal-to 0"><mrow><msub><mi>ϕ</mi> <mi>n</mi></msub> <mo>≥</mo>
    <mn>0</mn></mrow></math> and <math alttext="sigma-summation Underscript n Overscript
    upper N Endscripts phi Superscript n Baseline equals 1"><mrow><msubsup><mo>∑</mo>
    <mi>n</mi> <mi>N</mi></msubsup> <msup><mi>ϕ</mi> <mi>n</mi></msup> <mo>=</mo>
    <mn>1</mn></mrow></math> , assigns weights to each asset in the portfolio.^([8](ch03.xhtml#idm45625330610520))
  prefs: []
  type: TYPE_NORMAL
- en: 'The *expected return of the portfolio* is then given by the dot product of
    the portfolio weights vector and the vector of expected returns:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="mu Superscript p h i Baseline equals phi dot mu" display="block"><mrow><msup><mi>μ</mi>
    <mrow><mi>p</mi><mi>h</mi><mi>i</mi></mrow></msup> <mo>=</mo> <mi>ϕ</mi> <mo>·</mo>
    <mi>μ</mi></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'Now define the *covariance* between assets <math alttext="n"><mi>n</mi></math>
    and <math alttext="m"><mi>m</mi></math> by the following:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="sigma Subscript m n Baseline equals sigma-summation Underscript
    omega Overscript normal upper Omega Endscripts left-parenthesis r Superscript
    m Baseline left-parenthesis omega right-parenthesis minus mu Superscript m Baseline
    right-parenthesis left-parenthesis r Superscript n Baseline left-parenthesis omega
    right-parenthesis minus mu Superscript n Baseline right-parenthesis" display="block"><mrow><msub><mi>σ</mi>
    <mrow><mi>m</mi><mi>n</mi></mrow></msub> <mo>=</mo> <munderover><mo>∑</mo> <mrow><mi>ω</mi></mrow>
    <mi>Ω</mi></munderover> <mfenced separators="" open="(" close=")"><msup><mi>r</mi>
    <mi>m</mi></msup> <mrow><mo>(</mo> <mi>ω</mi> <mo>)</mo></mrow> <mo>-</mo> <msup><mi>μ</mi>
    <mi>m</mi></msup></mfenced> <mfenced separators="" open="(" close=")"><msup><mi>r</mi>
    <mi>n</mi></msup> <mrow><mo>(</mo> <mi>ω</mi> <mo>)</mo></mrow> <mo>-</mo> <msup><mi>μ</mi>
    <mi>n</mi></msup></mfenced></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'The *covariance matrix* then is given by:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="normal upper Sigma equals Start 4 By 4 Matrix 1st Row 1st Column
    sigma 11 2nd Column sigma 12 3rd Column  ellipsis 4th Column sigma Subscript 1
    n Baseline 2nd Row 1st Column sigma 21 2nd Column sigma 22 3rd Column  ellipsis
    4th Column sigma Subscript 2 n Baseline 3rd Row 1st Column  ellipsis 2nd Column  ellipsis
    3rd Column  ellipsis 4th Column  ellipsis 4th Row 1st Column sigma Subscript n
    Baseline 1 Baseline 2nd Column sigma Subscript n Baseline 2 Baseline 3rd Column  ellipsis
    4th Column sigma Subscript n n EndMatrix" display="block"><mrow><mi>Σ</mi> <mo>=</mo>
    <mfenced open="[" close="]"><mtable><mtr><mtd><msub><mi>σ</mi> <mn>11</mn></msub></mtd>
    <mtd><msub><mi>σ</mi> <mn>12</mn></msub></mtd> <mtd><mo>...</mo></mtd> <mtd><msub><mi>σ</mi>
    <mrow><mn>1</mn><mi>n</mi></mrow></msub></mtd></mtr> <mtr><mtd><msub><mi>σ</mi>
    <mn>21</mn></msub></mtd> <mtd><msub><mi>σ</mi> <mn>22</mn></msub></mtd> <mtd><mo>...</mo></mtd>
    <mtd><msub><mi>σ</mi> <mrow><mn>2</mn><mi>n</mi></mrow></msub></mtd></mtr> <mtr><mtd><mo>⋮</mo></mtd>
    <mtd><mo>⋮</mo></mtd> <mtd><mo>⋱</mo></mtd> <mtd><mo>⋮</mo></mtd></mtr> <mtr><mtd><msub><mi>σ</mi>
    <mrow><mi>n</mi><mn>1</mn></mrow></msub></mtd> <mtd><msub><mi>σ</mi> <mrow><mi>n</mi><mn>2</mn></mrow></msub></mtd>
    <mtd><mo>...</mo></mtd> <mtd><msub><mi>σ</mi> <mrow><mi>n</mi><mi>n</mi></mrow></msub></mtd></mtr></mtable></mfenced></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'The *expected variance of the portfolio* is then in turn given by the double
    dot product:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="phi Superscript p h i Baseline equals phi Superscript upper T
    Baseline dot normal upper Sigma dot phi" display="block"><mrow><msup><mi>φ</mi>
    <mrow><mi>p</mi><mi>h</mi><mi>i</mi></mrow></msup> <mo>=</mo> <msup><mi>ϕ</mi>
    <mi>T</mi></msup> <mo>·</mo> <mi>Σ</mi> <mo>·</mo> <mi>ϕ</mi></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'The *expected volatility of the portfolio* accordingly is the following:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="sigma Superscript p h i Baseline equals StartRoot phi Superscript
    p h i Baseline EndRoot" display="block"><mrow><msup><mi>σ</mi> <mrow><mi>p</mi><mi>h</mi><mi>i</mi></mrow></msup>
    <mo>=</mo> <msqrt><msup><mi>φ</mi> <mrow><mi>p</mi><mi>h</mi><mi>i</mi></mrow></msup></msqrt></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: Sharpe ratio
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Sharpe (1966) introduces a measure to judge the risk-adjusted performance of
    mutual funds and other portfolios, or even single risky assets. In its simplest
    form, it relates the (expected, realized) return of a portfolio to its (expected,
    realized) volatility. Formally, the *Sharpe ratio* therefore can be defined by
    the following:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="pi Superscript p h i Baseline equals StartFraction mu Superscript
    p h i Baseline Over sigma Superscript p h i Baseline EndFraction" display="block"><mrow><msup><mi>π</mi>
    <mrow><mi>p</mi><mi>h</mi><mi>i</mi></mrow></msup> <mo>=</mo> <mfrac><msup><mi>μ</mi>
    <mrow><mi>p</mi><mi>h</mi><mi>i</mi></mrow></msup> <msup><mi>σ</mi> <mrow><mi>p</mi><mi>h</mi><mi>i</mi></mrow></msup></mfrac></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'If <math alttext="r"><mi>r</mi></math> represents the risk-less short rate,
    the *risk premium* or *excess return* of a portfolio <math alttext="p h i"><mrow><mi>p</mi>
    <mi>h</mi> <mi>i</mi></mrow></math> over a risk-free alternative is defined by
    <math alttext="mu Superscript p h i Baseline minus r"><mrow><msup><mi>μ</mi> <mrow><mi>p</mi><mi>h</mi><mi>i</mi></mrow></msup>
    <mo>-</mo> <mi>r</mi></mrow></math> . In another version of the Sharpe ratio,
    this risk premium is the numerator:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="pi Superscript p h i Baseline equals StartFraction mu Superscript
    p h i Baseline minus r Over sigma Superscript p h i Baseline EndFraction" display="block"><mrow><msup><mi>π</mi>
    <mrow><mi>p</mi><mi>h</mi><mi>i</mi></mrow></msup> <mo>=</mo> <mfrac><mrow><msup><mi>μ</mi>
    <mrow><mi>p</mi><mi>h</mi><mi>i</mi></mrow></msup> <mo>-</mo><mi>r</mi></mrow>
    <msup><mi>σ</mi> <mrow><mi>p</mi><mi>h</mi><mi>i</mi></mrow></msup></mfrac></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: If the risk-less short rate is relatively low, the two versions do not yield
    too different numerical results if the same risk-less short rate is applied. In
    particular, when ranking different portfolios according to the Sharpe ratio, the
    two versions should generate the same ranking order, everything else equal.
  prefs: []
  type: TYPE_NORMAL
- en: Numerical Example
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Getting back to the static model economy <math alttext="script upper M squared"><msup><mi>ℳ</mi>
    <mn>2</mn></msup></math> , the basic notions of MVP can again be easily illustrated
    by the use of Python.
  prefs: []
  type: TYPE_NORMAL
- en: Portfolio statistics
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'First, here is the derivation of the portfolio *expected return*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[![1](Images/1.png)](#co_normative_finance_CO4-1)'
  prefs: []
  type: TYPE_NORMAL
- en: Return vector of the risky asset
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](#co_normative_finance_CO4-3)'
  prefs: []
  type: TYPE_NORMAL
- en: Return vector of the risk-less asset
  prefs: []
  type: TYPE_NORMAL
- en: '[![3](Images/3.png)](#co_normative_finance_CO4-5)'
  prefs: []
  type: TYPE_NORMAL
- en: Expected return function
  prefs: []
  type: TYPE_NORMAL
- en: '[![4](Images/4.png)](#co_normative_finance_CO4-6)'
  prefs: []
  type: TYPE_NORMAL
- en: Expected returns of the traded assets
  prefs: []
  type: TYPE_NORMAL
- en: '[![5](Images/5.png)](#co_normative_finance_CO4-8)'
  prefs: []
  type: TYPE_NORMAL
- en: Return matrix for the traded assets
  prefs: []
  type: TYPE_NORMAL
- en: '[![6](Images/6.png)](#co_normative_finance_CO4-10)'
  prefs: []
  type: TYPE_NORMAL
- en: Expected return vector
  prefs: []
  type: TYPE_NORMAL
- en: 'Second, the *variance* and *volatility*, as well as the *covariance matrix*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[![1](Images/1.png)](#co_normative_finance_CO5-1)'
  prefs: []
  type: TYPE_NORMAL
- en: The variance function
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](#co_normative_finance_CO5-2)'
  prefs: []
  type: TYPE_NORMAL
- en: The volatility function
  prefs: []
  type: TYPE_NORMAL
- en: '[![3](Images/3.png)](#co_normative_finance_CO5-3)'
  prefs: []
  type: TYPE_NORMAL
- en: The covariance matrix
  prefs: []
  type: TYPE_NORMAL
- en: 'Third, the *portfolio expected return*, *portfolio expected variance*, and
    *portfolio expected volatility*, illustrated for an equally weighted portfolio:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[![1](Images/1.png)](#co_normative_finance_CO6-1)'
  prefs: []
  type: TYPE_NORMAL
- en: The portfolio expected return
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](#co_normative_finance_CO6-2)'
  prefs: []
  type: TYPE_NORMAL
- en: The portfolio expected variance
  prefs: []
  type: TYPE_NORMAL
- en: '[![3](Images/3.png)](#co_normative_finance_CO6-3)'
  prefs: []
  type: TYPE_NORMAL
- en: The portfolio expected volatility
  prefs: []
  type: TYPE_NORMAL
- en: Investment opportunity set
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Based on a Monte Carlo simulation for the portfolio weights <math alttext="phi"><mi>ϕ</mi></math>
    , one can visualize the investment opportunity set in the volatility-return space
    ([Figure 3-1](#figure_nf_01), generated by the following code snippet).
  prefs: []
  type: TYPE_NORMAL
- en: '![aiif 0301](Images/aiif_0301.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3-1\. Simulated expected portfolio volatility and return (one risky asset)
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Because there is only one risky asset and one risk-less asset, the opportunity
    set is a straight line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '[![1](Images/1.png)](#co_normative_finance_CO7-1)'
  prefs: []
  type: TYPE_NORMAL
- en: Random portfolio compositions, normalized to 1
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](#co_normative_finance_CO7-3)'
  prefs: []
  type: TYPE_NORMAL
- en: Expected portfolio volatility and return for the random compositions
  prefs: []
  type: TYPE_NORMAL
- en: 'Consider now the case of a static three-state economy <math alttext="script
    upper M cubed"><msup><mi>ℳ</mi> <mn>3</mn></msup></math> for which <math alttext="normal
    upper Omega equals StartSet u comma m comma d EndSet"><mrow><mi>Ω</mi> <mo>=</mo>
    <mo>{</mo> <mi>u</mi> <mo>,</mo> <mi>m</mi> <mo>,</mo> <mi>d</mi> <mo>}</mo></mrow></math>
    holds. The three states are equally likely, <math alttext="upper P equals StartSet
    one-third comma one-third comma one-third EndSet"><mrow><mi>P</mi> <mo>=</mo>
    <mfenced separators="" open="{" close="}"><mfrac><mn>1</mn> <mn>3</mn></mfrac>
    <mo>,</mo> <mfrac><mn>1</mn> <mn>3</mn></mfrac> <mo>,</mo> <mfrac><mn>1</mn> <mn>3</mn></mfrac></mfenced></mrow></math>
    . The set of tradable assets consists of two risky assets <math alttext="upper
    S"><mi>S</mi></math> and <math alttext="upper T"><mi>T</mi></math> with a fixed
    price of <math alttext="upper S 0 equals upper T 0 equals 10"><mrow><msub><mi>S</mi>
    <mn>0</mn></msub> <mo>=</mo> <msub><mi>T</mi> <mn>0</mn></msub> <mo>=</mo> <mn>10</mn></mrow></math>
    and uncertain payoffs, respectively, of the following:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="upper S 1 equals Start 3 By 1 Matrix 1st Row  20 2nd Row  10
    3rd Row  5 EndMatrix" display="block"><mrow><msub><mi>S</mi> <mn>1</mn></msub>
    <mo>=</mo> <mfenced open="[" close="]"><mtable><mtr><mtd><mn>20</mn></mtd></mtr>
    <mtr><mtd><mn>10</mn></mtd></mtr> <mtr><mtd><mn>5</mn></mtd></mtr></mtable></mfenced></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: and
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="upper T 1 equals Start 3 By 1 Matrix 1st Row  1 2nd Row  12 3rd
    Row  13 EndMatrix" display="block"><mrow><msub><mi>T</mi> <mn>1</mn></msub> <mo>=</mo>
    <mfenced open="[" close="]"><mtable><mtr><mtd><mn>1</mn></mtd></mtr> <mtr><mtd><mn>12</mn></mtd></mtr>
    <mtr><mtd><mn>13</mn></mtd></mtr></mtable></mfenced></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: Based on these assumptions, the following Python code repeats the Monte Carlo
    simulation and visualizes the results in [Figure 3-2](#figure_nf_02). With two
    risky assets, the well-known MVP “bullet” becomes visible.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '[![1](Images/1.png)](#co_normative_finance_CO8-1)'
  prefs: []
  type: TYPE_NORMAL
- en: New probability measure for three states
  prefs: []
  type: TYPE_NORMAL
- en: '![aiif 0302](Images/aiif_0302.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3-2\. Simulated expected portfolio volatility and return (two risky assets)
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Minimum volatility and maximum Sharpe ratio
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Next, the derivation of the *minimum volatility* (minimum variance) and *maximum
    Sharpe ratio* portfolios. [Figure 3-3](#figure_nf_03) shows the location of the
    two portfolios in the risk-return space.
  prefs: []
  type: TYPE_NORMAL
- en: 'Although the risky asset <math alttext="upper T"><mi>T</mi></math> has a negative
    expected return, it has a significant weight in the maximum Sharpe ratio portfolio.
    This is due to diversification effects that lower the portfolio risk more than
    the expected return of the portfolio is reduced:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '[![1](Images/1.png)](#co_normative_finance_CO9-1)'
  prefs: []
  type: TYPE_NORMAL
- en: Minimizes the expected portfolio volatility
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](#co_normative_finance_CO9-2)'
  prefs: []
  type: TYPE_NORMAL
- en: Defines the Sharpe ratio function, assuming a short rate of `0`
  prefs: []
  type: TYPE_NORMAL
- en: '[![3](Images/3.png)](#co_normative_finance_CO9-3)'
  prefs: []
  type: TYPE_NORMAL
- en: Maximizes the Sharpe ratio by minimizing its negative value
  prefs: []
  type: TYPE_NORMAL
- en: '![aiif 0303](Images/aiif_0303.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3-3\. Minimum volatility and maximum Sharpe ratio portfolios
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Efficient frontier
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'An *efficient portfolio* is one that has a maximum expected return (risk) given
    its expected risk (return). In [Figure 3-3](#figure_nf_03), all those portfolios
    that have a lower expected return than the minimum risk portfolio are *inefficient*.
    The following code derives the efficient portfolios in risk-return space and plots
    them as seen in [Figure 3-4](#figure_nf_04). The set of all efficient portfolios
    is called the *efficient frontier*, and agents will only choose a portfolio that
    lies on the efficient frontier:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '[![1](Images/1.png)](#co_normative_finance_CO10-1)'
  prefs: []
  type: TYPE_NORMAL
- en: The new constraint fixes a target level for the expected return.
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](#co_normative_finance_CO10-2)'
  prefs: []
  type: TYPE_NORMAL
- en: Generates the set of target expected returns.
  prefs: []
  type: TYPE_NORMAL
- en: '[![3](Images/3.png)](#co_normative_finance_CO10-3)'
  prefs: []
  type: TYPE_NORMAL
- en: Derives the minimum volatility portfolio given a target expected return.
  prefs: []
  type: TYPE_NORMAL
- en: '![aiif 0304](Images/aiif_0304.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3-4\. Efficient frontier
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Capital Asset Pricing Model
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The capital asset pricing model (CAPM) is one of the most widely documented
    and applied models in finance. At its core, it relates in linear fashion the expected
    return for a single stock to the expected return of the market portfolio, usually
    approximated by a broad stock index such as the S&P 500\. The model dates back
    to the pioneering work of Sharpe (1964) and Lintner (1965). Jones (2012, ch. 9)
    describes the CAPM in relation to MVP as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Capital market theory is a positive theory in that it hypothesizes how investors
    do behave rather than how investors should behave, as in the case of modern portfolio
    theory (MVP). It is reasonable to view capital market theory as an extension of
    portfolio theory, but it is important to understand that MVP is not based on the
    validity, or lack thereof, of capital market theory.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The specific equilibrium model of interest to many investors is known as the
    capital asset pricing model, typically referred to as the CAPM. It allows us to
    assess the relevant risk of an individual security as well as to assess the relationship
    between risk and the returns expected from investing. The CAPM is attractive as
    an equilibrium model because of its simplicity and its implications.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Assumptions and Results
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Assume the static model economy from the previous section <math alttext="script
    upper M Superscript upper N Baseline equals left-parenthesis StartSet normal upper
    Omega comma script upper F comma upper P EndSet comma double-struck upper A right-parenthesis"><mrow><msup><mi>ℳ</mi>
    <mi>N</mi></msup> <mo>=</mo> <mrow><mo>(</mo> <mrow><mo>{</mo> <mi>Ω</mi> <mo>,</mo>
    <mi>ℱ</mi> <mo>,</mo> <mi>P</mi> <mo>}</mo></mrow> <mo>,</mo> <mi>𝔸</mi> <mo>)</mo></mrow></mrow></math>
    with <math alttext="upper N"><mi>N</mi></math> traded assets and all simplifying
    assumptions. In the CAPM, agents are assumed to invest according to MVP, caring
    only about the risk and return statistics of risky assets over one period.
  prefs: []
  type: TYPE_NORMAL
- en: In a *capital market equilibrium*, all available assets are held by all agents
    and the markets clear. Since agents are assumed to be identical in that they use
    MVP to form their efficient portfolios, this implies that all agents must hold
    the same efficient portfolio (in terms of composition) since the set of tradable
    assets is the same for every agent. In other words, the *market portfolio* (set
    of tradable assets) must lie on the efficient frontier. If this were not the case,
    the market could not be in equilibrium.
  prefs: []
  type: TYPE_NORMAL
- en: What is the mechanism to obtain a capital market equilibrium? Today’s prices
    of the tradable assets are the mechanism to make sure that markets clear. If agents
    do not demand enough of a tradable asset, its price needs to decrease. If demand
    is higher than supply, its price needs to increase. If prices are set correctly,
    demand and supply are equal for every tradable asset. While MVP takes the prices
    of tradable assets as given, the CAPM is a theory and model about what the equilibrium
    price of an asset *should be*, given its risk-return characteristics.
  prefs: []
  type: TYPE_NORMAL
- en: 'The CAPM assumes the existence of (at least) one risk-free asset in which every
    agent can invest any amount and which earns the risk-free rate of <math alttext="r
    overbar"><mover accent="true"><mi>r</mi> <mo>¯</mo></mover></math> . Every agent
    will therefore hold a combination of the market portfolio and the risk-free asset
    in equilibrium, something known as the *two fund separation theorem*.^([9](ch03.xhtml#idm45625327908440))
    The set of all such portfolios is called the *capital market line* (CML). [Figure 3-5](#figure_nf_05)
    shows the CML schematically. Portfolios to the right of the market portfolio are
    only achievable if agents are allowed to sell the risk-free asset short and to
    borrow money that way:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '![aiif 0305](Images/aiif_0305.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3-5\. Capital market line (CML)
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'If <math alttext="sigma Subscript upper M Baseline comma mu Subscript upper
    M Baseline"><mrow><msub><mi>σ</mi> <mi>M</mi></msub> <mo>,</mo> <msub><mi>μ</mi>
    <mi>M</mi></msub></mrow></math> are the expected volatility and return of the
    market portfolio, the capital market line relating the expected portfolio return
    <math alttext="mu"><mi>μ</mi></math> to the expected volatility <math alttext="sigma"><mi>σ</mi></math>
    is defined by the following:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="mu equals r overbar plus StartFraction mu Subscript upper M Baseline
    minus r overbar Over sigma Subscript upper M Baseline EndFraction sigma" display="block"><mrow><mi>μ</mi>
    <mo>=</mo> <mover accent="true"><mi>r</mi> <mo>¯</mo></mover> <mo>+</mo> <mfrac><mrow><msub><mi>μ</mi>
    <mi>M</mi></msub> <mo>-</mo><mover accent="true"><mi>r</mi> <mo>¯</mo></mover></mrow>
    <msub><mi>σ</mi> <mi>M</mi></msub></mfrac> <mi>σ</mi></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'The following expression is called the *market price of risk*:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="StartFraction mu Subscript upper M Baseline minus r overbar Over
    sigma Subscript upper M Baseline EndFraction" display="block"><mfrac><mrow><msub><mi>μ</mi>
    <mi>M</mi></msub> <mo>-</mo><mover accent="true"><mi>r</mi> <mo>¯</mo></mover></mrow>
    <msub><mi>σ</mi> <mi>M</mi></msub></mfrac></math>
  prefs: []
  type: TYPE_NORMAL
- en: It expresses how much more expected return in equilibrium is needed for an agent
    to bear one unit more of risk.
  prefs: []
  type: TYPE_NORMAL
- en: 'The CAPM then relates the expected return of any tradable risky asset <math
    alttext="n equals 1 comma 2 comma ellipsis comma upper N"><mrow><mi>n</mi> <mo>=</mo>
    <mn>1</mn> <mo>,</mo> <mn>2</mn> <mo>,</mo> <mo>...</mo> <mo>,</mo> <mi>N</mi></mrow></math>
    to the expected return of the market portfolio as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="mu Superscript n Baseline equals r overbar plus beta Subscript
    n Baseline left-parenthesis mu Subscript upper M Baseline minus r overbar right-parenthesis"
    display="block"><mrow><msup><mi>μ</mi> <mi>n</mi></msup> <mo>=</mo> <mover accent="true"><mi>r</mi>
    <mo>¯</mo></mover> <mo>+</mo> <msub><mi>β</mi> <mi>n</mi></msub> <mrow><mo>(</mo>
    <msub><mi>μ</mi> <mi>M</mi></msub> <mo>-</mo> <mover accent="true"><mi>r</mi>
    <mo>¯</mo></mover> <mo>)</mo></mrow></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'Here, <math alttext="beta Subscript n"><msub><mi>β</mi> <mi>n</mi></msub></math>
    is defined by the covariance of the market portfolio with the risky asset <math
    alttext="n"><mi>n</mi></math> divided by the variance of the market portfolio
    itself:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="beta Subscript n Baseline equals StartFraction sigma Subscript
    upper M comma n Baseline Over sigma Subscript upper M Superscript 2 Baseline EndFraction"
    display="block"><mrow><msub><mi>β</mi> <mi>n</mi></msub> <mo>=</mo> <mfrac><msub><mi>σ</mi>
    <mrow><mi>M</mi><mo>,</mo><mi>n</mi></mrow></msub> <msubsup><mi>σ</mi> <mi>M</mi>
    <mn>2</mn></msubsup></mfrac></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: When <math alttext="beta Subscript n Baseline equals 0"><mrow><msub><mi>β</mi>
    <mi>n</mi></msub> <mo>=</mo> <mn>0</mn></mrow></math> , the expected return according
    to the CAPM formula is the risk-free rate. The higher <math alttext="beta Subscript
    n"><msub><mi>β</mi> <mi>n</mi></msub></math> is, the higher the expected return
    for the risky asset will be. <math alttext="beta Subscript n"><msub><mi>β</mi>
    <mi>n</mi></msub></math> measures *risk that is nondiversifiable*. This type of
    risk is also called *market risk* or *systemic risk*. According to the CAPM, this
    is the only risk for which an agent should be rewarded with a higher expected
    return.
  prefs: []
  type: TYPE_NORMAL
- en: Numerical Example
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Assume the static model economy with three possible future states from before
    <math alttext="script upper M cubed equals left-parenthesis StartSet normal upper
    Omega comma script upper F comma upper P EndSet comma double-struck upper A right-parenthesis"><mrow><msup><mi>ℳ</mi>
    <mn>3</mn></msup> <mo>=</mo> <mrow><mo>(</mo> <mrow><mo>{</mo> <mi>Ω</mi> <mo>,</mo>
    <mi>ℱ</mi> <mo>,</mo> <mi>P</mi> <mo>}</mo></mrow> <mo>,</mo> <mi>𝔸</mi> <mo>)</mo></mrow></mrow></math>
    with the opportunity to borrow and lend at a risk-free rate of <math alttext="r
    overbar equals"><mrow><mover accent="true"><mi>r</mi> <mo>¯</mo></mover> <mo>=</mo></mrow></math>
    0.0025\. The two risky assets <math alttext="upper S comma upper T"><mrow><mi>S</mi>
    <mo>,</mo> <mi>T</mi></mrow></math> are available in quantities of 0.8 and 0.2,
    respectively.
  prefs: []
  type: TYPE_NORMAL
- en: Capital market line
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Figure 3-6](#figure_nf_06) shows the efficient frontier, the market portfolio,
    the risk-less asset, and the resulting capital market line in risk-return space:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '![aiif 0306](Images/aiif_0306.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3-6\. Capital market line with two risky assets
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Optimal portfolio
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Assume an agent with an expected utility function defined over future payoffs
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="upper U colon double-struck upper X right-arrow double-struck
    upper R Subscript plus Baseline comma x right-arrow from bar bold upper E Superscript
    upper P Baseline left-parenthesis u left-parenthesis x right-parenthesis right-parenthesis
    equals bold upper E Superscript upper P Baseline left-parenthesis x minus StartFraction
    b Over 2 EndFraction x squared right-parenthesis" display="block"><mrow><mi>U</mi>
    <mo>:</mo> <mi>𝕏</mi> <mo>→</mo> <msub><mi>ℝ</mi> <mo>+</mo></msub> <mo>,</mo>
    <mi>x</mi> <mo>↦</mo> <msup><mi>𝐄</mi> <mi>P</mi></msup> <mrow><mo>(</mo> <mi>u</mi>
    <mrow><mo>(</mo> <mi>x</mi> <mo>)</mo></mrow> <mo>)</mo></mrow> <mo>=</mo> <msup><mi>𝐄</mi>
    <mi>P</mi></msup> <mfenced separators="" open="(" close=")"><mi>x</mi> <mo>-</mo>
    <mfrac><mi>b</mi> <mn>2</mn></mfrac> <msup><mi>x</mi> <mn>2</mn></msup></mfenced></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'Here, <math alttext="b greater-than 0"><mrow><mi>b</mi> <mo>></mo> <mn>0</mn></mrow></math>
    . After some transformations, the expected utility function can then be expressed
    over risk-return combinations:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="upper U colon double-struck upper R Subscript double-struck plus
    Baseline times double-struck upper R Subscript double-struck plus Baseline right-arrow
    double-struck upper R comma left-parenthesis sigma comma mu right-parenthesis
    right-arrow from bar mu minus StartFraction b Over 2 EndFraction left-parenthesis
    sigma squared plus mu squared right-parenthesis" display="block"><mrow><mi>U</mi>
    <mo>:</mo> <msub><mi>ℝ</mi> <mo>+</mo></msub> <mo>×</mo> <msub><mi>ℝ</mi> <mo>+</mo></msub>
    <mo>→</mo> <mi>ℝ</mi> <mo>,</mo> <mrow><mo>(</mo> <mi>σ</mi> <mo>,</mo> <mi>μ</mi>
    <mo>)</mo></mrow> <mo>↦</mo> <mi>μ</mi> <mo>-</mo> <mfrac><mi>b</mi> <mn>2</mn></mfrac>
    <mrow><mo>(</mo> <msup><mi>σ</mi> <mn>2</mn></msup> <mo>+</mo> <msup><mi>μ</mi>
    <mn>2</mn></msup> <mo>)</mo></mrow></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: Specific Quadratic Utility Function
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Although the MVP theory and the CAPM both assume that investors only care about
    one period portfolio risk and return, this assumption is in general only consistent
    with the EUT when a specific form of the Bernoulli utility function is given:
    the quadratic utility. This type of Bernoulli function is almost exclusively mentioned
    and used in the context of MVP theory. Beyond that, its particular form and characteristics
    are usually considered inappropriate. Neither the assumption of normally distributed
    asset returns nor the quadratic utility function seems to be an “elegant” way
    of reconciling the inconsistency between EUT on the one hand and MVP theory and
    the CAPM on the other hand.'
  prefs: []
  type: TYPE_NORMAL
- en: 'What portfolio combination would the agent choose on the CML? A straightforward
    utility maximization, implemented in Python, yields the answer. To this end, fix
    the parameter <math alttext="b equals 1"><mrow><mi>b</mi> <mo>=</mo> <mn>1</mn></mrow></math>
    :'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '[![1](Images/1.png)](#co_normative_finance_CO11-1)'
  prefs: []
  type: TYPE_NORMAL
- en: The utility function in risk-return space
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](#co_normative_finance_CO11-2)'
  prefs: []
  type: TYPE_NORMAL
- en: The condition that the portfolio be on the CML
  prefs: []
  type: TYPE_NORMAL
- en: Indifference curves
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A visual analysis can illustrate the optimal decision making of the agent. Fixing
    a utility level for the agent, one can plot *indifference curves* in risk-return
    space. An optimal portfolio is found when an indifference curve is tangent to
    the CML. Any other indifference curve (not touching the CML or cutting the CML
    twice) cannot identify an optimal portfolio.
  prefs: []
  type: TYPE_NORMAL
- en: 'First, here is some symbolic Python code that transforms the utility function
    in risk-return space into a functional relationship between <math alttext="mu"><mi>μ</mi></math>
    and <math alttext="sigma"><mi>σ</mi></math> for a fixed utility level <math alttext="v"><mi>v</mi></math>
    and a fixed parameter value <math alttext="b"><mi>b</mi></math> . [Figure 3-7](#figure_nf_07)
    shows two indifference curves. Every <math alttext="left-parenthesis sigma comma
    mu right-parenthesis"><mrow><mo>(</mo> <mi>σ</mi> <mo>,</mo> <mi>μ</mi> <mo>)</mo></mrow></math>
    combination on such an indifference curve yields the same utility; the agent is
    indifferent between such portfolios:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '[![1](Images/1.png)](#co_normative_finance_CO12-1)'
  prefs: []
  type: TYPE_NORMAL
- en: Defines `SymPy` symbols
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](#co_normative_finance_CO12-2)'
  prefs: []
  type: TYPE_NORMAL
- en: Solves the utility function for <math alttext="mu"><mi>μ</mi></math>
  prefs: []
  type: TYPE_NORMAL
- en: '[![3](Images/3.png)](#co_normative_finance_CO12-4)'
  prefs: []
  type: TYPE_NORMAL
- en: Substitutes numerical values for <math alttext="b comma v"><mrow><mi>b</mi>
    <mo>,</mo> <mi>v</mi></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: '[![4](Images/4.png)](#co_normative_finance_CO12-6)'
  prefs: []
  type: TYPE_NORMAL
- en: Generates callable functions from the resulting equations
  prefs: []
  type: TYPE_NORMAL
- en: '[![5](Images/5.png)](#co_normative_finance_CO12-8)'
  prefs: []
  type: TYPE_NORMAL
- en: Specifies values for <math alttext="sigma"><mi>σ</mi></math> over which to evaluate
    the functions
  prefs: []
  type: TYPE_NORMAL
- en: '[![6](Images/6.png)](#co_normative_finance_CO12-9)'
  prefs: []
  type: TYPE_NORMAL
- en: Evaluates the callable functions for the two different utility levels
  prefs: []
  type: TYPE_NORMAL
- en: '![aiif 0307](Images/aiif_0307.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3-7\. Indifference curves in risk-return space
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'In a next step, the indifference curves need to be combined with the CML to
    find out visually what the optimal portfolio choice of the agent is. Making use
    of the previous numerical optimization results, [Figure 3-8](#figure_nf_08) shows
    the optimal portfolio—the point at which the indifference curve is tangent to
    the CML. [Figure 3-8](#figure_nf_08) shows that the agent indeed chooses a mixture
    of the market portfolio and the risk-less asset:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: '[![1](Images/1.png)](#co_normative_finance_CO13-1)'
  prefs: []
  type: TYPE_NORMAL
- en: Defines the indifference curve for the optimal utility level
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](#co_normative_finance_CO13-2)'
  prefs: []
  type: TYPE_NORMAL
- en: Derives numerical values to plot the indifference curve
  prefs: []
  type: TYPE_NORMAL
- en: '![aiif 0308](Images/aiif_0308.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3-8\. Optimal portfolio on the CML
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: The topics presented in this sub-section are usually discussed under *capital
    market theory* (CMT). The CAPM is part of that theory and shall be illustrated
    by the use of real financial time series data in the next chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Arbitrage Pricing Theory
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Early on, shortcomings of the CAPM were observed and then addressed in the
    finance literature. One of the major generalizations of the CAPM is the arbitrage
    pricing theory (APT) as proposed in Ross (1971) and Ross (1976). Ross (1976) introduces
    his paper as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: The purpose of this paper is to examine rigorously the arbitrage model of capital
    asset pricing developed in Ross (1971). The arbitrage model was proposed as an
    alternative to the mean variance capital asset pricing model, introduced by Sharpe,
    Lintner, and Treynor, that has become the major analytic tool for explaining phenomena
    observed in capital markets for risky assets.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Assumptions and Results
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The APT is a generalization of the CAPM to multiple risk factors. In that sense,
    APT does not assume that the market portfolio is the only relevant risk factor;
    there are rather multiple types of risk that together are assumed to drive the
    performance (expected returns) of a stock. Such risk factors might include size,
    volatility, value, and momentum.^([10](ch03.xhtml#idm45625326218712)) Beyond this
    major difference, the model relies on similar assumptions, such as that markets
    are perfect, that (unlimited) borrowing and lending are possible at the same constant
    rate, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: 'In its original dynamic version, as found in Ross (1976), the APT takes on
    the following form:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="y Subscript t Baseline equals a plus upper B f Subscript t Baseline
    plus epsilon Subscript t" display="block"><mrow><msub><mi>y</mi> <mi>t</mi></msub>
    <mo>=</mo> <mi>a</mi> <mo>+</mo> <mi>B</mi> <msub><mi>f</mi> <mi>t</mi></msub>
    <mo>+</mo> <msub><mi>ϵ</mi> <mi>t</mi></msub></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'Here, <math alttext="y Subscript t"><msub><mi>y</mi> <mi>t</mi></msub></math>
    is the vector of <math alttext="upper M"><mi>M</mi></math> observed variables—say,
    the expected returns of <math alttext="upper M"><mi>M</mi></math> different stocks—at
    time <math alttext="t"><mi>t</mi></math> :'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="y Subscript t Baseline equals Start 4 By 1 Matrix 1st Row  y
    Subscript t Superscript 1 Baseline 2nd Row  y Subscript t Superscript 2 Baseline
    3rd Row   ellipsis 4th Row  y Subscript t Superscript upper M EndMatrix" display="block"><mrow><msub><mi>y</mi>
    <mi>t</mi></msub> <mo>=</mo> <mfenced open="[" close="]"><mtable><mtr><mtd><msubsup><mi>y</mi>
    <mi>t</mi> <mn>1</mn></msubsup></mtd></mtr> <mtr><mtd><msubsup><mi>y</mi> <mi>t</mi>
    <mn>2</mn></msubsup></mtd></mtr> <mtr><mtd><mo>⋮</mo></mtd></mtr> <mtr><mtd><msubsup><mi>y</mi>
    <mi>t</mi> <mi>M</mi></msubsup></mtd></mtr></mtable></mfenced></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: '<math alttext="a"><mi>a</mi></math> is the vector of <math alttext="upper M"><mi>M</mi></math>
    constant terms:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="a equals Start 4 By 1 Matrix 1st Row  a Superscript 1 Baseline
    2nd Row  a squared 3rd Row   ellipsis 4th Row  a Superscript upper M EndMatrix"
    display="block"><mrow><mi>a</mi> <mo>=</mo> <mfenced open="[" close="]"><mtable><mtr><mtd><msup><mi>a</mi>
    <mn>1</mn></msup></mtd></mtr> <mtr><mtd><msup><mi>a</mi> <mn>2</mn></msup></mtd></mtr>
    <mtr><mtd><mo>⋮</mo></mtd></mtr> <mtr><mtd><msup><mi>a</mi> <mi>M</mi></msup></mtd></mtr></mtable></mfenced></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: '<math alttext="f Subscript t"><msub><mi>f</mi> <mi>t</mi></msub></math> is
    the vector of <math alttext="upper F"><mi>F</mi></math> factors at time <math
    alttext="t"><mi>t</mi></math> :'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="f Subscript t Baseline equals Start 4 By 1 Matrix 1st Row  f
    Subscript t Superscript 1 Baseline 2nd Row  f Subscript t Superscript 2 Baseline
    3rd Row   ellipsis 4th Row  f Subscript t Superscript upper F EndMatrix" display="block"><mrow><msub><mi>f</mi>
    <mi>t</mi></msub> <mo>=</mo> <mfenced open="[" close="]"><mtable><mtr><mtd><msubsup><mi>f</mi>
    <mi>t</mi> <mn>1</mn></msubsup></mtd></mtr> <mtr><mtd><msubsup><mi>f</mi> <mi>t</mi>
    <mn>2</mn></msubsup></mtd></mtr> <mtr><mtd><mo>⋮</mo></mtd></mtr> <mtr><mtd><msubsup><mi>f</mi>
    <mi>t</mi> <mi>F</mi></msubsup></mtd></mtr></mtable></mfenced></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: '<math alttext="upper B"><mi>B</mi></math> is the <math alttext="upper M times
    upper F"><mrow><mi>M</mi> <mo>×</mo> <mi>F</mi></mrow></math> matrix of the so-called
    factor loadings:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="upper B equals Start 4 By 4 Matrix 1st Row 1st Column b 11 2nd
    Column b 12 3rd Column  ellipsis 4th Column b Subscript 1 upper F Baseline 2nd
    Row 1st Column b 21 2nd Column b 22 3rd Column  ellipsis 4th Column b Subscript
    2 upper F Baseline 3rd Row 1st Column  ellipsis 2nd Column  ellipsis 3rd Column  ellipsis
    4th Column  ellipsis 4th Row 1st Column b Subscript upper M Baseline 1 Baseline
    2nd Column b Subscript upper M Baseline 2 Baseline 3rd Column  ellipsis 4th Column
    b Subscript upper M upper F EndMatrix" display="block"><mrow><mi>B</mi> <mo>=</mo>
    <mfenced open="[" close="]"><mtable><mtr><mtd><msub><mi>b</mi> <mn>11</mn></msub></mtd>
    <mtd><msub><mi>b</mi> <mn>12</mn></msub></mtd> <mtd><mo>...</mo></mtd> <mtd><msub><mi>b</mi>
    <mrow><mn>1</mn><mi>F</mi></mrow></msub></mtd></mtr> <mtr><mtd><msub><mi>b</mi>
    <mn>21</mn></msub></mtd> <mtd><msub><mi>b</mi> <mn>22</mn></msub></mtd> <mtd><mo>...</mo></mtd>
    <mtd><msub><mi>b</mi> <mrow><mn>2</mn><mi>F</mi></mrow></msub></mtd></mtr> <mtr><mtd><mo>⋮</mo></mtd>
    <mtd><mo>⋮</mo></mtd> <mtd><mo>⋱</mo></mtd> <mtd><mo>⋮</mo></mtd></mtr> <mtr><mtd><msub><mi>b</mi>
    <mrow><mi>M</mi><mn>1</mn></mrow></msub></mtd> <mtd><msub><mi>b</mi> <mrow><mi>M</mi><mn>2</mn></mrow></msub></mtd>
    <mtd><mo>...</mo></mtd> <mtd><msub><mi>b</mi> <mrow><mi>M</mi><mi>F</mi></mrow></msub></mtd></mtr></mtable></mfenced></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, <math alttext="epsilon Subscript t"><msub><mi>ϵ</mi> <mi>t</mi></msub></math>
    is the vector of <math alttext="upper M"><mi>M</mi></math> sufficiently independent
    residual terms:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="epsilon Subscript t Baseline equals Start 4 By 1 Matrix 1st Row  epsilon
    Subscript t Superscript 1 Baseline 2nd Row  epsilon Subscript t Superscript 2
    Baseline 3rd Row   ellipsis 4th Row  epsilon Subscript t Superscript upper M EndMatrix"
    display="block"><mrow><msub><mi>ϵ</mi> <mi>t</mi></msub> <mo>=</mo> <mfenced open="["
    close="]"><mtable><mtr><mtd><msubsup><mi>ϵ</mi> <mi>t</mi> <mn>1</mn></msubsup></mtd></mtr>
    <mtr><mtd><msubsup><mi>ϵ</mi> <mi>t</mi> <mn>2</mn></msubsup></mtd></mtr> <mtr><mtd><mo>⋮</mo></mtd></mtr>
    <mtr><mtd><msubsup><mi>ϵ</mi> <mi>t</mi> <mi>M</mi></msubsup></mtd></mtr></mtable></mfenced></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'Jones (2012, ch. 9) describes the difference between the CAPM and the APT as
    follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Similar to the CAPM, or any other asset pricing model, APT posits a relationship
    between expected return and risk. It does so, however, using different assumptions
    and procedures. Very importantly, APT is not critically dependent on an underlying
    market portfolio as is the CAPM, which predicts that only market risk influences
    expected returns. Instead, APT recognizes that several types of risk may affect
    security returns.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Both the CAPM and the APT relate the output variables with the relevant input
    factors in *linear* fashion. From an econometric point of view, both models are
    implemented based on linear ordinary least-squares (OLS) regression. While the
    CAPM can be implemented based on *univariate* linear OLS regression, the APT requires
    *multivariate* OLS regression.
  prefs: []
  type: TYPE_NORMAL
- en: Numerical Example
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following numerical example casts the APT in a static model, although the
    formulation given previously is a dynamic one. Assume the static model economy
    with three possible future states from the previous section, <math alttext="script
    upper M cubed equals left-parenthesis StartSet normal upper Omega comma script
    upper F comma upper P EndSet comma double-struck upper A right-parenthesis"><mrow><msup><mi>ℳ</mi>
    <mn>3</mn></msup> <mo>=</mo> <mrow><mo>(</mo> <mrow><mo>{</mo> <mi>Ω</mi> <mo>,</mo>
    <mi>ℱ</mi> <mo>,</mo> <mi>P</mi> <mo>}</mo></mrow> <mo>,</mo> <mi>𝔸</mi> <mo>)</mo></mrow></mrow></math>
    . Assume that the two risky assets are now the relevant risk factors in the economy
    and introduce a third asset <math alttext="upper V"><mi>V</mi></math> with the
    following future payoff:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="upper V 1 equals Start 3 By 1 Matrix 1st Row  12 2nd Row  15
    3rd Row  7 EndMatrix" display="block"><mrow><msub><mi>V</mi> <mn>1</mn></msub>
    <mo>=</mo> <mfenced open="[" close="]"><mtable><mtr><mtd><mn>12</mn></mtd></mtr>
    <mtr><mtd><mn>15</mn></mtd></mtr> <mtr><mtd><mn>7</mn></mtd></mtr></mtable></mfenced></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'Although two linearly independent vectors, such as <math alttext="upper S 1
    comma upper T 1"><mrow><msub><mi>S</mi> <mn>1</mn></msub> <mo>,</mo> <msub><mi>T</mi>
    <mn>1</mn></msub></mrow></math> , cannot form a basis of <math alttext="double-struck
    upper R cubed"><msup><mi>ℝ</mi> <mn>3</mn></msup></math> , they can nevertheless
    be used for an OLS regression to approximate the payoff <math alttext="upper V
    1"><msub><mi>V</mi> <mn>1</mn></msub></math> . The following Python code implements
    the OLS regression:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '[![1](Images/1.png)](#co_normative_finance_CO14-1)'
  prefs: []
  type: TYPE_NORMAL
- en: The optimal regression parameters can be interpreted as factor loadings.
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](#co_normative_finance_CO14-3)'
  prefs: []
  type: TYPE_NORMAL
- en: The two factors are not enough to explain the payoff <math alttext="upper V
    1"><msub><mi>V</mi> <mn>1</mn></msub></math> ; the replication is imperfect, and
    the residual values are nonzero.
  prefs: []
  type: TYPE_NORMAL
- en: '[![3](Images/3.png)](#co_normative_finance_CO14-4)'
  prefs: []
  type: TYPE_NORMAL
- en: The factor loadings can be used to estimate an arbitrage-free price <math alttext="upper
    V 0"><msub><mi>V</mi> <mn>0</mn></msub></math> for the risky asset <math alttext="upper
    V"><mi>V</mi></math> .
  prefs: []
  type: TYPE_NORMAL
- en: 'Obviously, the two factors are not enough to fully “explain” the payoff <math
    alttext="upper V 1"><msub><mi>V</mi> <mn>1</mn></msub></math> . This is not too
    surprising given standard results from linear algebra.^([11](ch03.xhtml#idm45625325664472))
    What about adding a third risk factor <math alttext="upper U"><mi>U</mi></math>
    to the model economy? Assume that the third risk factor <math alttext="upper U"><mi>U</mi></math>
    is defined by <math alttext="upper U 0 equals 10"><mrow><msub><mi>U</mi> <mn>0</mn></msub>
    <mo>=</mo> <mn>10</mn></mrow></math> and the following:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="upper U 1 equals Start 3 By 1 Matrix 1st Row  12 2nd Row  5 3rd
    Row  11 EndMatrix" display="block"><mrow><msub><mi>U</mi> <mn>1</mn></msub> <mo>=</mo>
    <mfenced open="[" close="]"><mtable><mtr><mtd><mn>12</mn></mtd></mtr> <mtr><mtd><mn>5</mn></mtd></mtr>
    <mtr><mtd><mn>11</mn></mtd></mtr></mtable></mfenced></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, the three risk factors together can explain (replicate) the payoff <math
    alttext="upper V 1"><msub><mi>V</mi> <mn>1</mn></msub></math> fully (exactly):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: '[![1](Images/1.png)](#co_normative_finance_CO15-1)'
  prefs: []
  type: TYPE_NORMAL
- en: Augmented market price vector.
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](#co_normative_finance_CO15-2)'
  prefs: []
  type: TYPE_NORMAL
- en: Augmented market payoff matrix with full rank.
  prefs: []
  type: TYPE_NORMAL
- en: '[![3](Images/3.png)](#co_normative_finance_CO15-5)'
  prefs: []
  type: TYPE_NORMAL
- en: Exact replication of <math alttext="upper V 1"><msub><mi>V</mi> <mn>1</mn></msub></math>
    . Residual values are zero.
  prefs: []
  type: TYPE_NORMAL
- en: '[![4](Images/4.png)](#co_normative_finance_CO15-6)'
  prefs: []
  type: TYPE_NORMAL
- en: Unique arbitrage-free price for the risky asset <math alttext="upper V"><mi>V</mi></math>
    .
  prefs: []
  type: TYPE_NORMAL
- en: The example here resembles the one presented in [“Uncertainty and Risk”](#uncertainty_risk)
    in that enough risk factors (tradable assets) can be used to derive an arbitrage-free
    price for a traded asset. APT does not necessarily require that perfect replication
    is possible; its very model formulation contains residual values. However, if
    perfect replication is possible, then the residual terms are zero, as in the previous
    example with three risk factors.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Some of the early theories and models from the 1940s through the 1970s, in particular
    those presented in this chapter, are still central topics of finance textbooks
    and are still used in financial practice. One reason for this is that many of
    those mostly normative theories and models have a strong intellectual appeal to
    students, academics, and practitioners alike. They somehow “simply seem to make
    sense.” Using Python, numerical examples for the models presented are easily created,
    analyzed, and visualized.
  prefs: []
  type: TYPE_NORMAL
- en: Despite theories and models such as MVP and CAPM being intellectually appealing,
    easy to implement, and mathematically elegant, it is surprising that they are
    still so popular today, for a few reasons. First, the popular theories and models
    presented in this chapter have hardly any meaningful empirical support. Second,
    some of the theories and models are even theoretically inconsistent with each
    other in a number of ways. Third, there has been continuous progress on the theoretical
    and modeling fronts of finance, such that alternative theories and models are
    available. Fourth, modern computational and empirical finance can rely on almost
    unlimited data sources and almost unlimited computational power, making concise,
    parsimonious, and elegant mathematical models and results less and less relevant.
  prefs: []
  type: TYPE_NORMAL
- en: The next chapter analyzes some of the theories and models introduced in this
    chapter on the basis of real financial data. While in the early years of quantitative
    finance, data was a scarce resource, today even students have access to a wealth
    of financial data and open source tools that allow the comprehensive analysis
    of financial theories and models based on real-world data. Empirical finance has
    always been an important sister discipline to theoretical finance. However, financial
    theory has usually driven empirical finance to a large extent. The new area of
    *data-driven finance* might lead to a lasting shift in the relative importance
    of theory as compared to data in finance.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Books and papers cited in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Bender, Jennifer et al. 2013\. “Foundations of Factor Investing.” *MSCI Research
    Insight*. [*http://bit.ly/aiif_factor_invest*](http://bit.ly/aiif_factor_invest).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Calvello, Angelo. 2020\. “Fund Managers Must Embrace AI Disruption.” *Financial
    Times*, January 15, 2020\. [*http://bit.ly/aiif_ai_disrupt*](http://bit.ly/aiif_ai_disrupt).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Eichberger, Jürgen, and Ian R. Harper. 1997\. *Financial Economics.* New York:
    Oxford University Press.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Fishburn, Peter. 1968\. “Utility Theory.” *Management Science* 14 (5): 335-378.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Fama, Eugene F. and Kenneth R. French. 2004\. “The Capital Asset Pricing Model:
    Theory and Evidence.” *Journal of Economic Perspectives* 18 (3): 25-46.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Halevy, Alon, Peter Norvig, and Fernando Pereira. 2009\. “The Unreasonable Effectiveness
    of Data.” *IEEE Intelligent Systems*, Expert Opinion.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Hilpisch, Yves. 2015\. *Derivatives Analytics with Python: Data Analysis, Models,
    Simulation, Calibration, and Hedging*. Wiley Finance.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Jacod, Jean, and Philip Protter. 2004\. *Probability Essentials.* 2nd ed. Berlin:
    Springer.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Johnstone, David and Dennis Lindley. 2013\. “Mean-Variance and Expected Utility:
    The Borch Paradox.” *Statistical Science* 28 (2): 223-237.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Jones, Charles P. 2012\. *Investments: Analysis and Management.* 12th ed. Hoboken:
    John Wiley & Sons.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Karni, Edi. 2014\. “Axiomatic Foundations of Expected Utility and Subjective
    Probability.” In *Handbook of the Economics of Risk and Uncertainty*, edited by
    Mark J. Machina and W. Kip Viscusi, 1-39\. Oxford: North Holland.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Lintner, John. 1965\. “The Valuation of Risk Assets and the Selection of Risky
    Investments in Stock Portfolios and Capital Budgets.” *Review of Economics and
    Statistics* 47 (1): 13-37.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Markowitz, Harry. 1952\. “Portfolio Selection.” *Journal of Finance* 7 (1):
    77-91.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Pratt, John W. 1964\. “Risk Aversion in the Small and in the Large.” *Econometrica*
    32 (1/2): 122-136.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Ross, Stephen A. 1971\. “Portfolio and Capital Market Theory with Arbitrary
    Preferences and Distributions: The General Validity of the Mean-Variance Approach
    in Large Markets.” Working Paper No. 12-72, Rodney L. White Center for Financial
    Research.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '⸻. 1976\. “The Arbitrage Theory of Capital Asset Pricing.” *Journal of Economic
    Theory* 13: 341-360.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Rubinstein, Mark. 2006\. *A History of the Theory of Investments—My Annotated
    Bibliography.* Hoboken: Wiley Finance.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Sharpe, William F. 1964\. “Capital Asset Prices: A Theory of Market Equilibrium
    under Conditions of Risk.” *Journal of Finance* 19 (3): 425-442.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '⸻. 1966\. “Mutual Fund Performance.” *Journal of Business* 39 (1): 119-138.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Varian, Hal R. 2010\. *Intermediate Microeconomics: A Modern Approach.* 8th
    ed. New York & London: W.W. Norton & Company.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'von Neumann, John, and Oskar Morgenstern. 1944\. *Theory of Games and Economic
    Behavior*. Princeton: Princeton University Press.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ^([1](ch03.xhtml#idm45625332671048-marker)) See Jacod and Protter (2004) for
    an introductory text on probability theory.
  prefs: []
  type: TYPE_NORMAL
- en: ^([2](ch03.xhtml#idm45625332662264-marker)) In a *dynamic* economy, uncertainty
    would gradually resolve over time, say, on each day between today and one year
    later.
  prefs: []
  type: TYPE_NORMAL
- en: ^([3](ch03.xhtml#idm45625332913576-marker)) For details with regard to risk-neutral
    valuation and valuation by arbitrage, refer to Hilpisch (2015, ch. 4).
  prefs: []
  type: TYPE_NORMAL
- en: ^([4](ch03.xhtml#idm45625331905816-marker)) Again, refer to Hilpisch (2015,
    ch. 4) and the references given there.
  prefs: []
  type: TYPE_NORMAL
- en: ^([5](ch03.xhtml#idm45625331795688-marker)) For more background and details,
    see Eichberger and Harper (1997, ch. 1) or Varian (2010, ch. 12).
  prefs: []
  type: TYPE_NORMAL
- en: ^([6](ch03.xhtml#idm45625331644552-marker)) One speaks in general of *ordinal*
    numbers. House numbers in streets are a good example for ordinal numbers.
  prefs: []
  type: TYPE_NORMAL
- en: ^([7](ch03.xhtml#idm45625330715848-marker)) For details, see [*http://bit.ly/aiif_minimize*](http://bit.ly/aiif_minimize).
  prefs: []
  type: TYPE_NORMAL
- en: ^([8](ch03.xhtml#idm45625330610520-marker)) These assumptions are not really
    necessary. Short sales, for instance, might be allowed without altering the analysis
    significantly.
  prefs: []
  type: TYPE_NORMAL
- en: ^([9](ch03.xhtml#idm45625327908440-marker)) For further details, see Jones (2012,
    ch. 9).
  prefs: []
  type: TYPE_NORMAL
- en: ^([10](ch03.xhtml#idm45625326218712-marker)) See Bender et al. (2013) for more
    background information about factors used in practice.
  prefs: []
  type: TYPE_NORMAL
- en: ^([11](ch03.xhtml#idm45625325664472-marker)) Of course, the payoff <math alttext="upper
    V 1"><msub><mi>V</mi> <mn>1</mn></msub></math> might lie (incidentally) in the
    span of the two factor payoff vectors <math alttext="upper S 1 comma upper T 1"><mrow><msub><mi>S</mi>
    <mn>1</mn></msub> <mo>,</mo> <msub><mi>T</mi> <mn>1</mn></msub></mrow></math>
    .
  prefs: []
  type: TYPE_NORMAL
