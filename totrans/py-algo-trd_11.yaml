- en: Appendix A. Python, NumPy, matplotlib, pandas
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 附录 A. Python、NumPy、matplotlib、pandas
- en: Talk is cheap. Show me the code.
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 谈论便宜。给我看代码。
- en: ''
  id: totrans-2
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Linus Torvalds
  id: totrans-3
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Linus Torvalds
- en: 'Python has become a powerful programming language and has developed a vast
    ecosystem of helpful packages over the last couple of years. This appendix provides
    a concise overview of Python and three of the major pillars of the so-called *scientific
    or data science stack*:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Python 已经成为一种强大的编程语言，并在过去几年中发展出了一个庞大的有用包生态系统。本附录提供了 Python 和所谓的*科学或数据科学栈*的三个主要支柱的简明概述：
- en: '`NumPy` (see [*https://numpy.org*](https://numpy.org))'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`NumPy`（参见[*https://numpy.org*](https://numpy.org)）'
- en: '`matplotlib` (see [*https://matplotlib.org*](https://matplotlib.org))'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`matplotlib`（参见[*https://matplotlib.org*](https://matplotlib.org)）'
- en: '`pandas` (see [*https://pandas.pydata.org*](https://pandas.pydata.org))'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pandas`（参见[*https://pandas.pydata.org*](https://pandas.pydata.org)）'
- en: '`NumPy` provides performant array operations on large, homogeneous numerical
    data sets while `pandas` is primarily designed to handle tabular data, such as
    financial time series data, efficiently.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '`NumPy` 提供对大型同构数值数据集进行高性能数组操作，而 `pandas` 主要设计用于高效处理表格数据，例如财务时间序列数据。'
- en: Such an introductory appendix—only addressing selected topics relevant to the
    rest of the contents of this book—cannot, of course, replace a thorough introduction
    to Python and the packages covered. However, if you are rather new to Python or
    programming in general you might get a first overview and a feeling of what Python
    is all about. If you are already experienced in another language typically used
    in quantitative finance (such as Matlab, R, C++, or VBA), you see what typical
    data structures, programming paradigms, and idioms in Python look like.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这样一个简介附录——只涵盖与本书其余内容相关的选定主题——当然不能取代对 Python 及其涵盖的包进行彻底介绍。但是，如果你对 Python 或编程总体上比较新，你可能会得到一个初步的概述，并对
    Python 的全貌有所了解。如果你已经在量化金融中使用其他语言（如 Matlab、R、C++ 或 VBA），你会看到 Python 中典型的数据结构、编程范式和习惯用法。
- en: For a comprehensive overview of Python applied to finance see, Hilpisch (2018).
    Other, more general introductions to the language with a scientific and data analysis
    focus are VanderPlas (2017) and McKinney (2017).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解 Python 应用于金融的全面概述，请参阅 Hilpisch（2018）。其他更一般的介绍，关注科学和数据分析的语言包括 VanderPlas（2017）和
    McKinney（2017）。
- en: Python Basics
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python 基础
- en: This section introduces basic Python data types and structures, control structures,
    and some Python idioms.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本节介绍基本的 Python 数据类型和结构、控制结构以及一些 Python 习惯用法。
- en: Data Types
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据类型
- en: 'It is noteworthy that Python is generally a *dynamically typed system*, which
    means that types of objects are inferred from their contexts. Let us start with
    numbers:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，Python 通常是一种*动态类型系统*，这意味着对象的类型是从其上下文中推断出来的。让我们从数字开始：
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO1-1)'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO1-1)'
- en: Assigns the variable name `a` an integer value of 3.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 将变量名 `a` 分配为整数值 3。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO1-2)'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO1-2)'
- en: Looks up the type of `a`.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 查找 `a` 的类型。
- en: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO1-3)'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO1-3)'
- en: Looks up the number of bits used to store the integer value.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 查找用于存储整数值的位数。
- en: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO1-4)'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO1-4)'
- en: Assigns the variable name `b` a floating point value of 5.0.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 将变量名 `b` 分配为浮点数值 5.0。
- en: 'Python can handle arbitrarily large integers, which is quite beneficial for
    number theoretical applications, for instance:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Python 可以处理任意大的整数，这对于数字理论应用非常有益，例如：
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO2-1)'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO2-1)'
- en: Assigns a “huge” integer value.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 分配一个“巨大”的整数值。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO2-2)'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO2-2)'
- en: Shows the number of bits used for the integer representation.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 显示用于整数表示的位数。
- en: 'Arithmetic operations on these objects work as expected:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 对这些对象进行的算术运算按预期进行：
- en: '[PRE2]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO3-1)'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO3-1)'
- en: Division.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 除法。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO3-2)'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO3-2)'
- en: Multiplication.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 乘法。
- en: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO3-3)'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO3-3)'
- en: Addition.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 加法。
- en: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO3-4)'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO3-4)'
- en: Difference.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 差异。
- en: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO3-5)'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO3-5)'
- en: Power.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 幂。
- en: 'Many commonly used mathematical functions are found in the `math` module, which
    is part of Python’s standard library:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 许多常用的数学函数可以在`math`模块中找到，它是Python标准库的一部分：
- en: '[PRE3]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO4-1)'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO4-1)'
- en: Imports the `math` module from the standard library.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 从标准库中导入`math`模块。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO4-2)'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO4-2)'
- en: Calculates the natural logarithm.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 计算自然对数。
- en: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO4-3)'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO4-3)'
- en: Calculates the exponential value.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 计算指数值。
- en: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO4-4)'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO4-4)'
- en: Calculates the sine value.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 计算正弦值。
- en: 'Another important basic data type is the string object (`str`):'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个重要的基本数据类型是字符串对象（`str`）：
- en: '[PRE4]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO5-1)'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO5-1)'
- en: Assigns a `str` object to the variable name `s`.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 将`str`对象赋给变量名`s`。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO5-2)'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO5-2)'
- en: Transforms all characters to lowercase.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 将所有字符转换为小写。
- en: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO5-3)'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO5-3)'
- en: Transforms all characters to uppercase.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 将所有字符转换为大写。
- en: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO5-4)'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO5-4)'
- en: Selects the first six characters.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 选择前六个字符。
- en: 'Such objects can also be combined using the `+` operator. The index value –1
    represents the last character of a string (or last element of a sequence in general):'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这样的对象也可以使用`+`运算符组合。索引值–1表示字符串的最后一个字符（或一般序列的最后一个元素）：
- en: '[PRE5]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO6-1)'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO6-1)'
- en: Combines sub-sets of the `str` object to a new one.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 将`str`对象的子集合并为一个新对象。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO6-2)'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO6-2)'
- en: Prints out the result.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 打印出结果。
- en: 'String replacements are often used to parametrize text output:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 字符串替换经常用于参数化文本输出：
- en: '[PRE6]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO7-1)'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO7-1)'
- en: Defines a string template the “old” way.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 用“旧”方式定义字符串模板。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO7-2)'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO7-2)'
- en: Prints the template with the values replaced the “old” way.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 用“旧”方式打印模板并替换值。
- en: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO7-3)'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO7-3)'
- en: Defines a string template the “new” way.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 定义字符串模板的“新”方式。
- en: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO7-4)'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO7-4)'
- en: Prints the template with the values replaced the “new” way.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 用“新”方式打印模板并替换值。
- en: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO7-5)'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO7-5)'
- en: Defines variables for later usage during replacement.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 为后续替换定义变量。
- en: '[![6](assets/6.png)](#co_python__numpy__matplotlib__pandas_CO7-6)'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '[![6](assets/6.png)](#co_python__numpy__matplotlib__pandas_CO7-6)'
- en: Makes use of a so-called *f-string* for string replacement (introduced in Python
    3.6).
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 使用所谓的*f-string*进行字符串替换（Python 3.6引入）。
- en: Data Structures
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据结构
- en: '`tuple` objects are light weight data structures. These are immutable collections
    of other objects and are constructed by objects separated by commas—with or without
    parentheses:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '`tuple`对象是轻量级数据结构。这些是由逗号分隔的对象组成的不可变集合，可以用括号分隔或不分隔：'
- en: '[PRE7]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO8-1)'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO8-1)'
- en: Constructs a `tuple` object with parentheses.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 用括号构造一个`tuple`对象。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO8-2)'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO8-2)'
- en: Prints out the `str` representation.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 打印出`str`的表示。
- en: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO8-3)'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO8-3)'
- en: Constructs a `tuple` object without parentheses.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 用不带括号的方式构造`tuple`对象。
- en: 'Nested structures are also possible:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 嵌套结构也是可能的：
- en: '[PRE8]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO9-1)'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO9-1)'
- en: Constructs a `tuple` object out of two others.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 构建一个 `tuple` 对象，使用两个其他对象。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO9-2)'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO9-2)'
- en: Accesses the third element of the first object.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 访问第一个对象的第三个元素。
- en: '`list` objects are mutable collections of other objects and are generally constructed
    by providing a comma-separated collection of objects in brackets:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '`list` 对象是可变集合对象，通常通过在方括号中提供逗号分隔的对象集合构建：'
- en: '[PRE9]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO10-1)'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO10-1)'
- en: Generates a `list` object using brackets.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 使用方括号生成一个 `list` 对象。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO10-2)'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO10-2)'
- en: Appends a new element (final word of `s`) to the `list` object.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 将一个新元素（字符串的最后一个单词）附加到 `list` 对象。
- en: 'Sorting is a typical operation on `list` objects, which can also be constructed
    using the `list` constructor (here applied to a tuple object):'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 对 `list` 对象进行排序是典型操作，也可以使用 `list` 构造函数构建（这里应用于一个 tuple 对象）：
- en: '[PRE10]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO11-1)'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO11-1)'
- en: Creates a `list` object from a `tuple`.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 使用一个 `tuple` 对象创建一个 `list` 对象。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO11-2)'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO11-2)'
- en: Sorts all elements in-place (that is, changes the object itself).
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在原地对所有元素进行排序（即更改对象本身）。
- en: 'Dictionary (`dict`) objects are so-called key-value stores and are generally
    constructed with curly brackets:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 字典（`dict`）对象是所谓的键值存储，通常用花括号构建：
- en: '[PRE11]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO12-1)'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO12-1)'
- en: Creates a `dict` object using curly brackets and key-value pairs.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 使用花括号和键值对创建一个 `dict` 对象。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO12-2)'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO12-2)'
- en: Accesses the value given a key.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 根据键访问值。
- en: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO12-3)'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO12-3)'
- en: Adds a new key-value pair.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 添加一个新的键值对。
- en: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO12-4)'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO12-4)'
- en: Selects and shows all keys.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 选择并显示所有键。
- en: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO12-5)'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO12-5)'
- en: Selects and shows all values.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 选择并显示所有数值。
- en: Control Structures
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 控制结构
- en: 'Iterations are very important operations in programming in general and financial
    analytics in particular. Many Python objects are iterable, which proves rather
    convenient in many circumstances. Consider the special iterator object `range`:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 迭代在编程一般和金融分析特别是很重要。许多 Python 对象都是可迭代的，在许多情况下非常方便。考虑特殊的迭代器对象 `range`：
- en: '[PRE12]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO13-1)'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO13-1)'
- en: '` object given a single parameter (end value + 1).'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 给定一个单参数（结束值 + 1）的对象。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO13-2)'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO13-2)'
- en: Creates a `range` object with `start`, `end`, and `step` parameter values.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `start`、`end` 和 `step` 参数值创建一个 `range` 对象。
- en: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO13-3)'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO13-3)'
- en: Iterates over a `range` object and prints the squared values.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 迭代一个 `range` 对象并打印平方值。
- en: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO13-4)'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO13-4)'
- en: Iterates over a `range` object using `start, end`, and `step` parameters.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `start`、`end` 和 `step` 参数迭代一个 `range` 对象。
- en: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO13-5)'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO13-5)'
- en: Iterates over a `list` object.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 迭代一个 `list` 对象。
- en: '[![6](assets/6.png)](#co_python__numpy__matplotlib__pandas_CO13-6)'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '[![6](assets/6.png)](#co_python__numpy__matplotlib__pandas_CO13-6)'
- en: Iterates over a `str` object.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 迭代一个 `str` 对象。
- en: '`while` loops are similar to their counterparts in other languages:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '`while` 循环与其他语言中的类似：'
- en: '[PRE13]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO14-1)'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO14-1)'
- en: Sets the counter value to 0.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 将计数器值设置为 0。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO14-2)'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO14-2)'
- en: As long as the value of `i` is smaller than 5…
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 只要 `i` 的值小于 5…
- en: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO14-3)'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO14-3)'
- en: …print the square root of `i` and…
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: …打印 `i` 的平方根，并且…
- en: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO14-4)'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO14-4)'
- en: …increase the value of `i` by 1.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: …增加`i`的值1。
- en: Python Idioms
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Python习语
- en: 'Python in many places relies on a number of special idioms. Let us start with
    a rather popular one, the *list comprehension*:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: Python在许多地方依赖于一些特殊的习语。让我们从一个相当流行的习语开始，即*列表推导*：
- en: '[PRE14]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO15-1)'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO15-1)'
- en: Creates a new `list` object based on the *list comprehension* syntax (`for`
    loop in brackets).
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 基于*列表推导*语法创建一个新的`list`对象（括号中的`for`循环）。
- en: 'So-called *lambda* or *anonymous functions* are useful helpers in many places:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 所谓的*lambda*或*匿名函数*在许多地方都是有用的助手：
- en: '[PRE15]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO16-1)'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO16-1)'
- en: Defines a new function `f` via the `lambda` syntax.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 通过`lambda`语法定义一个新的函数`f`。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO16-2)'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO16-2)'
- en: Evaluates the function `f` for a value of 5.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 评估值为5时的函数`f`。
- en: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO16-3)'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO16-3)'
- en: Maps the function `f` to all elements of the `range` object and creates a `list`
    object with the results, which is printed.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 将函数`f`映射到`range`对象的所有元素，并创建一个包含结果的`list`对象，然后将其打印出来。
- en: 'In general, one works with regular Python functions (as opposed to lambda functions),
    which are constructed as follows:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 一般而言，使用常规的Python函数（而不是lambda函数），构建如下：
- en: '[PRE16]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO17-1)'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO17-1)'
- en: Regular functions use the `def` statement for the definition.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 常规函数使用`def`语句进行定义。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO17-2)'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO17-2)'
- en: With the `return` statement, one defines what gets returned when the execution/evaluation
    is successful; multiple `return` statements are possible (for example, for different
    cases).
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`return`语句时，定义执行/评估成功时返回的内容；可以有多个`return`语句（例如，针对不同情况）。
- en: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO17-3)'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO17-3)'
- en: "`\x960\x97` allows for multiple arguments to be passed as an iterable object\
    \ (for example, `list` object)."
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: "`\x960\x97`允许将多个参数作为可迭代对象传递（例如，`list`对象）。"
- en: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO17-4)'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO17-4)'
- en: Iterates over the arguments.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 遍历参数。
- en: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO17-5)'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO17-5)'
- en: 'Does something with every argument: here, printing.'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 对每个参数执行某些操作：在此处是打印。
- en: '[![6](assets/6.png)](#co_python__numpy__matplotlib__pandas_CO17-6)'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '[![6](assets/6.png)](#co_python__numpy__matplotlib__pandas_CO17-6)'
- en: 'Returns something: here, `None`; not necessary for a valid Python function.'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 返回某些内容：在此处是`None`；对于有效的Python函数来说并非必需。
- en: '[![7](assets/7.png)](#co_python__numpy__matplotlib__pandas_CO17-7)'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '[![7](assets/7.png)](#co_python__numpy__matplotlib__pandas_CO17-7)'
- en: Passes the `list` object `l` to the function `f`, which interprets it as a list
    of arguments.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 将`list`对象`l`传递给函数`f`，该函数将其解释为参数列表。
- en: 'Consider the following function definition, which returns different values/strings
    based on an `if-elif-else` control structure:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑以下函数定义，根据`if-elif-else`控制结构返回不同的值/字符串：
- en: '[PRE17]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO18-1)'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO18-1)'
- en: Imports the `random` module to draw random numbers.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 导入`random`模块以生成随机数。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO18-2)'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO18-2)'
- en: Draws a random integer between 0 and 1,000.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 生成0到1,000之间的随机整数。
- en: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO18-3)'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO18-3)'
- en: Prints the value of the drawn number.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 打印所绘制数字的值。
- en: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO18-4)'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO18-4)'
- en: Checks for a single digit number, and if `False`…
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 检查是否为单个数字，如果为`False`…
- en: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO18-5)'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO18-5)'
- en: …checks for a double digit number; if also `False`…
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: …检查是否为两位数；如果也为`False`…
- en: '[![6](assets/6.png)](#co_python__numpy__matplotlib__pandas_CO18-6)'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '[![6](assets/6.png)](#co_python__numpy__matplotlib__pandas_CO18-6)'
- en: …the only case that remains is the triple digit case.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: …剩下的情况只有三位数。
- en: '[![7](assets/7.png)](#co_python__numpy__matplotlib__pandas_CO18-7)'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: '[![7](assets/7.png)](#co_python__numpy__matplotlib__pandas_CO18-7)'
- en: Calls the function with the random number value `a`.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 用随机数值`a`调用函数。
- en: NumPy
  id: totrans-191
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: NumPy
- en: Many operations in computational finance take place over large arrays of numerical
    data. `NumPy` is a Python package that allows the efficient handling of and operation
    on such data structures. Although quite a mighty package with a wealth of functionality,
    it suffices for the purposes of this book to cover the basics of `NumPy`. A neat
    online book that is available for free about `NumPy` is [*From Python to NumPy*](https://oreil.ly/Yxequ).
    It covers many important aspects in detail that are omitted in the following sections.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 许多计算金融中的操作涉及大量的数值数据数组。`NumPy`是一个Python包，允许高效处理和操作这样的数据结构。虽然`NumPy`功能强大且丰富，但本书的目的是涵盖`NumPy`的基础知识即可。关于`NumPy`的一本不错的在线书籍是[*从Python到NumPy*](https://oreil.ly/Yxequ)。它详细介绍了许多重要的方面，这些方面在下面的章节中被省略了。
- en: Regular ndarray Object
  id: totrans-193
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 常规的`ndarray`对象
- en: 'The workhorse is the `NumPy` `ndarray` class, which provides the data structure
    for n-dimensional array objects. You can generate an `ndarray` object, for instance,
    from a `list` object:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '`NumPy`的工作马是`ndarray`类，为n维数组对象提供数据结构。例如，可以从`list`对象生成一个`ndarray`对象：'
- en: '[PRE18]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO19-1)'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO19-1)'
- en: Imports `NumPy` as `np` by convention.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 按约定将`NumPy`导入为`np`。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO19-2)'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO19-2)'
- en: Instantiates an `ndarray` object from the `range` object; `np.arange` could
    also be used, for instance.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 从`range`对象实例化一个`ndarray`对象；例如也可以使用`np.arange`。
- en: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO19-3)'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO19-3)'
- en: Prints out the values.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 打印出这些值。
- en: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO19-4)'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO19-4)'
- en: Reshapes the object to a two-dimensional one…
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 将对象重塑为二维对象…
- en: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO19-5)'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO19-5)'
- en: …and prints out the result.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: …并打印出结果。
- en: '[![6](assets/6.png)](#co_python__numpy__matplotlib__pandas_CO19-6)'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '[![6](assets/6.png)](#co_python__numpy__matplotlib__pandas_CO19-6)'
- en: Reshapes the object to a three-dimensional one…
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 将对象重塑为三维对象…
- en: '[![7](assets/7.png)](#co_python__numpy__matplotlib__pandas_CO19-7)'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '[![7](assets/7.png)](#co_python__numpy__matplotlib__pandas_CO19-7)'
- en: …and prints out the result.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: …并打印出结果。
- en: '[![8](assets/8.png)](#co_python__numpy__matplotlib__pandas_CO19-8)'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: '[![8](assets/8.png)](#co_python__numpy__matplotlib__pandas_CO19-8)'
- en: This changes the `dtype` of the object to `np.float` and…
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 这会改变对象的`dtype`为`np.float`并且…
- en: '[![9](assets/9.png)](#co_python__numpy__matplotlib__pandas_CO19-9)'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '[![9](assets/9.png)](#co_python__numpy__matplotlib__pandas_CO19-9)'
- en: …shows the new set of (now floating point) numbers.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: …显示了一组新的（现在是浮点数的）数字。
- en: Many Python data structures are designed to be quite general. An example are
    mutable `list` objects that can be easily manipulated in many ways (adding and
    removing elements, storing other complex data structures, and so on). The strategy
    of `NumPy` with the regular `ndarray` object is to provide a more specialized
    data structure for which all elements are of the same atomic type and which in
    turn allows the contiguous storage in memory. This makes the `ndarray` object
    much better at solving problems in certain settings, such as when operating on
    larger, or even large, numerical data sets. In the case of `NumPy`, this specialization
    also comes along with convenience for the programmer on the one hand and often
    increased speed on the other hand.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 许多Python数据结构设计得非常通用。一个例子是可变的`list`对象，可以以多种方式轻松操作（添加和删除元素，存储其他复杂数据结构等）。`NumPy`与常规的`ndarray`对象的策略是提供一种更专业的数据结构，其中所有元素都是同一种原子类型，并且允许在内存中连续存储。这使得`ndarray`对象在解决某些情境下的问题时更加优秀，例如在操作较大或大型数值数据集时。在`NumPy`的情况下，这种专门化还伴随着对程序员的便利性，一方面，另一方面通常会提高速度。
- en: Vectorized Operations
  id: totrans-215
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 向量化操作
- en: 'A major strength of `NumPy` are *vectorized operations*:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '`NumPy`的一个主要优势是*向量化操作*：'
- en: '[PRE19]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO20-1)'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO20-1)'
- en: Implements a scalar multiplication on the one-dimensional `ndarray` object (vector).
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 在一维`ndarray`对象（向量）上实现标量乘法。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO20-2)'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO20-2)'
- en: Calculates the square of each number of `b` in vectorized fashion.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 以向量化的方式计算`b`中每个数字的平方。
- en: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO20-3)'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO20-3)'
- en: Defines a function `f` via a `lambda` constructor.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 `lambda` 构造函数定义函数 `f`。
- en: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO20-4)'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO20-4)'
- en: Applies `f` to the `ndarray` object `a` using vectorization.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 使用向量化将 `f` 应用于 `ndarray` 对象 `a`。
- en: 'In many scenarios, only a (small) part of the data stored in an `ndarray` object
    is of interest. `NumPy` supports basic and advanced slicing and other selection
    features:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多情况下，仅感兴趣的是存储在 `ndarray` 对象中的（少量）数据。`NumPy` 支持基本和高级切片以及其他选择功能：
- en: '[PRE20]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO21-1)'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO21-1)'
- en: Selects the third to sixth elements.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 选择第三到第六个元素。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO21-2)'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO21-2)'
- en: Selects the third row and fifth (final) row.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 选择第三行和第五行（最后）。
- en: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO21-3)'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO21-3)'
- en: Picks out the middle square from the `b` object.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 从 `b` 对象中选出中间的正方形。
- en: Boolean Operations
  id: totrans-234
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 布尔运算
- en: 'Boolean operations are also supported in many places:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 布尔运算也在许多地方得到支持：
- en: '[PRE21]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO22-1)'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO22-1)'
- en: Which numbers are greater than 10?
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 哪些数字大于 10？
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO22-2)'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO22-2)'
- en: Return all those numbers greater than 10.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 返回所有大于 10 的数字。
- en: ndarray Methods and NumPy Functions
  id: totrans-241
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ndarray 方法和 NumPy 函数
- en: 'Furthermore, `ndarray` objects have multiple (convenience) methods already
    built in:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，`ndarray` 对象已经内置了多个（方便的）方法：
- en: '[PRE22]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO23-1)'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO23-1)'
- en: The sum of all elements.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 所有元素的总和。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO23-2)'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO23-2)'
- en: The mean of all elements.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 所有元素的均值。
- en: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO23-3)'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO23-3)'
- en: The mean along the first axis.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 沿第一个轴的均值。
- en: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO23-4)'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO23-4)'
- en: The mean along the second axis.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 沿第二个轴的均值。
- en: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO23-5)'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO23-5)'
- en: The standard deviation over all elements.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 所有元素的标准差。
- en: 'Similarly, there is a wealth of so-called *universal functions* that the `NumPy`
    package provides. They are universal in the sense that they can be applied in
    general to `NumPy` `ndarray` objects and to standard numerical Python data types.
    For details, see [Universal functions (ufunc)](https://oreil.ly/Ogiah):'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，`NumPy` 包提供了大量所谓的*通用函数*。它们是通用的，因为它们可以普遍应用于 `NumPy` 的 `ndarray` 对象和标准的数值 Python
    数据类型。有关详细信息，请参阅[通用函数 (ufunc)](https://oreil.ly/Ogiah)：
- en: '[PRE23]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO24-1)'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO24-1)'
- en: The sum of all elements.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 所有元素的总和。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO24-2)'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO24-2)'
- en: The mean along the first axis.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 沿第一个轴的均值。
- en: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO24-3)'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO24-3)'
- en: The sine value for all elements rounded to two digits.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 对所有元素取正弦值并保留两位小数。
- en: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO24-4)'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO24-4)'
- en: The sine value of a Python `float` object.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: Python `float` 对象的正弦值。
- en: 'However, you should be aware that applying `NumPy` universal functions to standard
    Python data types generally comes with a significant performance burden:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，您应该注意，将 `NumPy` 通用函数应用于标准的 Python 数据类型通常会带来显著的性能负担：
- en: '[PRE24]'
  id: totrans-265
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO25-1)'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO25-1)'
- en: List comprehension using `NumPy` universal function on Python `float` objects.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Python `float` 对象上使用 `NumPy` 通用函数的列表推导。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO25-2)'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO25-2)'
- en: List comprehension using `math` function on Python `float` objects.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Python `float` 对象上使用 `math` 函数的列表推导。
- en: 'On the other hand, using the vectorized operations from `NumPy` on `ndarray`
    objects is faster than both of the preceding alternatives that result in `list`
    objects. However, the speed advantage often comes at the cost of a larger, or
    even huge, memory footprint:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `NumPy` 中的向量化操作对 `ndarray` 对象进行操作比前述生成 `list` 对象的两种方法更快。然而，速度优势通常是以更大甚至巨大的内存占用为代价的：
- en: '[PRE25]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO26-1)'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO26-1)'
- en: Vectorized calculation of the sine values with `NumPy`, which is much faster
    in general.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `NumPy` 对正弦值进行向量化计算，这通常更快。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO26-2)'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO26-2)'
- en: Imports the `sys` module with many system-related functions.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 导入具有许多与系统相关的功能的 `sys` 模块。
- en: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO26-3)'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO26-3)'
- en: Shows the size of the `a` object in memory.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 显示内存中 `a` 对象的大小。
- en: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO26-4)'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO26-4)'
- en: Shows the number of bytes used to store the data in the `a` object.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 显示存储在 `a` 对象中的数据所使用的字节数。
- en: Vectorization sometimes is a very useful approach to write concise code that
    is often also much faster than Python code. However, be aware of the memory footprint
    that vectorization can have in many scenarios relevant to finance. Often, there
    are alternative implementations of algorithms available that are memory efficient
    and that, by using performance libraries such as `Numba` or `Cython`, can even
    be faster. See Hilpisch (2018, ch. 10).
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 向量化有时是编写简洁代码的非常有用的方法，通常也比 Python 代码快得多。但是，请注意向量化可能在与金融相关的许多场景中具有的内存占用。通常，还有替代算法实现可用，这些实现在内存效率上更高，并且通过使用性能库（如
    `Numba` 或 `Cython`）甚至可能更快。参见 Hilpisch (2018, 第10章)。
- en: ndarray Creation
  id: totrans-281
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ndarray 创建
- en: 'Here, we use the ndarray object constructor `np.arange()`, which yields an
    `ndarray` object of integers. The following is a simple example:'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们使用 ndarray 对象构造函数 `np.arange()`，它生成一个整数的 `ndarray` 对象。以下是一个简单的例子：
- en: '[PRE26]'
  id: totrans-283
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO27-1)'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO27-1)'
- en: Instantiates an `ndarray` object via the `np.arange()` constructor.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 `np.arange()` 构造函数实例化一个 `ndarray` 对象。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO27-2)'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO27-2)'
- en: Prints out the values.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 打印出数值。
- en: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO27-3)'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO27-3)'
- en: The resulting `dtype` is `np.int64`.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 结果的 `dtype` 是 `np.int64`。
- en: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO27-4)'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO27-4)'
- en: Uses `arange()` again, but this time with `start`, `end`, and `step` parameters.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 再次使用 `arange()`，但这次带有 `start`、`end` 和 `step` 参数。
- en: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO27-5)'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO27-5)'
- en: Prints out the values.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 打印出数值。
- en: '[![6](assets/6.png)](#co_python__numpy__matplotlib__pandas_CO27-6)'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: '[![6](assets/6.png)](#co_python__numpy__matplotlib__pandas_CO27-6)'
- en: The resulting `dtype` is `np.float64`.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 结果的 `dtype` 是 `np.float64`。
- en: '[![7](assets/7.png)](#co_python__numpy__matplotlib__pandas_CO27-7)'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: '[![7](assets/7.png)](#co_python__numpy__matplotlib__pandas_CO27-7)'
- en: Uses the `linspace()` constructor, which evenly spaces the interval between
    0 and 10 in 11 intervals, giving back an `ndarray` object with 12 values.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `linspace()` 构造函数，在 0 到 10 之间均匀分布 11 个间隔，返回一个具有 12 个值的 `ndarray` 对象。
- en: Random Numbers
  id: totrans-298
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 随机数
- en: 'In financial analytics, one often needs random^([1](app01.html#idm45785328416584))
    numbers. `NumPy` provides many functions to sample from different distributions.
    Those regularly needed in quantitative finance are the standard normal distribution
    and the Poisson distribution. The respective functions are found in the sub-package
    `numpy.random`:'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 在金融分析中，人们经常需要随机^([1](app01.html#idm45785328416584)) 数字。 `NumPy` 提供了许多从不同分布中抽样的函数。在量化金融中经常需要的是标准正态分布和泊松分布。相应的函数位于子包
    `numpy.random` 中：
- en: '[PRE27]'
  id: totrans-300
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO28-1)'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO28-1)'
- en: Draws ten standard normally distributed random numbers.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 抽取十个标准正态分布的随机数。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO28-2)'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO28-2)'
- en: Draws ten Poisson distributed random numbers.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 抽取十个泊松分布的随机数。
- en: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO28-3)'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO28-3)'
- en: Fixes the seed value of the random number generator for repeatability.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 固定随机数生成器的种子值以便重复性。
- en: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO28-4)'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO28-4)'
- en: Generates a two-dimensional `ndarray` object with random numbers.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 生成一个带有随机数的二维`ndarray`对象。
- en: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO28-5)'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO28-5)'
- en: Prints a small selection of the numbers.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 打印一小部分数字。
- en: '[![6](assets/6.png)](#co_python__numpy__matplotlib__pandas_CO28-6)'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: '[![6](assets/6.png)](#co_python__numpy__matplotlib__pandas_CO28-6)'
- en: The mean of all values is close to `0` but not exactly `0`.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 所有值的平均值接近于`0`，但不完全是`0`。
- en: '[![7](assets/7.png)](#co_python__numpy__matplotlib__pandas_CO28-7)'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: '[![7](assets/7.png)](#co_python__numpy__matplotlib__pandas_CO28-7)'
- en: The standard deviation is close to `1` but not exactly `1`.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 标准差接近于`1`，但不完全是`1`。
- en: '[![8](assets/8.png)](#co_python__numpy__matplotlib__pandas_CO28-8)'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: '[![8](assets/8.png)](#co_python__numpy__matplotlib__pandas_CO28-8)'
- en: The first moment is corrected in vectorized fashion.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 第一时刻以向量化的方式进行修正。
- en: '[![9](assets/9.png)](#co_python__numpy__matplotlib__pandas_CO28-9)'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: '[![9](assets/9.png)](#co_python__numpy__matplotlib__pandas_CO28-9)'
- en: The mean now is “almost equal” to `0`.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 现在的平均值“几乎等于”`0`。
- en: '[![10](assets/10.png)](#co_python__numpy__matplotlib__pandas_CO28-10)'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: '[![10](assets/10.png)](#co_python__numpy__matplotlib__pandas_CO28-10)'
- en: The second moment is corrected in vectorized fashion.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 第二时刻以向量化的方式进行修正。
- en: '[![11](assets/11.png)](#co_python__numpy__matplotlib__pandas_CO28-11)'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: '[![11](assets/11.png)](#co_python__numpy__matplotlib__pandas_CO28-11)'
- en: The standard deviation is now exactly `1`.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 现在标准差正好是`1`。
- en: matplotlib
  id: totrans-323
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: matplotlib
- en: 'At this point, it makes sense to introduce plotting with [`matplotlib`](http://matplotlib.org),
    the plotting workhorse in the Python ecosystem. We use `matplotlib` with the settings
    of another library throughout, namely [`seaborn`](https://oreil.ly/SWvT6). This
    results in a more modern plotting style. The following code generates [Figure A-1](#plot_01):'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，引入使用[`matplotlib`](http://matplotlib.org)进行绘图是有意义的，在Python生态系统中，`matplotlib`是主要的绘图工具。我们始终使用另一个库的设置，即[`seaborn`](https://oreil.ly/SWvT6)，这样可以得到更现代的绘图风格。以下代码生成[图
    A-1](#plot_01)：
- en: '[PRE28]'
  id: totrans-325
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO29-1)'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO29-1)'
- en: Imports the main plotting library.
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 导入主要的绘图库。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO29-2)'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO29-2)'
- en: Sets new plot style defaults.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 设置新的绘图样式默认值。
- en: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO29-3)'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO29-3)'
- en: Imports the top level module.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 导入顶级模块。
- en: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO29-4)'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO29-4)'
- en: Sets the resolution to 300 DPI (for saving) and the font to `serif`.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 将分辨率设置为300 DPI（用于保存），字体设置为`serif`。
- en: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO29-6)'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO29-6)'
- en: Generates an `ndarray` object with random numbers.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 生成一个带有随机数的`ndarray`对象。
- en: '[![6](assets/6.png)](#co_python__numpy__matplotlib__pandas_CO29-7)'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: '[![6](assets/6.png)](#co_python__numpy__matplotlib__pandas_CO29-7)'
- en: Instantiates a new `figure` object.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 实例化一个新的`figure`对象。
- en: '[![7](assets/7.png)](#co_python__numpy__matplotlib__pandas_CO29-8)'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: '[![7](assets/7.png)](#co_python__numpy__matplotlib__pandas_CO29-8)'
- en: First calculates the cumulative sum over all elements of the `ndarray` object
    and then plots the result.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 首先计算`ndarray`对象所有元素的累积和，然后绘制结果。
- en: '![pfat aa01](assets/pfat_aa01.png)'
  id: totrans-340
  prefs: []
  type: TYPE_IMG
  zh: '![pfat aa01](assets/pfat_aa01.png)'
- en: Figure A-1\. Line plot with `matplotlib`
  id: totrans-341
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 A-1\. 使用`matplotlib`绘制折线图
- en: 'Multiple line plots in a single `figure` object are also easy to generate (see
    [Figure A-2](#plot_02)):'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 在单个`figure`对象中生成多条线图也很容易（见[图 A-2](#plot_02)）：
- en: '[PRE29]'
  id: totrans-343
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO30-1)'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO30-1)'
- en: Instantiates a new `figure` objects and defines the size.
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 实例化一个新的`figure`对象并定义其大小。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO30-2)'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO30-2)'
- en: Plots five lines by calculating the cumulative sum along the first axis and
    defines a label.
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 通过沿第一个轴计算累积和来绘制五条线，并定义一个标签。
- en: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO30-3)'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO30-3)'
- en: Puts a legend in the optimal position (`loc=0`).
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 将图例放置在最佳位置（`loc=0`）。
- en: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO30-4)'
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO30-4)'
- en: Adds a label to the x-axis.
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 添加x轴的标签。
- en: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO30-5)'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO30-5)'
- en: Adds a label to the y-axis.
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 添加y轴的标签。
- en: '[![6](assets/6.png)](#co_python__numpy__matplotlib__pandas_CO30-6)'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: '[![6](assets/6.png)](#co_python__numpy__matplotlib__pandas_CO30-6)'
- en: Adds a title to the figure.
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 为图添加标题。
- en: '![pfat aa02](assets/pfat_aa02.png)'
  id: totrans-356
  prefs: []
  type: TYPE_IMG
  zh: '![pfat aa02](assets/pfat_aa02.png)'
- en: Figure A-2\. Plot with multiple lines
  id: totrans-357
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 A-2\. 包含多条线的图
- en: 'Other important plotting types are histograms and bar charts. A histogram for
    all 500 values of the `data` object is shown as [Figure A-3](#plot_03). In the
    code, the `.flatten()` method is used to generate a one-dimensional array from
    the two-dimensional one:'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 其他重要的绘图类型包括直方图和条形图。显示了数据对象的 500 个值的直方图，如[图 A-3](#plot_03)所示。在代码中，使用`.flatten()`方法从二维数组生成一维数组：
- en: '[PRE30]'
  id: totrans-359
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO31-1)'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO31-1)'
- en: Plots the histogram with 30 bins (data groups).
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制包含 30 个柱（数据组）的直方图。
- en: 'Finally, consider the bar chart presented in [Figure A-4](#plot_04), generated
    by the following code:'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，考虑由以下代码生成的条形图[图 A-4](#plot_04)：
- en: '[PRE31]'
  id: totrans-363
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO32-1)'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO32-1)'
- en: Plots a bar chart based on a small sub-set of the original data set.
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 基于原始数据集的一个小子集绘制条形图。
- en: '![pfat aa03](assets/pfat_aa03.png)'
  id: totrans-366
  prefs: []
  type: TYPE_IMG
  zh: '![pfat aa03](assets/pfat_aa03.png)'
- en: Figure A-3\. Histogram of random data
  id: totrans-367
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 A-3\. 随机数据的直方图
- en: '![pfat aa04](assets/pfat_aa04.png)'
  id: totrans-368
  prefs: []
  type: TYPE_IMG
  zh: '![pfat aa04](assets/pfat_aa04.png)'
- en: Figure A-4\. Bar chart of random data
  id: totrans-369
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 A-4\. 随机数据的条形图
- en: 'To conclude the introduction to `matplotlib`, consider the ordinary least squares
    (OLS) regression of the sample data displayed in [Figure A-5](#plot_05). `NumPy`
    provides with the two functions `polyfit` and `polyval` convenience functions
    to implement OLS based on simple monomials, <math alttext="x comma x squared comma
    x cubed comma period period period comma x Superscript n"><mrow><mi>x</mi> <mo>,</mo>
    <msup><mi>x</mi> <mn>2</mn></msup> <mo>,</mo> <msup><mi>x</mi> <mn>3</mn></msup>
    <mo>,</mo> <mo>.</mo> <mo>.</mo> <mo>.</mo> <mo>,</mo> <msup><mi>x</mi> <mi>n</mi></msup></mrow></math>
    . For illustration purposes, consider linear, cubic, and ninth degree OLS regression
    (see [Figure A-5](#plot_05)):'
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 结束对`matplotlib`的介绍，考虑在[图 A-5](#plot_05)中显示的样本数据的普通最小二乘（OLS）回归。`NumPy`提供了两个函数`polyfit`和`polyval`，便于基于简单单项式实现OLS，<math
    alttext="x comma x squared comma x cubed comma period period period comma x Superscript
    n"><mrow><mi>x</mi> <mo>,</mo> <msup><mi>x</mi> <mn>2</mn></msup> <mo>,</mo> <msup><mi>x</mi>
    <mn>3</mn></msup> <mo>,</mo> <mo>.</mo> <mo>.</mo> <mo>.</mo> <mo>,</mo> <msup><mi>x</mi>
    <mi>n</mi></msup></mrow></math> 。举例说明，考虑线性、三次和九次OLS回归（见[图 A-5](#plot_05)）：
- en: '[PRE32]'
  id: totrans-371
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO33-1)'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO33-1)'
- en: Creates an `ndarray` object for the `x` values.
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 创建`x`值的`ndarray`对象。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO33-2)'
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO33-2)'
- en: Defines the `y` values as the cumulative sum of the `data` object.
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 将`y`值定义为`data`对象的累积和。
- en: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO33-3)'
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO33-3)'
- en: Linear regression.
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 线性回归。
- en: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO33-4)'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO33-4)'
- en: Cubic regression.
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 三次回归。
- en: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO33-5)'
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO33-5)'
- en: Ninth degree regression.
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 九次回归。
- en: '[![6](assets/6.png)](#co_python__numpy__matplotlib__pandas_CO33-6)'
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: '[![6](assets/6.png)](#co_python__numpy__matplotlib__pandas_CO33-6)'
- en: The new `figure` object.
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 新的`figure`对象。
- en: '[![7](assets/7.png)](#co_python__numpy__matplotlib__pandas_CO33-7)'
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: '[![7](assets/7.png)](#co_python__numpy__matplotlib__pandas_CO33-7)'
- en: The base data.
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 基础数据。
- en: '[![8](assets/8.png)](#co_python__numpy__matplotlib__pandas_CO33-8)'
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: '[![8](assets/8.png)](#co_python__numpy__matplotlib__pandas_CO33-8)'
- en: The regression results visualized.
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 可视化的回归结果。
- en: '[![9](assets/9.png)](#co_python__numpy__matplotlib__pandas_CO33-11)'
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: '[![9](assets/9.png)](#co_python__numpy__matplotlib__pandas_CO33-11)'
- en: Places a legend.
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 添加图例。
- en: '![pfat aa05](assets/pfat_aa05.png)'
  id: totrans-390
  prefs: []
  type: TYPE_IMG
  zh: '![pfat aa05](assets/pfat_aa05.png)'
- en: Figure A-5\. Linear, cubic, and 9th degree regression
  id: totrans-391
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 A-5\. 线性、三次和九次回归
- en: pandas
  id: totrans-392
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas
- en: '`pandas` is a package with which one can manage and operate on time series
    data and other tabular data structures efficiently. It allows implementation of
    even sophisticated data analytics tasks on pretty large data sets in-memory. While
    the focus lies on in-memory operations, there are also multiple options for out-of-memory
    (on-disk) operations. Although `pandas` provides a number of different data structures,
    embodied by powerful classes, the most commonly used structure is the `DataFrame`
    class, which resembles a typical table of a relational (SQL) database and is used
    to manage, for instance, financial time series data. This is what we focus on
    in this section.'
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: '`pandas`是一个能够高效管理和操作时间序列数据及其他表格数据结构的包。它允许在内存中处理甚至是相当大的数据集上执行复杂的数据分析任务。虽然重点在于内存操作，但也有多种用于外存（磁盘）操作的选项。尽管`pandas`提供了多种不同的数据结构，通过强大的类来体现，但最常用的结构是`DataFrame`类，它类似于关系型（SQL）数据库的典型表格，并用于管理例如金融时间序列数据。这是本节的重点。'
- en: DataFrame Class
  id: totrans-394
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DataFrame类
- en: 'In its most basic form, a `DataFrame` object is characterized by an index,
    column names, and tabular data. To make this more specific, consider the following
    sample data set:'
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 在其最基本形式中，`DataFrame`对象由索引、列名和表格数据组成。为了更具体地说明，考虑以下示例数据集：
- en: '[PRE33]'
  id: totrans-396
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO34-1)'
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO34-1)'
- en: Imports the `pandas` package.
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 导入`pandas`包。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO34-2)'
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO34-2)'
- en: Fixes the seed value of the random number generator of `NumPy`.
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 设置`NumPy`随机数生成器的种子值。
- en: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO34-3)'
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO34-3)'
- en: Creates an `ndarray` object with random numbers.
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 使用随机数创建一个`ndarray`对象。
- en: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO34-4)'
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO34-4)'
- en: Defines a `DatetimeIndex` object with some dates.
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 定义一个包含一些日期的`DatetimeIndex`对象。
- en: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO34-5)'
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO34-5)'
- en: Defines a `list` object containing the column names (labels).
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 定义一个包含列名（标签）的`list`对象。
- en: '[![6](assets/6.png)](#co_python__numpy__matplotlib__pandas_CO34-6)'
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: '[![6](assets/6.png)](#co_python__numpy__matplotlib__pandas_CO34-6)'
- en: Instantiates a `DataFrame` object.
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: 实例化一个`DataFrame`对象。
- en: '[![7](assets/7.png)](#co_python__numpy__matplotlib__pandas_CO34-7)'
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: '[![7](assets/7.png)](#co_python__numpy__matplotlib__pandas_CO34-7)'
- en: Shows the `str` (HTML) representation of the new object.
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 展示新对象的`str`（HTML）表示。
- en: '`DataFrame` objects have built in a multitude of basic, advanced, and convenience
    methods, a few of which are illustrated in the Python code that follows:'
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: '`DataFrame`对象具有多种基本、高级和便利方法，下面的Python代码演示了其中的一些：'
- en: '[PRE34]'
  id: totrans-412
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO35-1)'
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO35-1)'
- en: Shows the first five data rows.
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 展示前五行数据。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO35-2)'
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO35-2)'
- en: Shows the last five data rows.
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: 展示最后五行数据。
- en: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO35-3)'
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO35-3)'
- en: Prints the `index` attribute of the object.
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: 打印对象的`index`属性。
- en: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO35-4)'
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO35-4)'
- en: Prints the `column` attribute of the object.
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: 打印对象的`column`属性。
- en: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO35-5)'
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO35-5)'
- en: Shows some meta data about the object.
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: 展示对象的一些元数据。
- en: '[![6](assets/6.png)](#co_python__numpy__matplotlib__pandas_CO35-6)'
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: '[![6](assets/6.png)](#co_python__numpy__matplotlib__pandas_CO35-6)'
- en: Provides selected summary statistics about the data.
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: 提供关于数据的选定摘要统计信息。
- en: While `NumPy` provides a specialized data structure for multi-dimensional arrays
    (with numerical data in general), `pandas` takes specialization one step further
    to tabular (two-dimensional) data with the `DataFrame` class. In particular, `pandas`
    is strong in handling financial time series data, as subsequent examples illustrate.
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然`NumPy`提供了一个专门的多维数组数据结构（通常用于数值数据），`pandas`将专门化推向了一个更高的层次，使用`DataFrame`类处理表格（二维）数据。特别是在处理金融时间序列数据方面，`pandas`表现出色，正如后续的例子所示。
- en: Numerical Operations
  id: totrans-426
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数值操作
- en: 'Numerical operations are in general as easy with `DataFrame` objects as with
    `NumPy` `ndarray` objects. They are also quite close in terms of syntax:'
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: '`DataFrame`对象与`NumPy`的`ndarray`对象一样，可以轻松进行数值运算。它们在语法上也非常接近：'
- en: '[PRE35]'
  id: totrans-428
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO36-1)'
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO36-1)'
- en: Scalar (vectorized) multiplication of all elements.
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: 所有元素的标量（向量化）乘法。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO36-2)'
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO36-2)'
- en: Calculates the column-wise standard deviation…
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: 计算按列的标准差…
- en: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO36-3)'
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO36-3)'
- en: …and mean value. With `DataFrame` objects, column-wise operations are the default.
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: …以及均值。对于 `DataFrame` 对象，默认是按列进行操作。
- en: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO36-4)'
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO36-4)'
- en: Calculates the mean value per index value (that is, row-wise).
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: 计算每个索引值的均值（即，按行）。
- en: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO36-5)'
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO36-5)'
- en: Applies a function of `NumPy` to the `DataFrame` object.
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `NumPy` 的函数应用于 `DataFrame` 对象。
- en: Data Selection
  id: totrans-439
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据选择
- en: 'Pieces of data can be looked up via different mechanisms:'
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: 数据可以通过不同的机制查找：
- en: '[PRE36]'
  id: totrans-441
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO37-1)'
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO37-1)'
- en: Selects a column by name.
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: 按名称选择列。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO37-2)'
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO37-2)'
- en: Selects a row by index position.
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: 按索引位置选择一行。
- en: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO37-3)'
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO37-3)'
- en: Selects two rows by index position.
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
  zh: 按索引位置选择两行。
- en: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO37-4)'
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO37-4)'
- en: Selects two row values from one column by index positions.
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: 按索引位置从一列中选择两个行值。
- en: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO37-5)'
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO37-5)'
- en: Uses the dot lookup syntax to select a column.
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: 使用点查找语法选择列。
- en: '[![6](assets/6.png)](#co_python__numpy__matplotlib__pandas_CO37-6)'
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: '[![6](assets/6.png)](#co_python__numpy__matplotlib__pandas_CO37-6)'
- en: Selects a row by index value.
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: 按索引值选择一行。
- en: '[![7](assets/7.png)](#co_python__numpy__matplotlib__pandas_CO37-7)'
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
  zh: '[![7](assets/7.png)](#co_python__numpy__matplotlib__pandas_CO37-7)'
- en: Selects a single data point by index value and column name.
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: 按索引值和列名选择单个数据点。
- en: '[![8](assets/8.png)](#co_python__numpy__matplotlib__pandas_CO37-8)'
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
  zh: '[![8](assets/8.png)](#co_python__numpy__matplotlib__pandas_CO37-8)'
- en: Implements a vectorized arithmetic operation.
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: 实现向量化的算术操作。
- en: Boolean Operations
  id: totrans-458
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 布尔运算
- en: 'Data selection based on Boolean operations is also a strength of pandas:'
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: 基于布尔运算进行的数据选择也是 pandas 的优势之一：
- en: '[PRE37]'
  id: totrans-460
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO38-1)'
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO38-1)'
- en: Which values in column `no3` are greater than 0.5?
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: 列 `no3` 中大于 0.5 的值是哪些？
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO38-2)'
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO38-2)'
- en: Select all such rows for which the condition is `True`.
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: 选择所有满足条件为 `True` 的行。
- en: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO38-3)'
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO38-3)'
- en: Combines two conditions with the `&` (bitwise `and`) operator; `|` is the bitwise
    `or` operator.
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `&`（按位 `and`）运算符结合两个条件；`|` 是按位 `or` 运算符。
- en: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO38-4)'
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO38-4)'
- en: Selects all rows with index values greater (later) than `'2020-5-15'` (here,
    based on `str` object sorting).
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: 选择所有索引值大于 `'2020-5-15'` 的行（基于 `str` 对象排序）。
- en: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO38-5)'
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO38-5)'
- en: Uses the `.query()` method to select rows given conditions as `str` objects.
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `.query()` 方法根据条件选择行，条件为 `str` 对象。
- en: Plotting with pandas
  id: totrans-471
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 pandas 绘图
- en: '`pandas` is well integrated with the `matplotlib` plotting package, which makes
    it convenient to plot data stored in `DataFrame` objects. In general, a single
    method call does the trick already (see [Figure A-6](#plot_06)):'
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: '`pandas` 与 `matplotlib` 绘图包集成良好，便于绘制存储在 `DataFrame` 对象中的数据。一般情况下，一个方法调用就能搞定（见
    [图 A-6](#plot_06)）：'
- en: '[PRE38]'
  id: totrans-473
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO39-1)'
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO39-1)'
- en: Plots the data as a line plot (column-wise) and fixes the figure size.
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: 将数据绘制为线图（按列）并修正图形大小。
- en: '![pfat aa06](assets/pfat_aa06.png)'
  id: totrans-476
  prefs: []
  type: TYPE_IMG
  zh: '![pfat aa06](assets/pfat_aa06.png)'
- en: Figure A-6\. Line plot with `pandas`
  id: totrans-477
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 A-6\. 使用 `pandas` 绘制线图
- en: '`pandas` takes care of the proper formatting of the index values, dates in
    this case. This only works for a `DatetimeIndex` properly. If the date-time information
    is available as `str` objects only, the `DatetimeIndex()` constructor can be used
    to transform the date-time information easily:'
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，`pandas`负责格式化索引值，如本例中的日期。这仅适用于`DatetimeIndex`。如果日期时间信息仅以`str`对象形式存在，可以使用`DatetimeIndex()`构造函数轻松转换日期时间信息：
- en: '[PRE39]'
  id: totrans-479
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO40-1)'
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO40-1)'
- en: Date-time index data as a `list` object of `str` objects.
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: 日期时间索引数据作为`str`对象的`list`对象。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO40-2)'
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO40-2)'
- en: Generates a `DatetimeIndex` object out of the `list` object.
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
  zh: 从`list`对象生成`DatetimeIndex`对象。
- en: 'Histograms are also generated this way. In both cases, `pandas` takes care
    of the handling of the single columns and automatically generates single lines
    (with respective legend entries, see [Figure A-6](#plot_06)) and generates respective
    sub-plots with three different histograms (as in [Figure A-7](#plot_07)):'
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这种方式也可以生成直方图。在这两种情况下，`pandas`负责处理单列并自动生成单行（具有相应的图例条目，请参见[图 A-6](#plot_06)）并生成三个不同直方图的相应子图（如[图
    A-7](#plot_07)）：
- en: '[PRE40]'
  id: totrans-485
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO41-1)'
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO41-1)'
- en: Generates a histogram for each column.
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
  zh: 为每列生成直方图。
- en: '![pfat aa07](assets/pfat_aa07.png)'
  id: totrans-488
  prefs: []
  type: TYPE_IMG
  zh: '![pfat aa07](assets/pfat_aa07.png)'
- en: Figure A-7\. Histograms with `pandas`
  id: totrans-489
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图表 A-7\. 使用`pandas`生成直方图
- en: Input-Output Operations
  id: totrans-490
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 输入输出操作
- en: 'Yet another strength of `pandas` is the exporting and importing of data to
    and from diverse data storage formats (see also [Chapter 3](ch03.html#financial_data)).
    Consider the case of comma separated value (CSV) files:'
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
  zh: '`pandas`的另一个优点是导出和导入不同数据存储格式的数据（也请参阅[第三章](ch03.html#financial_data)）。考虑逗号分隔值（CSV）文件的情况：'
- en: '[PRE41]'
  id: totrans-492
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO42-1)'
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO42-1)'
- en: Writes the data to disk as a CSV file.
  id: totrans-494
  prefs: []
  type: TYPE_NORMAL
  zh: 将数据写入磁盘作为CSV文件。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO42-2)'
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO42-2)'
- en: Opens that file and prints the contents line by line.
  id: totrans-496
  prefs: []
  type: TYPE_NORMAL
  zh: 打开该文件并逐行打印内容。
- en: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO42-3)'
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO42-3)'
- en: Reads the data stored in the CSV file into a new `DataFrame` object.
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
  zh: 将存储在CSV文件中的数据读入新的`DataFrame`对象。
- en: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO42-4)'
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO42-4)'
- en: Defines the first column to be the `index` column.
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
  zh: 定义第一列为`index`列。
- en: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO42-5)'
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
  zh: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO42-5)'
- en: Date-time information in the index column shall be transformed to `Timestamp`
    objects.
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
  zh: 索引列中的日期时间信息应转换为`Timestamp`对象。
- en: '[![6](assets/6.png)](#co_python__numpy__matplotlib__pandas_CO42-6)'
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
  zh: '[![6](assets/6.png)](#co_python__numpy__matplotlib__pandas_CO42-6)'
- en: Prints the first five rows of the new `DataFrame` object.
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
  zh: 打印新的`DataFrame`对象的前五行。
- en: 'However, in general, you would store `DataFrame` objects on disk in more efficient
    binary formats like [HDF5](http://hdfgroup.org). `pandas` in this case wraps the
    functionality of the [`PyTables` package](http://pytables.org). The constructor
    function to be used is `HDFStore`:'
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
  zh: 一般情况下，您应将`DataFrame`对象以更高效的二进制格式（如[HDF5](http://hdfgroup.org)）存储在磁盘上。在这种情况下，`pandas`包装了[`PyTables`包](http://pytables.org)的功能。应使用的构造函数是`HDFStore`：
- en: '[PRE42]'
  id: totrans-506
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO43-1)'
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO43-1)'
- en: Opens an `HDFStore` object.
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
  zh: 打开一个`HDFStore`对象。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO43-2)'
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO43-2)'
- en: Writes the `DataFrame` object (the data) to the `HDFStore`.
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
  zh: 将`DataFrame`对象（数据）写入`HDFStore`。
- en: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO43-3)'
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO43-3)'
- en: Shows the structure/contents of the database file.
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
  zh: 显示数据库文件的结构/内容。
- en: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO43-4)'
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO43-4)'
- en: Reads the data into a new `DataFrame` object.
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: 将数据读入新的`DataFrame`对象。
- en: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO43-5)'
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO43-5)'
- en: Closes the `HDFStore` object.
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
  zh: 关闭`HDFStore`对象。
- en: '[![6](assets/6.png)](#co_python__numpy__matplotlib__pandas_CO43-6)'
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
  zh: '[![6](assets/6.png)](#co_python__numpy__matplotlib__pandas_CO43-6)'
- en: Shows the final five rows of the new `DataFrame` object.
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
  zh: 显示新的`DataFrame`对象的最后五行。
- en: '[![7](assets/7.png)](#co_python__numpy__matplotlib__pandas_CO43-7)'
  id: totrans-519
  prefs: []
  type: TYPE_NORMAL
  zh: '[![7](assets/7.png)](#co_python__numpy__matplotlib__pandas_CO43-7)'
- en: Removes the CSV and HDF5 files.
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
  zh: 移除 CSV 和 HDF5 文件。
- en: Case Study
  id: totrans-521
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 案例研究
- en: 'When it comes to financial data, there are useful data importing functions
    available in the `pandas` package (see also [Chapter 3](ch03.html#financial_data)).
    The following code reads historical daily data for the S&P 500 index and the VIX
    volatility index from a CSV file stored on a remote server using the `pd.read_csv()`
    function:'
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理金融数据时，`pandas`包中提供了有用的数据导入函数（另见[第 3 章](ch03.html#financial_data)）。以下代码使用`pd.read_csv()`函数从远程服务器上的
    CSV 文件中读取标准普尔 500 指数和 VIX 波动率指数的历史日数据：
- en: '[PRE43]'
  id: totrans-523
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO44-1)'
  id: totrans-524
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO44-1)'
- en: Imports the `pandas` package.
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
  zh: 导入`pandas`包。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO44-2)'
  id: totrans-526
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO44-2)'
- en: Reads historical data for the S&P 500 stock index from a CSV file (data from
    Refinitiv Eikon Data API).
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
  zh: 从 CSV 文件（来自 Refinitiv Eikon Data API 的数据）中读取标准普尔 500 指数的历史数据。
- en: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO44-3)'
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO44-3)'
- en: Shows the meta information for the resulting `DataFrame` object.
  id: totrans-529
  prefs: []
  type: TYPE_NORMAL
  zh: 显示结果`DataFrame`对象的元信息。
- en: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO44-4)'
  id: totrans-530
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO44-4)'
- en: Reads historical data for the VIX volatility index.
  id: totrans-531
  prefs: []
  type: TYPE_NORMAL
  zh: 读取波动率指数 VIX 的历史数据。
- en: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO44-5)'
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
  zh: '[![5](assets/5.png)](#co_python__numpy__matplotlib__pandas_CO44-5)'
- en: Shows the meta information for the resulting `DataFrame` object.
  id: totrans-533
  prefs: []
  type: TYPE_NORMAL
  zh: 显示结果`DataFrame`对象的元信息。
- en: 'Let us combine the respective `Close` columns into a single `DataFrame` object.
    Multiple ways are possible to accomplish this goal:'
  id: totrans-534
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将各自的`Close`列合并成一个单独的`DataFrame`对象。有多种方法可以实现这个目标：
- en: '[PRE44]'
  id: totrans-535
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO45-1)'
  id: totrans-536
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO45-1)'
- en: Uses the `join` method to combine the relevant data sub-sets.
  id: totrans-537
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`join`方法合并相关数据子集。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO45-2)'
  id: totrans-538
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO45-2)'
- en: Uses the `merge` function for the combination.
  id: totrans-539
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`merge`函数进行组合。
- en: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO45-3)'
  id: totrans-540
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO45-3)'
- en: Uses the `DataFrame` constructor in combination with a `dict` object as input.
  id: totrans-541
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`DataFrame`构造函数与`dict`对象结合使用。
- en: 'Having available the combined data in a single object makes visual analysis
    straightforward (see [Figure A-8](#example_01)):'
  id: totrans-542
  prefs: []
  type: TYPE_NORMAL
  zh: 将所有组合数据都包含在一个单一对象中使得视觉分析变得直观（见[图 A-8](#example_01)）：
- en: '[PRE45]'
  id: totrans-543
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO46-1)'
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO46-1)'
- en: Plots the two data sub-sets into separate sub-plots.
  id: totrans-545
  prefs: []
  type: TYPE_NORMAL
  zh: 将两个数据子集绘制到单独的子图中。
- en: '![pfat aa08](assets/pfat_aa08.png)'
  id: totrans-546
  prefs: []
  type: TYPE_IMG
  zh: '![pfat aa08](assets/pfat_aa08.png)'
- en: Figure A-8\. Historical end-of-day closing values for the S&P 500 and VIX
  id: totrans-547
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 A-8\. 标准普尔 500 指数和波动率指数的历史收盘价。
- en: '`pandas` also allows vectorized operations on whole `DataFrame` objects. The
    following code calculates the log returns over the two columns of the `spxvix`
    object simultaneously in vectorized fashion. The `shift` method shifts the data
    set by the number of index values as provided (in this particular case, by one
    trading day):'
  id: totrans-548
  prefs: []
  type: TYPE_NORMAL
  zh: '`pandas`还允许在整个`DataFrame`对象上进行向量化操作。以下代码以向量化方式同时计算`DataFrame`对象`spxvix`的两列的对数收益率。`shift`方法根据提供的索引值数量（在本例中为一个交易日）来移动数据集：'
- en: '[PRE46]'
  id: totrans-549
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO47-1)'
  id: totrans-550
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO47-1)'
- en: Calculates the log returns for the two time series in fully vectorized fashion.
  id: totrans-551
  prefs: []
  type: TYPE_NORMAL
  zh: 以完全向量化的方式计算两个时间序列的对数收益率。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO47-2)'
  id: totrans-552
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO47-2)'
- en: Drops all rows containing `NaN` values (“not a number”).
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
  zh: 删除所有包含`NaN`值（“不是数字”）的行。
- en: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO47-3)'
  id: totrans-554
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO47-3)'
- en: Shows the first five rows of the new `DataFrame` object.
  id: totrans-555
  prefs: []
  type: TYPE_NORMAL
  zh: 显示新`DataFrame`对象的前五行。
- en: 'Consider the plot in [Figure A-9](#example_02) showing the VIX log returns
    against the SPX log returns in a scatter plot with a linear regression. It illustrates
    a strong negative correlation between the two indexes:'
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑图中的绘图（见[图 A-9](#example_02)），显示了VIX对标准普尔 500指数对数收益率的散点图和线性回归。它展示了这两个指数之间的强负相关关系。
- en: '[PRE47]'
  id: totrans-557
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO48-1)'
  id: totrans-558
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO48-1)'
- en: Implements a linear regression on the two log return data sets.
  id: totrans-559
  prefs: []
  type: TYPE_NORMAL
  zh: 对两个对数收益率数据集实施线性回归。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO48-2)'
  id: totrans-560
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO48-2)'
- en: Creates a scatter plot of the log returns.
  id: totrans-561
  prefs: []
  type: TYPE_NORMAL
  zh: 创建对数收益率的散点图。
- en: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO48-3)'
  id: totrans-562
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO48-3)'
- en: Plots the linear regression line in the existing scatter plot.
  id: totrans-563
  prefs: []
  type: TYPE_NORMAL
  zh: 在现有的散点图中绘制线性回归线。
- en: '![pfat aa09](assets/pfat_aa09.png)'
  id: totrans-564
  prefs: []
  type: TYPE_IMG
  zh: '![pfat aa09](assets/pfat_aa09.png)'
- en: Figure A-9\. Scatter plot of S&P 500 and VIX log returns with linear regression
    line
  id: totrans-565
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图A-9\. S&P 500和VIX对数收益率的散点图与线性回归线
- en: 'Having financial time series data stored in a `pandas` `DataFrame` object makes
    the calculation of typical statistics straightforward:'
  id: totrans-566
  prefs: []
  type: TYPE_NORMAL
  zh: 将财务时间序列数据存储在`pandas`的`DataFrame`对象中，可以轻松计算典型的统计数据：
- en: '[PRE48]'
  id: totrans-567
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO49-1)'
  id: totrans-568
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO49-1)'
- en: Calculates the annualized mean return for the two indexes.
  id: totrans-569
  prefs: []
  type: TYPE_NORMAL
  zh: 计算两个指数的年化平均收益率。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO49-2)'
  id: totrans-570
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO49-2)'
- en: Calculates the annualized standard deviation.
  id: totrans-571
  prefs: []
  type: TYPE_NORMAL
  zh: 计算年化标准差。
- en: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO49-3)'
  id: totrans-572
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO49-3)'
- en: Calculates the Sharpe ratio for a risk-free short rate of 1%.
  id: totrans-573
  prefs: []
  type: TYPE_NORMAL
  zh: 计算无风险短期利率为1%的夏普比率。
- en: 'The maximum drawdown, which we only calculate for the S&P 500 index, is a bit
    more involved. For its calculation, we use the `.cummax()` method, which records
    the running, historical maximum of the time series up to a certain date. Consider
    the following code that generates the plot in [Figure A-10](#example_03):'
  id: totrans-574
  prefs: []
  type: TYPE_NORMAL
  zh: 最大回撤，我们仅计算S&P 500指数，稍微复杂一些。在其计算中，我们使用`.cummax()`方法，记录到某个日期为止的历史最大值。考虑以下生成[图A-10](#example_03)的图表的代码：
- en: '[PRE49]'
  id: totrans-575
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO50-1)'
  id: totrans-576
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO50-1)'
- en: Instantiates a new `figure` object.
  id: totrans-577
  prefs: []
  type: TYPE_NORMAL
  zh: 实例化一个新的`figure`对象。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO50-2)'
  id: totrans-578
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO50-2)'
- en: Plots the historical closing values for the S&P 500 index.
  id: totrans-579
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制S&P 500指数的历史收盘值。
- en: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO50-3)'
  id: totrans-580
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO50-3)'
- en: Calculates and plots the running maximum over time.
  id: totrans-581
  prefs: []
  type: TYPE_NORMAL
  zh: 计算并绘制随时间变化的运行最大值。
- en: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO50-4)'
  id: totrans-582
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO50-4)'
- en: Places a legend on the canvas.
  id: totrans-583
  prefs: []
  type: TYPE_NORMAL
  zh: 在画布上放置图例。
- en: '![pfat aa10](assets/pfat_aa10.png)'
  id: totrans-584
  prefs: []
  type: TYPE_IMG
  zh: '![pfat aa10](assets/pfat_aa10.png)'
- en: Figure A-10\. Historical closing prices of S&P 500 index and running maximum
  id: totrans-585
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图A-10\. S&P 500指数的历史收盘价和运行最大值
- en: 'The *absolute maximum drawdown* is the largest difference between the running
    maximum and the current index level. In our particular case, it is about 580 index
    points. The *relative maximum drawdown* might sometimes be a bit more meaningful.
    It is here a value of about 20%:'
  id: totrans-586
  prefs: []
  type: TYPE_NORMAL
  zh: '*绝对最大回撤*是运行最大值与当前指数水平之间的最大差异。在我们的特定情况下，约为580个指数点。*相对最大回撤*有时可能更具有意义。在这里，大约为20%：'
- en: '[PRE50]'
  id: totrans-587
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO51-1)'
  id: totrans-588
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO51-1)'
- en: Derives the *absolute* maximum drawdown.
  id: totrans-589
  prefs: []
  type: TYPE_NORMAL
  zh: 求取*绝对*最大回撤。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO51-2)'
  id: totrans-590
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO51-2)'
- en: Derives the *relative* maximum drawdown.
  id: totrans-591
  prefs: []
  type: TYPE_NORMAL
  zh: 求取*相对*最大回撤。
- en: 'The longest drawdown period is calculated as follows. The following code selects
    all those data points where the drawdown is zero (where a new maximum is reached).
    It then calculates the difference between two consecutive index values (trading
    dates) for which the drawdown is zero and takes the maximum value. Given the data
    set we are analyzing, the longest drawdown period is 417 days:'
  id: totrans-592
  prefs: []
  type: TYPE_NORMAL
  zh: 最长回撤期如下计算。以下代码选择所有回撤为零的数据点（即达到新的最大值的地方）。然后计算回撤为零的两个连续指数值（交易日期）之间的差异，并取最大值。在我们分析的数据集中，最长回撤期为417天：
- en: '[PRE51]'
  id: totrans-593
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO52-1)'
  id: totrans-594
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_python__numpy__matplotlib__pandas_CO52-1)'
- en: Picks out all index positions where the drawdown is 0.
  id: totrans-595
  prefs: []
  type: TYPE_NORMAL
  zh: 选择所有回撤为0的索引位置。
- en: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO52-2)'
  id: totrans-596
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_python__numpy__matplotlib__pandas_CO52-2)'
- en: Calculates the `timedelta` values between all such index positions.
  id: totrans-597
  prefs: []
  type: TYPE_NORMAL
  zh: 计算所有这些索引位置之间的`timedelta`值。
- en: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO52-3)'
  id: totrans-598
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_python__numpy__matplotlib__pandas_CO52-3)'
- en: Shows a select few of these values.
  id: totrans-599
  prefs: []
  type: TYPE_NORMAL
  zh: 展示了其中一些值的选择性。
- en: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO52-4)'
  id: totrans-600
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_python__numpy__matplotlib__pandas_CO52-4)'
- en: Picks out the maximum value for the result.
  id: totrans-601
  prefs: []
  type: TYPE_NORMAL
  zh: 选择结果的最大值。
- en: Conclusions
  id: totrans-602
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: This appendix provides a concise, introductory overview of selected topics relevant
    to use Python, `NumPy`, `matplotlib`, and `pandas` in the context of algorithmic
    trading. It cannot, of course, replace a thorough training and practical experience,
    but it helps those who want to get started quickly and who are willing to dive
    deeper into the details where necessary.
  id: totrans-603
  prefs: []
  type: TYPE_NORMAL
  zh: 本附录提供了有关在算法交易环境中使用 Python、`NumPy`、`matplotlib` 和 `pandas` 的选定主题的简明介绍。当然，它无法取代全面的培训和实践经验，但它可以帮助那些希望快速入门并愿意在必要时深入了解细节的人。
- en: Further Resources
  id: totrans-604
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步资源
- en: A valuable, free source for the topics covered in this appendix are the [Scipy
    Lecture Notes](http://scipy-lectures.org) that are available in multiple electronic
    formats. Also freely available is the online book [From Python to NumPy](https://oreil.ly/vo54e)
    by Nicolas Rougier.
  id: totrans-605
  prefs: []
  type: TYPE_NORMAL
  zh: 本附录涵盖的主题的宝贵、免费资源是[Scipy Lecture Notes](http://scipy-lectures.org)，提供多种电子格式。同样可以免费获得的是
    Nicolas Rougier 的在线书籍[从 Python 到 NumPy](https://oreil.ly/vo54e)。
- en: 'Books cited in this appendix:'
  id: totrans-606
  prefs: []
  type: TYPE_NORMAL
  zh: 本附录中引用的书籍：
- en: 'Hilpisch, Yves. 2018\. *Python for Finance*. 2nd ed. Sebastopol: O’Reilly.'
  id: totrans-607
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Hilpisch, Yves. 2018\. *Python 金融*. 第二版. Sebastopol: O’Reilly.'
- en: 'McKinney, Wes. 2017\. *Python for Data Analysis*. 2nd ed. Sebastopol: O’Reilly.'
  id: totrans-608
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'McKinney, Wes. 2017\. *Python 数据分析*. 第二版. Sebastopol: O’Reilly.'
- en: 'VanderPlas, Jake. 2017\. *Python Data Science Handbook*. Sebastopol: O’Reilly.'
  id: totrans-609
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'VanderPlas, Jake. 2017\. *Python 数据科学手册*. Sebastopol: O’Reilly.'
- en: ^([1](app01.html#idm45785328416584-marker)) Note that computers can only generate
    *pseudorandom* numbers as approximations for *truly random* numbers.
  id: totrans-610
  prefs: []
  type: TYPE_NORMAL
  zh: ^([1](app01.html#idm45785328416584-marker)) 请注意，计算机只能生成*伪随机*数作为*真正随机*数的近似。
