["```py\n$ docker run -ti -h pyalgo -p 11111:11111 ubuntu:latest /bin/bash\n\nroot@pyalgo:/# apt-get update; apt-get upgrade -y\n...\nroot@pyalgo:/# apt-get install -y gcc wget\n...\nroot@pyalgo:/# cd root\nroot@pyalgo:~# wget \\\n> https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh \\\n> -O miniconda.sh\n...\nHTTP request sent, awaiting response... 200 OK\nLength: 93052469 (89M) [application/x-sh]\nSaving to: 'miniconda.sh'\n\nminiconda.sh              100%[============>]  88.74M  1.60MB/s    in 2m 15s\n\n2020-08-25 11:01:54 (3.08 MB/s) - 'miniconda.sh' saved [93052469/93052469]\n\nroot@pyalgo:~# bash miniconda.sh\n\nWelcome to Miniconda3 py38_4.8.3\n\nIn order to continue the installation process, please review the license\nagreement.\nPlease, press ENTER to continue\n>>>\n```", "```py\n...\nLast updated February 25, 2020\n\nDo you accept the license terms? [yes|no]\n[no] >>> yes\n\nMiniconda3 will now be installed into this location:\n/root/miniconda3\n\n  - Press ENTER to confirm the location\n  - Press CTRL-C to abort the installation\n  - Or specify a different location below\n\n[/root/miniconda3] >>>\nPREFIX=/root/miniconda3\nUnpacking payload ...\nCollecting package metadata (current_repodata.json): done\nSolving environment: done\n\n## Package Plan ##\n\n  environment location: /root/miniconda3\n...\n  python             pkgs/main/linux-64::python-3.8.3-hcff3b4d_0\n...\nPreparing transaction: done\nExecuting transaction: done\ninstallation finished.\n```", "```py\nDo you wish the installer to initialize Miniconda3\nby running conda init? [yes|no]\n[no] >>> yes\n...\nno change     /root/miniconda3/etc/profile.d/conda.csh\nmodified      /root/.bashrc\n\n==> For changes to take effect, close and re-open your current shell. <==\n\nIf you'd prefer that conda's base environment not be activated on startup,\n   set the auto_activate_base parameter to false:\n\nconda config --set auto_activate_base false\n\nThank you for installing Miniconda3!\nroot@pyalgo:~#\n```", "```py\nroot@pyalgo:~# export PATH=\"/root/miniconda3/bin/:$PATH\"\nroot@pyalgo:~# conda update -y conda\n...\nroot@pyalgo:~# echo \". /root/miniconda3/etc/profile.d/conda.sh\" >> ~/.bashrc\nroot@pyalgo:~# bash\n(base) root@pyalgo:~#\n```", "```py\n(base) root@pyalgo:~# python\nPython 3.8.3 (default, May 19 2020, 18:47:26)\n[GCC 7.3.0] :: Anaconda, Inc. on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> print('Hello Python for Algorithmic Trading World.')\nHello Python for Algorithmic Trading World.\n>>> exit()\n(base) root@pyalgo:~#\n```", "```py\n(base) root@pyalgo:~# conda install numpy\nCollecting package metadata (current_repodata.json): done\nSolving environment: done\n\n## Package Plan ##\n\n  environment location: /root/miniconda3\n\n  added / updated specs:\n    - numpy\n\nThe following packages will be downloaded:\n\n    package                    |            build\n    ---------------------------|-----------------\n    blas-1.0                   |              mkl           6 KB\n    intel-openmp-2020.1        |              217         780 KB\n    mkl-2020.1                 |              217       129.0 MB\n    mkl-service-2.3.0          |   py38he904b0f_0          62 KB\n    mkl_fft-1.1.0              |   py38h23d657b_0         150 KB\n    mkl_random-1.1.1           |   py38h0573a6f_0         341 KB\n    numpy-1.19.1               |   py38hbc911f0_0          21 KB\n    numpy-base-1.19.1          |   py38hfa32c7d_0         4.2 MB\n    ------------------------------------------------------------\n                                           Total:       134.5 MB\n\nThe following NEW packages will be INSTALLED:\n\n  blas               pkgs/main/linux-64::blas-1.0-mkl\n  intel-openmp       pkgs/main/linux-64::intel-openmp-2020.1-217\n  mkl                pkgs/main/linux-64::mkl-2020.1-217\n  mkl-service        pkgs/main/linux-64::mkl-service-2.3.0-py38he904b0f_0\n  mkl_fft            pkgs/main/linux-64::mkl_fft-1.1.0-py38h23d657b_0\n  mkl_random         pkgs/main/linux-64::mkl_random-1.1.1-py38h0573a6f_0\n  numpy              pkgs/main/linux-64::numpy-1.19.1-py38hbc911f0_0\n  numpy-base         pkgs/main/linux-64::numpy-base-1.19.1-py38hfa32c7d_0\n\nProceed ([y]/n)? y\n\nDownloading and Extracting Packages\nnumpy-base-1.19.1    | 4.2 MB    | ############################## | 100%\nblas-1.0             | 6 KB      | ############################## | 100%\nmkl_fft-1.1.0        | 150 KB    | ############################## | 100%\nmkl-service-2.3.0    | 62 KB     | ############################## | 100%\nnumpy-1.19.1         | 21 KB     | ############################## | 100%\nmkl-2020.1           | 129.0 MB  | ############################## | 100%\nmkl_random-1.1.1     | 341 KB    | ############################## | 100%\nintel-openmp-2020.1  | 780 KB    | ############################## | 100%\nPreparing transaction: done\nVerifying transaction: done\nExecuting transaction: done\n(base) root@pyalgo:~#\n```", "```py\n(base) root@pyalgo:~# conda install -y ipython matplotlib pandas \\\n> pytables scikit-learn scipy\n...\nCollecting package metadata (current_repodata.json): done\nSolving environment: done\n\n## Package Plan ##\n\n  environment location: /root/miniconda3\n\n  added / updated specs:\n    - ipython\n    - matplotlib\n    - pandas\n    - pytables\n    - scikit-learn\n    - scipy\n\nThe following packages will be downloaded:\n\n    package                    |            build\n    ---------------------------|-----------------\n    backcall-0.2.0             |             py_0          15 KB\n    ...\n    zstd-1.4.5                 |       h9ceee32_0         619 KB\n    ------------------------------------------------------------\n                                           Total:       144.9 MB\n\nThe following NEW packages will be INSTALLED:\n\n  backcall           pkgs/main/noarch::backcall-0.2.0-py_0\n  blosc              pkgs/main/linux-64::blosc-1.20.0-hd408876_0\n  ...\n  zstd               pkgs/main/linux-64::zstd-1.4.5-h9ceee32_0\n\nDownloading and Extracting Packages\nglib-2.65.0          | 2.9 MB    | ############################## | 100%\n...\nsnappy-1.1.8         | 40 KB     | ############################## | 100%\nPreparing transaction: done\nVerifying transaction: done\nExecuting transaction: done\n(base) root@pyalgo:~#\n```", "```py\n(base) root@pyalgo:~# ipython\nPython 3.8.3 (default, May 19 2020, 18:47:26)\nType 'copyright', 'credits' or 'license' for more information\nIPython 7.16.1 -- An enhanced Interactive Python. Type '?' for help.\n\nIn [1]: import numpy as np\n\nIn [2]: np.random.seed(100)\n\nIn [3]: np.random.standard_normal((5, 4))\nOut[3]:\narray([[-1.74976547,  0.3426804 ,  1.1530358 , -0.25243604],\n       [ 0.98132079,  0.51421884,  0.22117967, -1.07004333],\n       [-0.18949583,  0.25500144, -0.45802699,  0.43516349],\n       [-0.58359505,  0.81684707,  0.67272081, -0.10441114],\n       [-0.53128038,  1.02973269, -0.43813562, -1.11831825]])\n\nIn [4]: exit\n(base) root@pyalgo:~#\n```", "```py\n(base) root@pyalgo:~# conda list\n# packages in environment at /root/miniconda3:\n#\n# Name                    Version                   Build  Channel\n_libgcc_mutex             0.1                        main\nbackcall                  0.2.0                      py_0\nblas                      1.0                         mkl\nblosc                     1.20.0               hd408876_0\n...\nzlib                      1.2.11               h7b6447c_3\nzstd                      1.4.5                h9ceee32_0\n(base) root@pyalgo:~#\n```", "```py\n(base) root@pyalgo:~# conda remove matplotlib\nCollecting package metadata (repodata.json): done\nSolving environment: done\n\n## Package Plan ##\n\n  environment location: /root/miniconda3\n\n  removed specs:\n    - matplotlib\n\nThe following packages will be REMOVED:\n\nThe following packages will be REMOVED:\n\n  cycler-0.10.0-py38_0\n  ...\n  tornado-6.0.4-py38h7b6447c_1\n\nProceed ([y]/n)? y\n\nPreparing transaction: done\nVerifying transaction: done\nExecuting transaction: done\n(base) root@pyalgo:~#\n```", "```py\n(base) root@pyalgo:~# conda create --name py27 python=2.7\nCollecting package metadata (current_repodata.json): done\nSolving environment: failed with repodata from current_repodata.json,\nwill retry with next repodata source.\nCollecting package metadata (repodata.json): done\nSolving environment: done\n\n## Package Plan ##\n\n  environment location: /root/miniconda3/envs/py27\n\n  added / updated specs:\n    - python=2.7\n\nThe following packages will be downloaded:\n\n    package                    |            build\n    ---------------------------|-----------------\n    certifi-2019.11.28         |           py27_0         153 KB\n    pip-19.3.1                 |           py27_0         1.7 MB\n    python-2.7.18              |       h15b4118_1         9.9 MB\n    setuptools-44.0.0          |           py27_0         512 KB\n    wheel-0.33.6               |           py27_0          42 KB\n    ------------------------------------------------------------\n                                           Total:        12.2 MB\n\nThe following NEW packages will be INSTALLED:\n\n  _libgcc_mutex      pkgs/main/linux-64::_libgcc_mutex-0.1-main\n  ca-certificates    pkgs/main/linux-64::ca-certificates-2020.6.24-0\n  ...\n  zlib               pkgs/main/linux-64::zlib-1.2.11-h7b6447c_3\n\nProceed ([y]/n)? y\n\nDownloading and Extracting Packages\ncertifi-2019.11.28   | 153 KB    | ############################### | 100%\npython-2.7.18        | 9.9 MB    | ############################### | 100%\npip-19.3.1           | 1.7 MB    | ############################### | 100%\nsetuptools-44.0.0    | 512 KB    | ############################### | 100%\nwheel-0.33.6         | 42 KB     | ############################### | 100%\nPreparing transaction: done\nVerifying transaction: done\nExecuting transaction: done\n#\n# To activate this environment, use\n#\n#     $ conda activate py27\n#\n# To deactivate an active environment, use\n#\n#     $ conda deactivate\n\n(base) root@pyalgo:~#\n```", "```py\n(base) root@pyalgo:~# conda activate py27\n(py27) root@pyalgo:~# pip install ipython\nDEPRECATION: Python 2.7 will reach the end of its life on January 1st, 2020.\n...\nExecuting transaction: done\n(py27) root@pyalgo:~#\n```", "```py\n(py27) root@pyalgo:~# ipython\nPython 2.7.18 |Anaconda, Inc.| (default, Apr 23 2020, 22:42:48)\nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 5.10.0 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\nIn [1]: print \"Hello Python for Algorithmic Trading World.\"\nHello Python for Algorithmic Trading World.\n\nIn [2]: exit\n(py27) root@pyalgo:~#\n```", "```py\n(py27) root@pyalgo:~# conda env list\n# conda environments:\n#\nbase                     /root/miniconda3\npy27                  *  /root/miniconda3/envs/py27\n\n(py27) root@pyalgo:~#\n```", "```py\n(py27) root@pyalgo:~# conda deactivate\n(base) root@pyalgo:~# conda env export --no-builds > base.yml\n(base) root@pyalgo:~# cat base.yml\nname: base\nchannels:\n  - defaults\ndependencies:\n  - _libgcc_mutex=0.1\n  - backcall=0.2.0\n  - blas=1.0\n  - blosc=1.20.0\n  ...\n  - zlib=1.2.11\n  - zstd=1.4.5\nprefix: /root/miniconda3\n(base) root@pyalgo:~#\n```", "```py\n(base) root@pyalgo:~# conda env remove -n py27\n\nRemove all packages in environment /root/miniconda3/envs/py27:\n\n(base) root@pyalgo:~#\n```", "```py\n#!/bin/bash\n#\n# Script to Install\n# Linux System Tools and\n# Basic Python Components\n#\n# Python for Algorithmic Trading\n# (c) Dr. Yves J. Hilpisch\n# The Python Quants GmbH\n#\n# GENERAL LINUX\napt-get update  # updates the package index cache\napt-get upgrade -y  # updates packages\n# installs system tools\napt-get install -y bzip2 gcc git  # system tools\napt-get install -y htop screen vim wget  # system tools\napt-get upgrade -y bash  # upgrades bash if necessary\napt-get clean  # cleans up the package index cache\n\n# INSTALL MINICONDA\n# downloads Miniconda\nwget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O \\\n  Miniconda.sh\nbash Miniconda.sh -b  # installs it\nrm -rf Miniconda.sh  # removes the installer\nexport PATH=\"/root/miniconda3/bin:$PATH\"  # prepends the new path\n\n# INSTALL PYTHON LIBRARIES\nconda install -y pandas  # installs pandas\nconda install -y ipython  # installs IPython shell\n\n# CUSTOMIZATION\ncd /root/\nwget http://hilpisch.com/.vimrc  # Vim configuration\n```", "```py\n#\n# Building a Docker Image with\n# the Latest Ubuntu Version and\n# Basic Python Install\n#\n# Python for Algorithmic Trading\n# (c) Dr. Yves J. Hilpisch\n# The Python Quants GmbH\n#\n\n# latest Ubuntu version\nFROM ubuntu:latest\n\n# information about maintainer\nMAINTAINER yves\n\n# add the bash script\nADD install.sh /\n# change rights for the script\nRUN chmod u+x /install.sh\n# run the bash script\nRUN /install.sh\n# prepend the new path\nENV PATH /root/miniconda3/bin:$PATH\n\n# execute IPython when container is run\nCMD [\"ipython\"]\n```", "```py\n(base) pro:Docker yves$ docker build -t pyalgo:basic .\nSending build context to Docker daemon  4.096kB\nStep 1/7 : FROM ubuntu:latest\n ---> 4e2eef94cd6b\nStep 2/7 : MAINTAINER yves\n ---> Running in 859db5550d82\nRemoving intermediate container 859db5550d82\n ---> 40adf11b689f\nStep 3/7 : ADD install.sh /\n ---> 34cd9dc267e0\nStep 4/7 : RUN chmod u+x /install.sh\n ---> Running in 08ce2f46541b\nRemoving intermediate container 08ce2f46541b\n ---> 88c0adc82cb0\nStep 5/7 : RUN /install.sh\n ---> Running in 112e70510c5b\n...\nRemoving intermediate container 112e70510c5b\n ---> 314dc8ec5b48\nStep 6/7 : ENV PATH /root/miniconda3/bin:$PATH\n ---> Running in 82497aea20bd\nRemoving intermediate container 82497aea20bd\n ---> 5364f494f4b4\nStep 7/7 : CMD [\"ipython\"]\n ---> Running in ff434d5a3c1b\nRemoving intermediate container ff434d5a3c1b\n ---> a0bb86daf9ad\nSuccessfully built a0bb86daf9ad\nSuccessfully tagged pyalgo:basic\n(base) pro:Docker yves$\n```", "```py\n(base) pro:Docker yves$ docker images\nREPOSITORY         TAG              IMAGE ID          CREATED             SIZE\npyalgo             basic            a0bb86daf9ad      2 minutes ago       1.79GB\nubuntu             latest           4e2eef94cd6b      5 days ago          73.9MB\n(base) pro:Docker yves$\n```", "```py\n(base) pro:Docker yves$ docker run -ti pyalgo:basic\nPython 3.8.3 (default, May 19 2020, 18:47:26)\nType 'copyright', 'credits' or 'license' for more information\nIPython 7.16.1 -- An enhanced Interactive Python. Type '?' for help.\n\nIn [1]: import numpy as np\n\nIn [2]: np.random.seed(100)\n\nIn [3]: a = np.random.standard_normal((5, 3))\n\nIn [4]: import pandas as pd\n\nIn [5]: df = pd.DataFrame(a, columns=['a', 'b', 'c'])\n\nIn [6]: df\nOut[6]:\n          a         b         c\n0 -1.749765  0.342680  1.153036\n1 -0.252436  0.981321  0.514219\n2  0.221180 -1.070043 -0.189496\n3  0.255001 -0.458027  0.435163\n4 -0.583595  0.816847  0.672721\n```", "```py\nCtrl+p --> Ctrl+q\n```", "```py\n(base) pro:Docker yves$ docker ps\nCONTAINER ID  IMAGE         COMMAND     CREATED       ...    NAMES\ne93c4cbd8ea8  pyalgo:basic  \"ipython\"   About a minute ago   jolly_rubin\n(base) pro:Docker yves$\n```", "```py\n(base) pro:Docker yves$ docker attach e93c\nIn [7]: df.info()\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 5 entries, 0 to 4\nData columns (total 3 columns):\n #   Column  Non-Null Count  Dtype\n---  ------  --------------  -----\n 0   a       5 non-null      float64\n 1   b       5 non-null      float64\n 2   c       5 non-null      float64\ndtypes: float64(3)\nmemory usage: 248.0 bytes\n```", "```py\nIn [8]: exit\n(base) pro:Docker yves$ docker rm e93c\ne93c\n(base) pro:Docker yves$\n```", "```py\n(base) pro:Docker yves$ docker rmi a0bb86\nUntagged: pyalgo:basic\nDeleted: sha256:a0bb86daf9adfd0ddf65312ce6c1b068100448152f2ced5d0b9b5adef5788d88\n...\nDeleted: sha256:40adf11b689fc778297c36d4b232c59fedda8c631b4271672cc86f505710502d\n(base) pro:Docker yves$\n```", "```py\n(base) pro:cloud yves$ openssl req -x509 -nodes -days 365 -newkey rsa:2048 \\\n> -keyout mykey.key -out mycert.pem\nGenerating a RSA private key\n.......+++++\n.....+++++\n+++++\nwriting new private key to 'mykey.key'\n-----\nYou are about to be asked to enter information that will be incorporated\ninto your certificate request.\nWhat you are about to enter is what is called a Distinguished Name or a DN.\nThere are quite a few fields but you can leave some blank.\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\n-----\nCountry Name (2 letter code) [AU]:DE\nState or Province Name (full name) [Some-State]:Saarland\nLocality Name (e.g., city) []:Voelklingen\nOrganization Name (eg, company) [Internet Widgits Pty Ltd]:TPQ GmbH\nOrganizational Unit Name (e.g., section) []:Algorithmic Trading\nCommon Name (e.g., server FQDN or YOUR name) []:Jupyter Lab\nEmail Address []:pyalgo@tpq.io\n(base) pro:cloud yves$\n```", "```py\nIn [1]: from notebook.auth import passwd\n\nIn [2]: passwd('jupyter')\nOut[2]: 'sha1:da3a3dfc0445:052235bb76e56450b38d27e41a85a136c3bf9cd7'\n\nIn [3]: exit\n```", "```py\n#\n# Jupyter Notebook Configuration File\n#\n# Python for Algorithmic Trading\n# (c) Dr. Yves J. Hilpisch\n# The Python Quants GmbH\n#\n# SSL ENCRYPTION\n# replace the following file names (and files used) by your choice/files\nc.NotebookApp.certfile = u'/root/.jupyter/mycert.pem'\nc.NotebookApp.keyfile = u'/root/.jupyter/mykey.key'\n\n# IP ADDRESS AND PORT\n# set ip to '*' to bind on all IP addresses of the cloud instance\nc.NotebookApp.ip = '0.0.0.0'\n# it is a good idea to set a known, fixed default port for server access\nc.NotebookApp.port = 8888\n\n# PASSWORD PROTECTION\n# here: 'jupyter' as password\n# replace the hash code with the one for your password\nc.NotebookApp.password = \\\n\t'sha1:da3a3dfc0445:052235bb76e56450b38d27e41a85a136c3bf9cd7'\n\n# NO BROWSER OPTION\n# prevent Jupyter from trying to open a browser\nc.NotebookApp.open_browser = False\n\n# ROOT ACCESS\n# allow Jupyter to run from root user\nc.NotebookApp.allow_root = True\n```", "```py\n#!/bin/bash\n#\n# Script to Install\n# Linux System Tools and Basic Python Components\n# as well as to\n# Start Jupyter Lab Server\n#\n# Python for Algorithmic Trading\n# (c) Dr. Yves J. Hilpisch\n# The Python Quants GmbH\n#\n# GENERAL LINUX\napt-get update  # updates the package index cache\napt-get upgrade -y  # updates packages\n# install system tools\napt-get install -y build-essential git  # system tools\napt-get install -y screen htop vim wget  # system tools\napt-get upgrade -y bash  # upgrades bash if necessary\napt-get clean  # cleans up the package index cache\n\n# INSTALLING MINICONDA\nwget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh \\\n\t\t-O Miniconda.sh\nbash Miniconda.sh -b  # installs Miniconda\nrm -rf Miniconda.sh  # removes the installer\n# prepends the new path for current session\nexport PATH=\"/root/miniconda3/bin:$PATH\"\n# prepends the new path in the shell configuration\ncat >> ~/.profile <<EOF\nexport PATH=\"/root/miniconda3/bin:$PATH\"\nEOF\n\n# INSTALLING PYTHON LIBRARIES\nconda install -y jupyter  # interactive data analytics in the browser\nconda install -y jupyterlab  # Jupyter Lab environment\nconda install -y numpy  #  numerical computing package\nconda install -y pytables  # wrapper for HDF5 binary storage\nconda install -y pandas  #  data analysis package\nconda install -y scipy  #  scientific computations package\nconda install -y matplotlib  # standard plotting library\nconda install -y seaborn  # statistical plotting library\nconda install -y quandl  # wrapper for Quandl data API\nconda install -y scikit-learn  # machine learning library\nconda install -y openpyxl  # package for Excel interaction\nconda install -y xlrd xlwt  # packages for Excel interaction\nconda install -y pyyaml  # package to manage yaml files\n\npip install --upgrade pip  # upgrading the package manager\npip install q  # logging and debugging\npip install plotly  # interactive D3.js plots\npip install cufflinks  # combining plotly with pandas\npip install tensorflow  # deep learning library\npip install keras  # deep learning library\npip install eikon  # Python wrapper for the Refinitiv Eikon Data API\n# Python wrapper for Oanda API\npip install git+git://github.com/yhilpisch/tpqoa\n\n# COPYING FILES AND CREATING DIRECTORIES\nmkdir -p /root/.jupyter/custom\nwget http://hilpisch.com/custom.css\nmv custom.css /root/.jupyter/custom\nmv /root/jupyter_notebook_config.py /root/.jupyter/\nmv /root/mycert.pem /root/.jupyter\nmv /root/mykey.key /root/.jupyter\nmkdir /root/notebook\ncd /root/notebook\n\n# STARTING JUPYTER LAB\njupyter lab &\n```", "```py\n#!/bin/bash\n#\n# Setting up a DigitalOcean Droplet\n# with Basic Python Stack\n# and Jupyter Notebook\n#\n# Python for Algorithmic Trading\n# (c) Dr Yves J Hilpisch\n# The Python Quants GmbH\n#\n\n# IP ADDRESS FROM PARAMETER\nMASTER_IP=$1\n\n# COPYING THE FILES\nscp install.sh root@${MASTER_IP}:\nscp mycert.pem mykey.key jupyter_notebook_config.py root@${MASTER_IP}:\n\n# EXECUTING THE INSTALLATION SCRIPT\nssh root@${MASTER_IP} bash /root/install.sh\n```", "```py\n(base) pro:cloud yves$ bash setup.sh 134.122.74.144\n```", "```py\n[I 12:02:50.190 LabApp] Serving notebooks from local directory: /root/notebook\n[I 12:02:50.190 LabApp] Jupyter Notebook 6.1.1 is running at:\n[I 12:02:50.190 LabApp] https://pyalgo:8888/\n```", "```py\nhttps://134.122.74.144:8888\n```"]