["```py\ndef signal(data, open_column, close_column, buy_column, sell_column):\n\n    data = add_column(data, 5)    \n\n    for i in range(len(data)):  \n\n       try:\n\n           `# Bullish pattern`\n           if data[i, close_column] > data[i, open_column] and \\               data[i, close_column] > data[i - 1, close_column] and \\               data[i - 1, close_column] == data[i - 1, open_column] and \\               data[i - 2, close_column] < data[i - 2, open_column] and \\               data[i - 2, close_column] < data[i - 2, open_column]:\n\n                    data[i + 1, buy_column] = 1 \n\n           `# Bearish pattern`\n           elif data[i, close_column] < data[i, open_column] and \\               data[i, close_column] < data[i - 1, close_column] and \\               data[i - 1, close_column] == data[i - 1, open_column] and \\               data[i - 2, close_column] > data[i - 2, open_column] and \\               data[i - 2, close_column] > data[i - 2, open_column]:\n\n                    data[i + 1, sell_column] = -1 \n\n       except IndexError:\n\n            pass\n\n    return data\n\n```", "```py\ndef signal(data, open_column, high_column, low_column, close_column, \n           buy_column, sell_column):\n\n    data = add_column(data, 5)    \n\n    for i in range(len(data)):  \n\n       try:\n\n           `# Bullish pattern`\n           if data[i, close_column] < data[i - 1, open_column] and \\               data[i, open_column] > data[i - 1, close_column] and \\               data[i, high_column] < data[i - 1, high_column] and \\               data[i, low_column] > data[i - 1, low_column] and \\               data[i, close_column] > data[i, open_column] and \\               data[i - 1, close_column] < data[i - 1, open_column] and \\               data[i - 2, close_column] < data[i - 2, open_column]:\n\n                    data[i + 1, buy_column] = 1 \n\n           `# Bearish pattern`\n           elif data[i, close_column] > data[i - 1, open_column] and \\                 data[i, open_column] < data[i - 1, close_column] and \\                 data[i, high_column] < data[i - 1, high_column] and \\                 data[i, low_column] > data[i - 1, low_column] and \\                 data[i, close_column] < data[i, open_column] and \\                 data[i - 1, close_column] > data[i - 1, open_column] and \\                 data[i - 2, close_column] > data[i - 2, open_column]:\n\n                    data[i + 1, sell_column] = -1 \n\n       except IndexError:\n\n            pass\n\n    return data\n\n```", "```py\ndef signal(data, open_column, high_column, low_column, close_column, \n           buy_column, sell_column):\n\n    data = add_column(data, 5)    \n\n    for i in range(len(data)):  \n\n       try:\n\n           `# Bullish pattern`\n           if data[i, close_column] > data[i, open_column] and \\               data[i, high_column] < data[i - 1, open_column] and \\               data[i, low_column] > data[i - 1, close_column] and \\               data[i - 1, close_column] < data[i - 1, open_column] and \\               data[i - 2, close_column] < data[i - 2, open_column]:\n\n                    data[i + 1, buy_column] = 1 \n\n  `# Bearish pattern`\n           elif data[i, close_column] < data[i, open_column] and \\                 data[i, high_column] < data[i - 1, close_column] and \\                 data[i, low_column] > data[i - 1, open_column] and \\                 data[i - 1, close_column] > data[i - 1, open_column] and \\                 data[i - 2, close_column] > data[i - 2, open_column]:\n\n                    data[i + 1, sell_column] = -1 \n\n       except IndexError:\n\n            pass\n\n    return data\n\n```", "```py\ndef signal(data, open_column, high_column, low_column, close_column, \n           buy_column, sell_column):\n\n    data = add_column(data, 5)    \n\n    for i in range(len(data)):  \n\n       try:\n\n           `# Bullish pattern`\n           if data[i, close_column] > data[i, open_column] and \\               data[i, close_column] == data[i - 1, close_column] and \\               data[i, open_column] < data[i - 1, close_column] and \\               data[i - 1, close_column] < data[i - 1, open_column]:\n\n                    data[i + 1, buy_column] = 1 \n\n           `# Bearish pattern`\n           elif data[i, close_column] < data[i, open_column] and \\                 data[i, close_column] == data[i - 1, close_column] and \\                 data[i, open_column] > data[i - 1, close_column] and \\                 data[i - 1, close_column] > data[i - 1, open_column]:\n\n                    data[i + 1, sell_column] = -1 \n\n       except IndexError:\n\n            pass\n\n    return data\n\n```", "```py\ndef signal(data, open_column, high_column, low_column, close_column, \n           buy_column, sell_column):\n\n    data = add_column(data, 5)    \n\n    for i in range(len(data)):  \n\n       try:\n\n           `# Bullish pattern`\n           if data[i, close_column] > data[i, open_column] and \\               data[i, low_column] == data[i - 1, low_column] and \\               data[i, close_column] - data[i, open_column] < body and \\               data[i - 1, close_column] - data[i - 1, open_column] < body \n              and data[i - 1, close_column] < data[i - 1, open_column] \\               and data[i - 2, close_column] < data[i - 2, open_column]:\n\n                    data[i + 1, buy_column] = 1 \n\n           `# Bearish pattern`\n           elif data[i, close_column] < data[i, open_column] and \\                 data[i, high_column] == data[i - 1, high_column] and \\                 data[i, close_column] - data[i, open_column] < body and \\                 data[i - 1, close_column] - data[i - 1, open_column] < \\                 body and data[i - 1, close_column] > data[i - 1, \\                 open_column] and data[i - 2, close_column] > data[i - 2, \\                 open_column]:\n\n                    data[i + 1, sell_column] = -1 \n\n       except IndexError:\n\n            pass\n\n    return data\n\n```", "```py\ndef signal(data, open_column, high_column, low_column, close_column, \n           buy_column, sell_column):\n\n    data = add_column(data, 5)    \n\n    for i in range(len(data)):  \n\n       try:\n\n           `# Bullish pattern`\n           if data[i, close_column] < data[i, open_column] and \\               data[i, high_column] > data[i - 1, high_column] and \\               data[i, low_column] < data[i - 1, low_column] and \\               data[i - 1, close_column] > data[i - 1, open_column] and \\               data[i - 2, close_column] < data[i - 2, open_column] and \\               data[i - 2, high_column] > data[i - 1, high_column] and \\               data[i - 2, low_column] < data[i - 1, low_column] and \\               data[i - 2, close_column] < data[i - 3, close_column] and \\               data[i - 3, close_column] < data[i - 3, open_column]:\n\n                    data[i + 1, buy_column] = 1 \n\n           `# Bearish pattern`\n           elif data[i, close_column] > data[i, open_column] and \\                 data[i, high_column] > data[i - 1, high_column] and \\                 data[i, low_column] < data[i - 1, low_column] and \\                 data[i - 1, close_column] < data[i - 1, open_column] and \\                 data[i - 2, close_column] > data[i - 2, open_column] and \\                 data[i - 2, high_column] > data[i - 1, high_column] and \\                 data[i - 2, low_column] < data[i - 1, low_column] and \\                 data[i - 2, close_column] > data[i - 3, close_column] and\\                 data[i - 3, close_column] > data[i - 3, open_column]:\n\n                    data[i + 1, sell_column] = -1 \n\n       except IndexError:\n\n            pass\n\n    return data\n\n```", "```py\ndef signal(data, open_column, high_column, low_column, close_column, \n           buy_column, sell_column):\n\n    data = add_column(data, 5)    \n\n    for i in range(len(data)):  \n\n       try:\n\n            `# Bullish pattern`\n            if data[i, close_column] > data[i, open_column] and \\                abs(data[i - 1, close_column] - data[i - 1, open_column]) \\                < body and min(data[i - 1, close_column], data[i - 1, \\                open_column]) - data[i - 1, low_column] > 2 * wick and \\                data[i - 1, close_column] == data[i - 1, high_column] and \\                data[i - 2, close_column] < data[i - 2, open_column]:\n\n                     data[i + 1, buy_column] = 1 \n\n            `# Bearish pattern`\n            elif data[i, close_column] < data[i, open_column] and \\                  abs(data[i -1, close_column] - data[i - 1, open_column]) \\                  < body and data[i - 1, high_column] - max(data[i - 1, \\                  close_column], data[i - 1, open_column]) > 2 * wick and \\                  data[i - 1, close_column] == data[i - 1, low_column] and \\                  data[i - 2, close_column] > data[i - 2, open_column]:\n\n                     data[i + 1, sell_column] = -1                      \n\n       except IndexError:\n\n            pass\n\n    return data\n\n```", "```py\ndef signal(data, open_column, high_column, low_column, close_column, \n           buy_column, sell_column):\n\n    data = add_column(data, 5)    \n\n    for i in range(len(data)):  \n\n       try:\n\n        `# Bullish pattern`\n            if data[i, close_column] > data[i, open_column] and \\                max(data[i - 1, close_column], data[i - 1, open_column]) \\                < data[i, open_column] and max(data[i - 1, close_column], \\                data[i - 1, open_column]) < data[i - 2, close_column] and \\                data[i - 2, close_column] < data[i - 2, open_column]:\n\n                     data[i + 1, buy_column] = 1 \n\n            `# Bearish pattern`\n            elif data[i, close_column] < data[i, open_column] and \\                  min(data[i - 1, close_column], data[i - 1, open_column]) \\\n                 > data[i, open_column] and min(data[i - 1, close_column],\\                  data[i - 1, open_column]) > data[i - 2, close_column] \\                  and data[i - 2, close_column] > data[i - 2, open_column]:\n\n                     data[i + 1, sell_column] = -1                      \n\n       except IndexError:\n\n            pass\n\n    return data\n\n```", "```py\ndef signal(data, open_column, close_column, buy_column, sell_column):\n\n    data = add_column(data, 5)    \n\n    for i in range(len(data)):  \n\n       try:\n\n           `# Bullish pattern`\n           if data[i, close_column] > data[i, open_column] and \\               data[i, close_column] < data[i - 1, open_column] and \\               data[i, close_column] > data[i - 1, close_column] and \\               data[i, open_column] < data[i - 1, close_column] and \\               data[i - 1, close_column] < data[i - 1, open_column] and \\               data[i - 2, close_column] < data[i - 2, open_column]:    \n\n                    data[i + 1, buy_column] = 1 \n\n           `# Bearish pattern`\n           elif data[i, close_column] < data[i, open_column] and \\                 data[i, close_column] > data[i - 1, open_column] and \\                 data[i, close_column] < data[i - 1, close_column] and \\                 data[i, open_column] > data[i - 1, close_column] and \\                 data[i - 1, close_column] > data[i - 1, open_column] and \\                 data[i - 2, close_column] > data[i - 2, open_column]: \n\n                    data[i + 1, sell_column] = -1 \n\n       except IndexError:\n\n            pass\n\n    return data\n\n```", "```py\ndef signal(data, open_column, close_column, buy_column, sell_column):\n\n    data = add_column(data, 5)    \n\n    for i in range(len(data)):  \n\n       try:\n\n           `# Bullish pattern`\n           if data[i, close_column] > data[i, open_column] and \\               data[i, open_column] < data[i - 1, close_column] and \\               data[i, close_column] > data[i - 1, open_column] and \\               data[i - 1, close_column] < data[i - 1, open_column] and \\               data[i - 2, close_column] < data[i - 2, open_column]:\n\n                    data[i + 1, buy_column] = 1 \n\n           `# Bearish pattern`\n           elif data[i, close_column] < data[i, open_column] and \\                 data[i, open_column] > data[i - 1, close_column] and \\                 data[i, close_column] < data[i - 1, open_column] and \\                 data[i - 1, close_column] > data[i - 1, open_column] and \\                 data[i - 2, close_column] > data[i - 2, open_column]:\n\n                    data[i + 1, sell_column] = -1 \n\n       except IndexError:\n\n            pass\n\n    return data\n\n```", "```py\ndef signal(data, open_column, high_column, low_column, close_column, \n           buy_column, sell_column):\n\n    data = add_column(data, 5)    \n\n    for i in range(len(data)):  \n\n       try:\n\n            `# Bullish pattern`\n            if data[i, close_column] > data[i, open_column] and \\                data[i - 1, close_column] == data[i - 1, open_column] and \\                data[i - 1, high_column] < data[i, low_column] and \\                data[i - 1, high_column] < data[i - 2, low_column] and \\                data[i - 2, close_column] < data[i - 2, open_column]:\n\n                     data[i + 1, buy_column] = 1 \n\n          `# Bearish pattern`\n            elif data[i, close_column] < data[i, open_column] and \\                  data[i - 1, close_column] == data[i - 1, open_column] and \\                  data[i - 1, low_column] > data[i, high_column] and \\                  data[i - 1, low_column] > data[i - 2, high_column] and \\                  data[i - 2, close_column] > data[i - 2, open_column]:\n\n                     data[i + 1, sell_column] = -1                      \n\n       except IndexError:\n\n            pass\n\n    return data\n\n```", "```py\ndef signal(data, open_column, high_column, low_column, close_column, \n           buy_column, sell_column):\n\n    data = add_column(data, 5)    \n\n    for i in range(len(data)):  \n\n       try:\n\n            `# Bullish pattern`\n            if data[i, close_column] - data[i, open_column] > body and \\                data[i - 1, high_column] - data[i - 1, close_column] >= wick \\                and data[i - 1, open_column] - data[i - 1, low_column] >= \\                wick and data[i - 1, close_column] - data[i - 1, \\                open_column] < body and data[i - 1, close_column] > data[i \\                - 1, open_column] and data[i - 2, close_column] < data[i - \\                2, open_column] and data[i - 2, open_column] - data[i - 2, \\                close_column] > body:\n\n                     data[i + 1, buy_column] = 1 \n\n            `# Bearish pattern`\n            elif data[i, open_column] - data[i, close_column] > body and \\                  data[i - 1, high_column] - data[i - 1, open_column] >= \\                  wick and data[i - 1, close_column] - data[i - 1, \\                  low_column] >= wick and data[i - 1, open_column] - \\                  data[i - 1, close_column] < body and data[i - 1, \\                  close_column] < data[i - 1, open_column] and data[i - 2, \\                  close_column] > data[i - 2, open_column] and data[i - 2, \\                  close_column] - data[i - 2, open_column] > body:\n\n                     data[i + 1, sell_column] = -1                      \n\n       except IndexError:\n\n            pass\n\n    return data\n\n```", "```py\ndef signal(data, open_column, high_column, low_column, close_column, \n           buy_column, sell_column):\n\n    data = add_column(data, 5)    \n\n    for i in range(len(data)):  \n\n       try:\n\n           `# Bullish pattern`\n           if data[i - 2, close_column] < data[i - 2, open_column] and \\               abs(data[i - 2, open_column] - data[i - 2, close_column]) > \\               body and data[i - 1, close_column] < data[i - 2, \\               open_column] and data[i - 1, open_column] > data[i - 2, \\               close_column] and data[i - 1, close_column] > data[i - 1, \\               open_column] and data[i, close_column] > data[i - 2, \\               open_column] and data[i, close_column] > data[i, \\               open_column] and abs(data[i, open_column] - data[i, \\               close_column]) > body:\n\n                    data[i + 1, buy_column] = 1 \n\n           `# Bearish pattern`\n           elif data[i - 2, close_column] > data[i - 2, open_column] and \\                 abs(data[i - 2, close_column] - data[i - 2, open_column]) \\                 > body and data[i - 1, close_column] > data[i - 2, \\                 open_column] and data[i - 1, open_column] < data[i - 2, \\                 close_column] and data[i - 1, close_column] < data[i - 1, \\                 open_column] and data[i, close_column] < data[i - 2, \\                 open_column] and data[i, close_column] < data[i, \\                 open_column] and abs(data[i, open_column] - data[i, \\                 close_column]) > body:\n\n                    data[i + 1, sell_column] = -1 \n\n       except IndexError:\n\n            pass\n\n    return data\n\n```", "```py\ndef signal(data, open_column, high_column, low_column, close_column, \n           buy_column, sell_column):\n\n    data = add_column(data, 5)    \n\n    for i in range(len(data)):  \n\n       try:\n\n           `# Bullish pattern`\n           if data[i, close_column] > data[i, open_column] and \\               data[i, close_column] - data[i, open_column] > body and \\               data[i - 2, low_column] < data[i - 1, low_column] and \\               data[i - 2, low_column] < data[i - 3, low_column] and \\               data[i - 4, close_column] < data[i - 4, open_column] and \\               data[i - 4, open_column] - data[i, close_column] > body:\n\n                    data[i + 1, buy_column] = 1 \n\n           `# Bearish pattern`\n           elif data[i, close_column] < data[i, open_column] and \\                 data[i, open_column] - data[i, close_column] > body and \\                 data[i - 2, high_column] > data[i - 1, high_column] and \\                 data[i - 2, high_column] > data[i - 3, high_column] and \\                 data[i - 4, close_column] > data[i - 4, open_column] and \\                 data[i - 4, close_column] - data[i, open_column] > body:\n\n                    data[i + 1, sell_column] = -1 \n\n       except IndexError:\n\n            pass\n\n    return data\n\n```"]