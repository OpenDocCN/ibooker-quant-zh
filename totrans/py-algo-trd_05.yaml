- en: Chapter 5\. Predicting Market Movements with Machine Learning
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第5章。使用机器学习预测市场走势
- en: Skynet begins to learn at a geometric rate. It becomes self-aware at 2:14 a.m.
    Eastern time, August 29th.
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 天网开始以几何倍率学习。它在东部时间凌晨2:14自我意识到，时间是8月29日。
- en: ''
  id: totrans-2
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The Terminator (*Terminator 2*)
  id: totrans-3
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 终结者（*终结者2*）
- en: Recent years have seen tremendous progress in the areas of machine learning,
    deep learning, and artificial intelligence. The financial industry in general
    and algorithmic traders around the globe in particular also try to benefit from
    these technological advances.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 近年来，在机器学习、深度学习和人工智能领域取得了巨大进展。总体而言，金融行业和全球算法交易员也试图从这些技术进步中受益。
- en: This chapter introduces techniques from statistics, like *linear regression*,
    and from machine learning, like *logistic regression*, to predict future price
    movements based on past returns. It also illustrates the use of *neural networks*
    to predict stock market movements. This chapter, of course, cannot replace a thorough
    introduction to machine learning, but it can show, from a practitioner’s point
    of view, how to concretely apply certain techniques to the price prediction problem.
    For more details, refer to Hilpisch (2020).^([1](ch05.html#idm45785375631928))
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了来自统计学（如*线性回归*）和机器学习（如*逻辑回归*）的技术，以基于过去收益预测未来价格走势。它还阐明了使用*神经网络*预测股市走势的方法。当然，本章不能替代对机器学习的深入介绍，但从实践者的角度，它可以展示如何具体应用某些技术来解决价格预测问题。有关更多详情，请参阅希尔皮什（2020年）。^([1](ch05.html#idm45785375631928))
- en: 'This chapter covers the following types of trading strategies:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖了以下类型的交易策略：
- en: Linear regression-based strategies
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 基于线性回归的策略
- en: Such strategies use linear regression to extrapolate a trend or to derive a
    financial instrument’s direction of future price movement.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这些策略利用线性回归来推测趋势或推导金融工具未来价格运动的方向。
- en: Machine learning-based strategies
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 基于机器学习的策略
- en: In algorithmic trading it is generally enough to predict the direction of movement
    for a financial instrument as opposed to the absolute magnitude of that movement.
    With this reasoning, the prediction problem basically boils down to a *classification
    problem* of deciding whether there will be an upwards or downwards movement. Different
    machine learning algorithms have been developed to attack such classification
    problems. This chapter introduces logistic regression, as a typical baseline algorithm,
    for classification.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在算法交易中，通常只需预测金融工具的运动方向，而不是其绝对幅度。基于这种推理，预测问题基本上可以归结为一个*分类问题*，即决定是否会出现向上或向下的运动。已开发出不同的机器学习算法来解决这类分类问题。本章介绍了逻辑回归作为典型的基准算法，用于分类。
- en: Deep learning-based strategies
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 基于深度学习的策略
- en: Deep learning has been popularized by such technological giants as Facebook.
    Similar to machine learning algorithms, deep learning algorithms based on neural
    networks allow one to attack classification problems faced in financial market
    prediction.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 深度学习已经被Facebook等技术巨头普及。类似于机器学习算法，基于神经网络的深度学习算法允许攻击金融市场预测中面临的分类问题。
- en: The chapter is organized as follows. [“Using Linear Regression for Market Movement
    Prediction”](#linear_regression) introduces linear regression as a technique to
    predict index levels and the direction of price movements. [“Using Machine Learning
    for Market Movement Prediction”](#machine_learning_scikit) focuses on machine
    learning and introduces `scikit-learn` on the basis of linear regression. It mainly
    covers logistic regression as an alternative linear model explicitly applicable
    to classification problems. [“Using Deep Learning for Market Movement Prediction”](#deep_learning)
    introduces `Keras` to predict the direction of stock market movements based on
    neural network algorithms.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的组织如下。[“使用线性回归预测市场运动”](#linear_regression)介绍了线性回归作为预测指数水平和价格走势方向的技术。[“使用机器学习预测市场运动”](#machine_learning_scikit)聚焦于机器学习，并基于线性回归介绍了`scikit-learn`。它主要涵盖逻辑回归作为明确适用于分类问题的替代线性模型。[“使用深度学习预测市场运动”](#deep_learning)介绍了`Keras`，以基于神经网络算法预测股市运动的方向。
- en: The major goal of this chapter is to provide practical approaches to predict
    future price movements in financial markets based on past returns. The basic assumption
    is that the efficient market hypothesis does not hold universally and that, similar
    to the reasoning behind the technical analysis of stock price charts, the history
    might provide some insights about the future that can be mined with statistical
    techniques. In other words, it is assumed that certain patterns in financial markets
    repeat themselves such that past observations can be leveraged to predict future
    price movements. More details are covered in Hilpisch (2020).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的主要目标是提供基于过去收益预测未来价格走势的实用方法。基本假设是，有效市场假说并非普遍成立，类似于技术分析股票价格图表的推理，历史可能提供一些关于未来的见解，可以通过统计技术进行挖掘。换句话说，假设金融市场中的某些模式会重复出现，以至于可以利用过去的观察结果来预测未来的价格变动。更多细节请参阅Hilpisch（2020）。
- en: Using Linear Regression for Market Movement Prediction
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用线性回归进行市场运动预测
- en: Ordinary least squares (OLS) and linear regression are decades-old statistical
    techniques that have proven useful in many different application areas. This section
    uses linear regression for price prediction purposes. However, it starts with
    a quick review of the basics and an introduction to the basic approach.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 普通最小二乘法（OLS）和线性回归是几十年来证明在许多不同应用领域有用的统计技术。本节使用线性回归进行价格预测。然而，它从基础知识的快速回顾和基本方法的介绍开始。
- en: A Quick Review of Linear Regression
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 线性回归的快速回顾
- en: 'Before applying linear regression, a quick review of the approach based on
    some randomized data might be helpful. The example code uses `NumPy` to first
    generate an `ndarray` object with data for the independent variable `x`. Based
    on this data, randomized data (“noisy data”) for the dependent variable `y` is
    generated. `NumPy` provides two functions, `polyfit` and `polyval`, for a convenient
    implementation of OLS regression based on simple monomials. For a linear regression,
    the highest degree for the monomials to be used is set to `1`. [Figure 5-1](#lr_plot_1)
    shows the data and the regression line:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在应用线性回归之前，根据一些随机化数据对方法进行快速回顾可能会有所帮助。示例代码使用`NumPy`首先生成一个包含独立变量`x`数据的`ndarray`对象。基于这些数据，生成了依赖变量`y`的随机化数据（“噪声数据”）。`NumPy`提供了两个函数，`polyfit`和`polyval`，用于方便地实现基于简单单项式的OLS回归。对于线性回归，设置要使用的单项式的最高次数为`1`。[图 5-1](#lr_plot_1)显示了数据和回归线：
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO1-1)'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO1-1)'
- en: Imports `NumPy`.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 导入了`NumPy`。
- en: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO1-2)'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO1-2)'
- en: Imports `matplotlib`.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 导入了`matplotlib`。
- en: '[![3](assets/3.png)](#co_predicting_market_movements_with_machine_learning_CO1-3)'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_predicting_market_movements_with_machine_learning_CO1-3)'
- en: Generates an evenly spaced grid of floats for the `x` values between 0 and 10.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 生成了一个在0到10之间的`x`值的均匀间隔浮点数网格。
- en: '[![4](assets/4.png)](#co_predicting_market_movements_with_machine_learning_CO1-4)'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_predicting_market_movements_with_machine_learning_CO1-4)'
- en: Fixes the seed values for all relevant random number generators.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 为所有相关随机数生成器设置了种子值。
- en: '[![5](assets/5.png)](#co_predicting_market_movements_with_machine_learning_CO1-5)'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[![5](assets/5.png)](#co_predicting_market_movements_with_machine_learning_CO1-5)'
- en: Generates the randomized data for the `y` values.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 生成了随机化的`y`值数据。
- en: '[![6](assets/6.png)](#co_predicting_market_movements_with_machine_learning_CO1-6)'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '[![6](assets/6.png)](#co_predicting_market_movements_with_machine_learning_CO1-6)'
- en: OLS regression of degree 1 (that is, linear regression) is conducted.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 进行了一次一次最小二乘法（即线性回归）的回归。
- en: '[![7](assets/7.png)](#co_predicting_market_movements_with_machine_learning_CO1-7)'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '[![7](assets/7.png)](#co_predicting_market_movements_with_machine_learning_CO1-7)'
- en: Shows the optimal parameter values.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 显示了最优参数值。
- en: '[![8](assets/8.png)](#co_predicting_market_movements_with_machine_learning_CO1-8)'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '[![8](assets/8.png)](#co_predicting_market_movements_with_machine_learning_CO1-8)'
- en: Creates a new figure object.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 创建了一个新的图形对象。
- en: '[![9](assets/9.png)](#co_predicting_market_movements_with_machine_learning_CO1-9)'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '[![9](assets/9.png)](#co_predicting_market_movements_with_machine_learning_CO1-9)'
- en: Plots the original data set as dots.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 将原始数据集绘制为点。
- en: '[![10](assets/10.png)](#co_predicting_market_movements_with_machine_learning_CO1-10)'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '[![10](assets/10.png)](#co_predicting_market_movements_with_machine_learning_CO1-10)'
- en: Plots the regression line.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制了回归线。
- en: '[![11](assets/11.png)](#co_predicting_market_movements_with_machine_learning_CO1-11)'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '[![11](assets/11.png)](#co_predicting_market_movements_with_machine_learning_CO1-11)'
- en: Creates the legend.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 创建了图例。
- en: '![pfat 0501](assets/pfat_0501.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![pfat 0501](assets/pfat_0501.png)'
- en: Figure 5-1\. Linear regression illustrated based on randomized data
  id: totrans-43
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-1\. 基于随机数据的线性回归示例
- en: 'The interval for the dependent variable `x` is <math display="inline"><mrow><mi>x</mi><mo>∈</mo><mo>[</mo><mn>0</mn><mo>,</mo><mn>10</mn><mo>]</mo></mrow></math>.
    Enlarging the interval to, say, <math display="inline"><mrow><mi>x</mi><mo>∈</mo><mo>[</mo><mn>0</mn><mo>,</mo><mn>20</mn><mo>]</mo></mrow></math>
    allows one to “predict” values for the dependent variable `y` beyond the domain
    of the original data set by an extrapolation given the optimal regression parameters.
    [Figure 5-2](#lr_plot_2) visualizes the extrapolation:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 因变量 `x` 的区间为 <math display="inline"><mrow><mi>x</mi><mo>∈</mo><mo>[</mo><mn>0</mn><mo>,</mo><mn>10</mn><mo>]</mo></mrow></math>。将区间扩大至，例如，<math
    display="inline"><mrow><mi>x</mi><mo>∈</mo><mo>[</mo><mn>0</mn><mo>,</mo><mn>20</mn><mo>]</mo></mrow></math>
    允许通过外推给出因变量 `y` 的值，超出原始数据集的域。[图 5-2](#lr_plot_2) 可视化了外推：
- en: '[PRE1]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO2-1)'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO2-1)'
- en: Generates an enlarged domain for the `x` values.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 生成了 `x` 值的扩展域。
- en: '![pfat 0502](assets/pfat_0502.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![pfat 0502](assets/pfat_0502.png)'
- en: Figure 5-2\. Prediction (extrapolation) based on linear regression
  id: totrans-49
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-2\. 基于线性回归的预测（外推）
- en: The Basic Idea for Price Prediction
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 价格预测的基本理念
- en: 'Price prediction based on time series data has to deal with one special feature:
    the time-based ordering of the data. Generally, the ordering of the data is not
    important for the application of linear regression. In the first example in the
    previous section, the data on which the linear regression is implemented could
    have been compiled in completely different orderings, while keeping the `x` and
    `y` pairs constant. Independent of the ordering, the optimal regression parameters
    would have been the same.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 基于时间序列数据的价格预测必须处理一个特殊特征：数据的基于时间的排序。一般来说，数据的排序对于线性回归的应用并不重要。在前一节的第一个示例中，实施线性回归的数据可以按完全不同的顺序编制，同时保持
    `x` 和 `y` 对不变。独立于排序，最优回归参数将保持不变。
- en: However, in the context of predicting tomorrow’s index level, for example, it
    seems to be of paramount importance to have the historic index levels in the correct
    order. If this is the case, one would then try to predict tomorrow’s index level
    given the index level of today, yesterday, the day before, etc. The number of
    days used as input is generally called *lags*. Using today’s index level and the
    two more from before therefore translates into *three lags*.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在预测明天的指数水平的背景下，例如，正确排序历史上的指数水平似乎至关重要。如果是这样，那么就会试图根据今天、昨天、前天等的指数水平来预测明天的指数水平。作为输入使用的天数通常称为
    *滞后期*。因此，使用今天的指数水平及之前两天的指数水平可被称为 *三个滞后期*。
- en: 'The next example casts this idea again into a rather simple context. The data
    the example uses are the numbers from 0 to 11:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个示例再次将这个想法简化到一个相当简单的背景中。该示例使用的数据是从 0 到 11 的数字：
- en: '[PRE2]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Assume three lags for the regression. This implies three independent variables
    for the regression and one dependent one. More concretely, 0, 1, and 2 are values
    of the independent variables, while 3 would be the corresponding value for the
    dependent variable. Moving forward on step (“in time”), the values are 1, 2, and
    3, as well as 4\. The final combination of values is 8, 9, and 10 with 11\. The
    problem, therefore, is to cast this idea formally into a linear equation of the
    form <math alttext="upper A dot x equals b"><mrow><mi>A</mi> <mo>·</mo> <mi>x</mi>
    <mo>=</mo> <mi>b</mi></mrow></math> where <math alttext="upper A"><mi>A</mi></math>
    is a matrix and <math alttext="x"><mi>x</mi></math> and <math alttext="b"><mi>b</mi></math>
    are vectors:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 假设回归使用三个滞后期。这意味着回归有三个自变量和一个因变量。更具体地说，0、1 和 2 是自变量的值，而 3 是相应的因变量的值。向前一步（“在时间上”），值为
    1、2 和 3，以及 4。最终的值组合是 8、9 和 10，与 11。因此，问题是将这个想法正式地表述为形如 <math alttext="upper A
    dot x equals b"><mrow><mi>A</mi> <mo>·</mo> <mi>x</mi> <mo>=</mo> <mi>b</mi></mrow></math>
    的线性方程，其中 <math alttext="upper A"><mi>A</mi></math> 是矩阵，而 <math alttext="x"><mi>x</mi></math>
    和 <math alttext="b"><mi>b</mi></math> 是向量：
- en: '[PRE3]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO3-1)'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO3-1)'
- en: Defines the number of lags.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 定义了滞后期的数量。
- en: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO3-2)'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO3-2)'
- en: Instantiates an `ndarray` object with the appropriate dimensions.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 实例化具有适当维度的`ndarray`对象。
- en: '[![3](assets/3.png)](#co_predicting_market_movements_with_machine_learning_CO3-3)'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_predicting_market_movements_with_machine_learning_CO3-3)'
- en: Defines the target values (dependent variable).
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 定义目标值（因变量）。
- en: '[![4](assets/4.png)](#co_predicting_market_movements_with_machine_learning_CO3-4)'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_predicting_market_movements_with_machine_learning_CO3-4)'
- en: Iterates over the numbers from `0` to `lags - 1`.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 迭代从`0`到`lags - 1`的数字。
- en: '[![5](assets/5.png)](#co_predicting_market_movements_with_machine_learning_CO3-5)'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '[![5](assets/5.png)](#co_predicting_market_movements_with_machine_learning_CO3-5)'
- en: Defines the basis vectors (independent variables)
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 定义基础向量（独立变量）
- en: '[![6](assets/6.png)](#co_predicting_market_movements_with_machine_learning_CO3-6)'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '[![6](assets/6.png)](#co_predicting_market_movements_with_machine_learning_CO3-6)'
- en: Shows the transpose of the `ndarray` object `m`.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 显示`ndarray`对象`m`的转置。
- en: 'In the transposed `ndarray` object `m`, the first three columns contain the
    values for the three independent variables. They together form the matrix <math
    alttext="upper A"><mi>A</mi></math> . The fourth and final column represents the
    vector <math alttext="b"><mi>b</mi></math> . As a result, linear regression then
    yields the missing vector <math alttext="x"><mi>x</mi></math> . Since there are
    now more independent variables, `polyfit` and `polyval` do not work anymore. However,
    there is a function in the `NumPy` sub-package for linear algebra (`linalg`) that
    allows one to solve general least-squares problems: `lstsq`. Only the first element
    of the results array is needed since it contains the optimal regression parameters:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在转置后的`ndarray`对象`m`中，前三列包含三个独立变量的值。它们一起形成矩阵<math alttext="upper A"><mi>A</mi></math>。第四列代表向量<math
    alttext="b"><mi>b</mi></math>。因此，线性回归然后产生缺失的向量<math alttext="x"><mi>x</mi></math>。由于现在有更多的独立变量，`polyfit`和`polyval`不再适用。但是，在`NumPy`子包中有一个用于线性代数（`linalg`）的函数，允许解决一般的最小二乘问题：`lstsq`。只需要结果数组的第一个元素，因为它包含最佳回归参数：
- en: '[PRE4]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO4-1)'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO4-1)'
- en: Implements the linear OLS regression.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 实现线性OLS回归。
- en: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO4-2)'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO4-2)'
- en: Prints out the optimal parameters.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 打印出最优参数。
- en: '[![3](assets/3.png)](#co_predicting_market_movements_with_machine_learning_CO4-3)'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_predicting_market_movements_with_machine_learning_CO4-3)'
- en: The `dot` product yields the prediction results.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 点积产生预测结果。
- en: This basic idea easily carries over to real-world financial time series data.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 这个基本思想很容易应用到现实世界的金融时间序列数据中。
- en: Predicting Index Levels
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 预测指数水平
- en: 'The next step is to translate the basic approach to time series data for a
    real financial instrument, like the EUR/USD exchange rate:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是将基本方法转化为实际金融工具的时间序列数据，比如欧元/美元汇率：
- en: '[PRE5]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO5-1)'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO5-1)'
- en: Imports the `pandas` package.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 导入`pandas`包。
- en: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO5-2)'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO5-2)'
- en: Retrieves end-of-day (EOD) data and stores it in a `DataFrame` object.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 检索每日末尾（EOD）数据并将其存储在`DataFrame`对象中。
- en: '[![3](assets/3.png)](#co_predicting_market_movements_with_machine_learning_CO5-4)'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_predicting_market_movements_with_machine_learning_CO5-4)'
- en: The time series data for the specified symbol is selected from the original
    `DataFrame`.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 从原始`DataFrame`中选择指定符号的时间序列数据。
- en: '[![4](assets/4.png)](#co_predicting_market_movements_with_machine_learning_CO5-5)'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_predicting_market_movements_with_machine_learning_CO5-5)'
- en: Renames the single column to `price`.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 将单列重命名为`price`。
- en: 'Formally, the Python code from the preceding simple example hardly needs to
    be changed to implement the regression-based prediction approach. Just the data
    object needs to be replaced:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 形式上，前面简单示例的Python代码几乎不需要更改就可以实现基于回归的预测方法。只需要替换数据对象即可：
- en: '[PRE6]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO6-1)'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO6-1)'
- en: Takes the `price` column and shifts it by `lag`.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 获取`price`列并将其向后移动`lag`。
- en: The optimal regression parameters illustrate what is typically called the *random
    walk hypothesis*. This hypothesis states that stock prices or exchange rates,
    for example, follow a random walk with the consequence that the best predictor
    for tomorrow’s price is today’s price. The optimal parameters seem to support
    such a hypothesis since today’s price almost completely explains the predicted
    price level for tomorrow. The four other values hardly have any weight assigned.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 最佳回归参数展示了通常所称的*随机行走假设*。该假设指出，例如股票价格或汇率遵循随机行走，因此明天价格的最佳预测因子是今天的价格。最佳参数似乎支持这样的假设，因为今天的价格几乎完全解释了明天预测价格水平。其他四个值几乎没有分配任何权重。
- en: '[Figure 5-3](#lr_plot_3) shows the EUR/USD exchange rate and the predicted
    values. Due to the sheer amount of data for the multi-year time window, the two
    time series are indistinguishable in the plot:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '[图5-3](#lr_plot_3) 展示了EUR/USD汇率和预测值。由于多年时间窗口中的数据量庞大，这两个时间序列在图中几乎无法区分：'
- en: '[PRE7]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO7-1)'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO7-1)'
- en: Calculates the prediction values as the `dot` product.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 计算预测值为`dot`乘积。
- en: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO7-2)'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO7-2)'
- en: Plots the `price` and `prediction` columns.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制`price`和`prediction`列。
- en: '![pfat 0503](assets/pfat_0503.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![pfat 0503](assets/pfat_0503.png)'
- en: Figure 5-3\. EUR/USD exchange rate and predicted values based on linear regression
    (five lags)
  id: totrans-101
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图5-3\. EUR/USD汇率和基于线性回归的预测值（五个滞后）
- en: 'Zooming in by plotting the results for a much shorter time window allows one
    to better distinguish the two time series. [Figure 5-4](#lr_plot_4) shows the
    results for a three months time window. This plot illustrates that the prediction
    for tomorrow’s rate is roughly today’s rate. The prediction is more or less a
    shift of the original rate to the right by one trading day:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 缩小时间窗口后的绘图可以更好地区分两个时间序列。[图5-4](#lr_plot_4) 展示了三个月时间窗口的结果。该图表明，明天汇率的预测基本上是今天汇率的延迟一个交易日的结果：
- en: '[PRE8]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Applying linear OLS regression to predict rates for EUR/USD based on historical
    rates provides support for the random walk hypothesis. The results of the numerical
    example show that today’s rate is the best predictor for tomorrow’s rate in a
    least-squares sense.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 将线性OLS回归应用于基于历史汇率的EUR/USD汇率预测，为随机行走假设提供支持。数值示例的结果显示，以最小二乘意义上今天的汇率是明天汇率的最佳预测因子。
- en: '![pfat 0504](assets/pfat_0504.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![pfat 0504](assets/pfat_0504.png)'
- en: Figure 5-4\. EUR/USD exchange rate and predicted values based on linear regression
    (five lags, three months only)
  id: totrans-106
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图5-4\. EUR/USD汇率和基于线性回归的预测值（五个滞后，仅三个月）
- en: Predicting Future Returns
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 预测未来回报
- en: 'So far, the analysis is based on absolute rate levels. However, (log) returns
    might be a better choice for such statistical applications due to, for example,
    their characteristic of making the time series data stationary. The code to apply
    linear regression to the returns data is almost the same as before. This time
    it is not only today’s return that is relevant to predict tomorrow’s return, but
    the regression results are also completely different in nature:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，分析基于绝对汇率水平。然而，（对数）回报可能对此类统计应用更为合适，因为例如它们使时间序列数据平稳化的特性。应用线性回归到回报数据的代码几乎与之前相同。这一次不仅仅是今天的回报对预测明天的回报重要，而且回归结果在性质上完全不同：
- en: '[PRE9]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO8-1)'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO8-1)'
- en: Calculates the log returns.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 计算对数回报。
- en: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO8-2)'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO8-2)'
- en: Deletes all lines with `NaN` values.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 删除所有具有`NaN`值的行。
- en: '[![3](assets/3.png)](#co_predicting_market_movements_with_machine_learning_CO8-3)'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_predicting_market_movements_with_machine_learning_CO8-3)'
- en: Takes the `returns` column for the lagged data.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 以`returns`列作为滞后数据。
- en: '[Figure 5-5](#lr_plot_5) shows the returns data and the prediction values.
    As the figure impressively illustrates, linear regression obviously cannot predict
    the magnitude of future returns to some significant extent:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '[图5-5](#lr_plot_5) 展示了回报数据和预测值。正如图中生动展示的那样，线性回归显然不能对未来回报的幅度进行有效预测：'
- en: '[PRE10]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![pfat 0505](assets/pfat_0505.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![pfat 0505](assets/pfat_0505.png)'
- en: Figure 5-5\. EUR/USD log returns and predicted values based on linear regression
    (five lags)
  id: totrans-119
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-5\. EUR/USD 对数收益率和基于线性回归（五个滞后期）的预测值。
- en: From a trading point of view, one might argue that it is not the magnitude of
    the forecasted return that is relevant, but rather whether the direction is forecasted
    correctly or not. To this end, a simple calculation yields an overview. Whenever
    the linear regression gets the direction right, meaning that the sign of the forecasted
    return is correct, the product of the market return and the predicted return is
    positive and otherwise negative.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 从交易角度来看，人们可能会认为预测回报的大小并不重要，而是预测方向是否正确。为此，简单的计算提供了一个概述。每当线性回归正确预测方向时，即预测回报的符号正确时，市场回报和预测回报的乘积为正，否则为负。
- en: 'In the example case, the prediction is 1,250 times correct and 1,242 wrong,
    which translates into a hit ratio of about 49.9%, or almost exactly 50%:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，预测正确的次数是1,250次，错误的次数是1,242次，这对应命中率约为49.9%，或几乎恰好50%：
- en: '[PRE11]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO9-1)'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO9-1)'
- en: Calculates the product of the market and predicted return, takes the sign of
    the results and counts the values.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 计算市场和预测回报的乘积，取结果的符号并计数值。
- en: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO9-2)'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO9-2)'
- en: Prints out the counts for the two possible values.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 打印出两种可能值的计数。
- en: '[![3](assets/3.png)](#co_predicting_market_movements_with_machine_learning_CO9-3)'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_predicting_market_movements_with_machine_learning_CO9-3)'
- en: Calculates the hit ratio defined as the number of correct predictions given
    all predictions.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 计算命中率，定义为所有预测中正确预测的数量。
- en: Predicting Future Market Direction
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 预测未来市场走向
- en: 'The question that arises is whether one can improve on the hit ratio by directly
    implementing the linear regression based on the sign of the log returns that serve
    as the dependent variable values. In theory at least, this simplifies the problem
    from predicting an absolute return value to the sign of the return value. The
    only change in the Python code to implement this reasoning is to use the sign
    values (that is, `1.0` or `-1.0` in Python) for the regression step. This indeed
    increases the number of hits to 1,301 and the hit ratio to about 51.9%—an improvement
    of two percentage points:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 引发的问题是是否可以通过直接实施基于待预测回报的符号的线性回归来提高命中率。至少在理论上，这将问题简化为预测绝对回报值的符号。在Python代码中实现此推理的唯一更改是在回归步骤中使用符号值（即Python中的`1.0`或`-1.0`）。这确实将命中次数增加到1,301次，命中率约为51.9%——提高了两个百分点：
- en: '[PRE12]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO10-1)'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO10-1)'
- en: This directly uses the sign of the return to be predicted for the regression.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 这直接使用了待预测回报的符号进行回归。
- en: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO10-2)'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO10-2)'
- en: Also, for the prediction step, only the sign is relevant.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 预测步骤中，只有符号是相关的。
- en: Vectorized Backtesting of Regression-Based Strategy
  id: totrans-136
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基于回归的向量化回测策略
- en: The hit ratio alone does not tell too much about the economic potential of a
    trading strategy using linear regression in the way presented so far. It is well
    known that the ten best and worst days in the markets for a given period of time
    considerably influence the overall performance of investments.^([2](ch05.html#idm45785373157144))
    In an ideal world, a long-short trader would try, of course, to benefit from both
    best and worst days by going long and short, respectively, on the basis of appropriate
    market timing indicators. Translated to the current context, this implies that,
    in addition to the hit ratio, the quality of the market timing matters. Therefore,
    a backtesting along the lines of the approach in [Chapter 4](ch04.html#vectorized_backtesting)
    can give a better picture of the value of regression for prediction.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 单凭命中率无法充分说明使用线性回归进行交易策略的经济潜力。众所周知，对于给定时间段内市场上的十个最佳和最差日子显著影响投资的总体表现。^([2](ch05.html#idm45785373157144))
    在理想情况下，多头和空头交易者当然会尝试通过适当的市场时机指标在最佳和最差的日子中受益。转化为当前背景，这意味着除了命中率外，市场时机的质量也很重要。因此，沿着第四章中矢量化回测的方法进行回溯测试可以更好地描绘回归预测价值的全貌。
- en: 'Given the data that is already available, vectorized backtesting boils down
    to two lines of Python code including visualization. This is due to the fact that
    the prediction values already reflect the market positions (long or short). [Figure 5-6](#lr_plot_6)
    shows that, in-sample, the strategy under the current assumptions outperforms
    the market significantly (ignoring, among other things, transaction costs):'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 鉴于已有的数据，矢量化回测归结为两行Python代码，包括可视化。这是因为预测值已经反映了市场位置（多头或空头）。[图 5-6](#lr_plot_6)
    显示，在样本内，基于当前假设的策略明显优于市场（忽略交易成本等因素）：
- en: '[PRE13]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO11-1)'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO11-1)'
- en: Multiplies the prediction values (positionings) by the market returns.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 将预测值（定位）乘以市场回报。
- en: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO11-2)'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO11-2)'
- en: Calculates the gross performance of the base instrument and the strategy.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 计算基础工具和策略的总体表现。
- en: '[![3](assets/3.png)](#co_predicting_market_movements_with_machine_learning_CO11-3)'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_predicting_market_movements_with_machine_learning_CO11-3)'
- en: Plots the gross performance of the base instrument and the strategy over time
    (in-sample, no transaction costs).
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制基础工具和策略随时间的总体表现（样本内，无交易成本）。
- en: '![pfat 0506](assets/pfat_0506.png)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![pfat 0506](assets/pfat_0506.png)'
- en: Figure 5-6\. Gross performance of EUR/USD and the regression-based strategy
    (five lags)
  id: totrans-147
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-6\. EUR/USD 和基于回归的策略（五个滞后期）的总体表现
- en: The hit ratio of a prediction-based strategy is only one side of the coin when
    it comes to overall strategy performance. The other side is how well the strategy
    gets the market timing right. A strategy correctly predicting the best and worst
    days over a certain period of time might outperform the market even with a hit
    ratio below 50%. On the other hand, a strategy with a hit ratio well above 50%
    might still underperform the base instrument if it gets the rare, large movements
    wrong.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 基于预测的策略的命中率只是整体策略表现的一面。另一面是策略在市场时机选择上的表现。一种策略在一段时间内正确预测最佳和最差的日子可能会超越市场，即使命中率低于50%。另一方面，如果一种策略的命中率远高于50%，但在罕见的大幅波动时预测错误，仍可能表现不及基础工具。
- en: Generalizing the Approach
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 泛化方法
- en: '[“Linear Regression Backtesting Class”](#lr_vector_backtester) presents a Python
    module containing a class for the vectorized backtesting of the regression-based
    trading strategy in the spirit of [Chapter 4](ch04.html#vectorized_backtesting).
    In addition to allowing for an arbitrary amount to invest and proportional transaction
    costs, it allows the *in-sample fitting* of the linear regression model and the
    *out-of-sample evaluation*. This means that the regression model is fitted based
    on one part of the data set, say for the years 2010 to 2015, and is evaluated
    based on another part of the data set, say for the years 2016 and 2019\. For all
    strategies that involve an optimization or fitting step, this provides a more
    realistic view on the performance in practice since it helps avoid the problems
    arising from data snooping and the overfitting of models (see also [“Data Snooping
    and Overfitting”](ch04.html#data_snooping)).'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '[“线性回归回测类”](#lr_vector_backtester) 提供了一个 Python 模块，其中包含一个类，用于基于向量化的回归交易策略的回测，类似于[第
    4 章](ch04.html#vectorized_backtesting)中的内容。除了允许任意投资金额和比例交易成本外，它还允许*样本内拟合*线性回归模型和*样本外评估*。这意味着回归模型是基于数据集的一部分进行拟合的，比如说
    2010 年到 2015 年的数据，而基于另一部分数据集进行评估，比如说 2016 年到 2019 年的数据。对于涉及优化或拟合步骤的所有策略，这提供了更真实的实际表现视角，因为它有助于避免数据窥探和模型过拟合带来的问题（也见[“数据窥探和过拟合”](ch04.html#data_snooping)）。'
- en: '[Figure 5-7](#lr_plot_7) shows that the regression-based strategy based on
    five lags does outperform the EUR/USD base instrument for the particular configuration
    also out-of-sample and before accounting for transaction costs:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 5-7](#lr_plot_7) 显示，基于五个滞后项的回归策略在特定配置下在样本外表现优于 EUR/USD 基础工具，并且在考虑交易成本之前也是如此：'
- en: '[PRE14]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO12-1)'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO12-1)'
- en: Imports the module as `LR`.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 将模块导入为 `LR`。
- en: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO12-2)'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO12-2)'
- en: Instantiates an object of the `LRVectorBacktester` class.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 实例化 `LRVectorBacktester` 类的对象。
- en: '[![3](assets/3.png)](#co_predicting_market_movements_with_machine_learning_CO12-3)'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_predicting_market_movements_with_machine_learning_CO12-3)'
- en: Trains and evaluates the strategy on the same data set.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 在相同数据集上训练和评估策略。
- en: '[![4](assets/4.png)](#co_predicting_market_movements_with_machine_learning_CO12-4)'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_predicting_market_movements_with_machine_learning_CO12-4)'
- en: Uses two different data sets for the training and evaluation steps.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 在训练和评估步骤中使用了两个不同的数据集。
- en: '[![5](assets/5.png)](#co_predicting_market_movements_with_machine_learning_CO12-5)'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '[![5](assets/5.png)](#co_predicting_market_movements_with_machine_learning_CO12-5)'
- en: Plots the out of sample strategy performance compared to the market.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制样本外策略表现与市场的比较。
- en: '![pfat 0507](assets/pfat_0507.png)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![pfat 0507](assets/pfat_0507.png)'
- en: Figure 5-7\. Gross performance of EUR/USD and the regression-based strategy
    (five lags, out-of-sample, before transaction costs)
  id: totrans-164
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-7\. EUR/USD 和基于回归的策略（五个滞后项，在交易成本前的样本外）的总体表现
- en: 'Consider the `GDX` ETF. The strategy configuration chosen shows an outperformance
    out-of-sample and after taking transaction costs into account (see [Figure 5-8](#lr_plot_8)):'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑 `GDX` ETF。所选择的策略配置显示在样本外并在考虑交易成本后表现出色（见[图 5-8](#lr_plot_8)）：
- en: '[PRE15]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO13-1)'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO13-1)'
- en: Changes to the time series data for `GDX`.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 改变了`GDX`的时间序列数据。
- en: '![pfat 0508](assets/pfat_0508.png)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![pfat 0508](assets/pfat_0508.png)'
- en: Figure 5-8\. Gross performance of the `GDX` ETF and the regression-based strategy
    (seven lags, out-of-sample, after transaction costs)
  id: totrans-170
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-8\. `GDX` ETF 和基于回归的策略（七个滞后项，在交易成本后的样本外）的总体表现
- en: Using Machine Learning for Market Movement Prediction
  id: totrans-171
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用机器学习预测市场运动
- en: Nowadays, the Python ecosystem provides a number of packages in the machine
    learning field. The most popular of these is `scikit-learn` (see [`scikit-learn`
    home page](http://scikit-learn.org)), which is also one of the best documented
    and maintained packages. This section first introduces the API of the package
    based on linear regression, replicating some of the results of the previous section.
    It then goes on to use logistic regression as a classification algorithm to attack
    the problem of predicting the future market direction.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 如今，Python 生态系统在机器学习领域提供了许多包。其中最受欢迎的是 `scikit-learn`（参见 [`scikit-learn` 主页](http://scikit-learn.org)），它也是文档和维护最好的包之一。本节首先介绍了基于线性回归的包的
    API，复制了前一节部分结果。然后，使用逻辑回归作为分类算法来解决预测未来市场方向的问题。
- en: Linear Regression with scikit-learn
  id: totrans-173
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 `scikit-learn` 进行线性回归
- en: 'To introduce the `scikit-learn` API, revisiting the basic idea behind the prediction
    approach presented in this chapter is fruitful. Data preparation is the same as
    with `NumPy` only:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 为了介绍 `scikit-learn` 的 API，重新审视本章节中介绍的预测方法的基本思想是有益的。数据准备与 `NumPy` 相同：
- en: '[PRE16]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Using `scikit-learn` for our purposes mainly consists of three steps:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的目的，使用 `scikit-learn` 主要包括三个步骤：
- en: '*Model selection*: a model is to be picked and instantiated.'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*模型选择*：需选择并实例化一个模型。'
- en: '*Model fitting*: the model is to be fitted to the data at hand.'
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*模型拟合*：模型将被拟合到手头的数据。'
- en: '*Prediction*: given the fitted model, the prediction is conducted.'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*预测*：给定拟合模型，进行预测。'
- en: 'To apply linear regression, this translates into the following code that makes
    use of the `linear_model` sub-package for generalized linear models (see [`scikit-learn`
    linear models page](https://oreil.ly/5XoG1)). By default, the `LinearRegression`
    model fits an intercept value:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 要应用线性回归，可以使用 `linear_model` 子包进行广义线性模型（参见 [`scikit-learn` 线性模型页面](https://oreil.ly/5XoG1)）。默认情况下，`LinearRegression`
    模型拟合一个截距值：
- en: '[PRE17]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO14-1)'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO14-1)'
- en: Imports the generalized linear model classes.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 导入广义线性模型类。
- en: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO14-2)'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO14-2)'
- en: Instantiates a linear regression model.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 实例化线性回归模型。
- en: '[![3](assets/3.png)](#co_predicting_market_movements_with_machine_learning_CO14-3)'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_predicting_market_movements_with_machine_learning_CO14-3)'
- en: Fits the model to the data.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 将模型拟合到数据中。
- en: '[![4](assets/4.png)](#co_predicting_market_movements_with_machine_learning_CO14-4)'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_predicting_market_movements_with_machine_learning_CO14-4)'
- en: Prints out the optimal regression parameters.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 打印出最佳的回归参数。
- en: '[![5](assets/5.png)](#co_predicting_market_movements_with_machine_learning_CO14-5)'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: '[![5](assets/5.png)](#co_predicting_market_movements_with_machine_learning_CO14-5)'
- en: Prints out the intercept values.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 打印出截距值。
- en: '[![6](assets/6.png)](#co_predicting_market_movements_with_machine_learning_CO14-6)'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '[![6](assets/6.png)](#co_predicting_market_movements_with_machine_learning_CO14-6)'
- en: Predicts the sought after values given the fitted model.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 给定拟合模型，预测所需数值。
- en: 'Setting the parameter `fit_intercept` to `False` gives the exact same regression
    results as with `NumPy` and `polyfit()`:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 将参数 `fit_intercept` 设置为 `False` 将给出与 `NumPy` 和 `polyfit()` 相同的回归结果：
- en: '[PRE18]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO15-1)'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO15-1)'
- en: Forces a fit without intercept value.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 强制拟合而不使用截距值。
- en: This example already illustrates quite well how to apply `scikit-learn` to the
    prediction problem. Due to its consistent API design, the basic approach carries
    over to other models, as well.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 此示例已很好地展示了如何将 `scikit-learn` 应用于预测问题。由于其一致的 API 设计，基本方法可适用于其他模型。
- en: A Simple Classification Problem
  id: totrans-199
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一个简单的分类问题
- en: In a classification problem, it has to be decided to which of a limited set
    of categories (“classes”) a new observation belongs. A classical problem studied
    in machine learning is the identification of handwritten digits from 0 to 9\.
    Such an identification leads to a correct result, say 3\. Or it leads to a wrong
    result, say 6 or 8, where all such wrong results are equally wrong. In a financial
    market context, predicting the price of a financial instrument can lead to a numerical
    result that is far off the correct one or that is quite close to it. Predicting
    tomorrow’s market direction, there can only be a correct or a (“completely”) wrong
    result. The latter is a *classification problem* with the set of categories limited
    to, for example, “up” and “down” or “+1” and “–1” or “1” and “0.” By contrast,
    the former problem is an *estimation problem*.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 在分类问题中，必须确定新观察属于有限类别（“类别”）中的哪一个。机器学习中研究的一个经典问题是识别手写数字0到9。这样的识别会导致一个正确的结果，比如3。或者导致一个错误的结果，比如6或8，所有这些错误结果同样错误。在金融市场的背景下，预测金融工具价格可能会导致远离正确值或接近正确值的数值结果。预测明天市场方向，只能有正确或（“完全”）错误的结果。后者是一个*分类问题*，类别集合限定为“上升”和“下降”或“+1”和“–1”或“1”和“0”。相比之下，前者是一个*估计问题*。
- en: 'A simple example for a classification problem is found on Wikipedia under [Logistic
    Regression](https://oreil.ly/zg8gW). The data set relates the number of hours
    studied to prepare for an exam by a number of students to the success of each
    student in passing the exam or not. While the number of hours studied is a real
    number (`float` object), the passing of the exam is either `True` or `False` (that
    is, `1` or `0` in numbers). [Figure 5-9](#ml_plot_1) shows the data graphically:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 一个简单的分类问题示例在维基百科的[逻辑回归](https://oreil.ly/zg8gW)中找到。数据集将学生准备考试的学习时间与每个学生是否通过考试联系起来。虽然学习时间是一个实数（`float`对象），通过考试是`True`或`False`（即数字`1`或`0`）。图5-9展示了数据的图形化表现：
- en: '[PRE19]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO16-1)'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO16-1)'
- en: The number of hours studied by the different students (sequence matters).
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 不同学生的学习时间（顺序很重要）。
- en: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO16-2)'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO16-2)'
- en: The success of each student in passing the exam (sequence matters).
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 每个学生通过考试的成功（顺序很重要）。
- en: '[![3](assets/3.png)](#co_predicting_market_movements_with_machine_learning_CO16-3)'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_predicting_market_movements_with_machine_learning_CO16-3)'
- en: Plots the data set taking `hours` as `x` values and `success` as `y` values.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 将数据集绘制成以`hours`为`x`值，以`success`为`y`值的图表。
- en: '[![4](assets/4.png)](#co_predicting_market_movements_with_machine_learning_CO16-4)'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_predicting_market_movements_with_machine_learning_CO16-4)'
- en: Adjusts the limits of the y-axis.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 调整y轴的限制。
- en: '![pfat 0509](assets/pfat_0509.png)'
  id: totrans-211
  prefs: []
  type: TYPE_IMG
  zh: '![pfat 0509](assets/pfat_0509.png)'
- en: Figure 5-9\. Example data for classification problem
  id: totrans-212
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图5-9\. 分类问题示例数据
- en: 'The basic question typically raised in a such a context is: given a certain
    number of hours studied by a student (not in the data set), will they pass the
    exam or not? What answer could linear regression give? Probably not one that is
    satisfying, as [Figure 5-10](#ml_plot_2) shows. Given different numbers of hours
    studied, linear regression gives (prediction) values mainly between 0 and 1, as
    well as lower and higher. But there can only be *failure* or *success* as the
    outcome of taking the exam:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 在这样的背景下通常会提出基本问题：给定学生的学习时间（不在数据集中），他们能否通过考试？线性回归能给出什么样的答案？可能不尽如人意，如[图 5-10](#ml_plot_2)所示。在不同的学习时间下，线性回归主要给出（预测）值在0到1之间，同时也有更低或更高的值。但考试的结果只能是*失败*或*成功*：
- en: '[PRE20]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO17-1)'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO17-1)'
- en: Implements a linear regression on the data set.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 对数据集实施线性回归。
- en: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO17-2)'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO17-2)'
- en: Plots the regression line in addition to the data set.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制回归线以及数据集。
- en: '![pfat 0510](assets/pfat_0510.png)'
  id: totrans-219
  prefs: []
  type: TYPE_IMG
  zh: '![pfat 0510](assets/pfat_0510.png)'
- en: Figure 5-10\. Linear regression applied to the classification problem
  id: totrans-220
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图5-10\. 应用于分类问题的线性回归
- en: 'This is where classification algorithms, like logistic regression and support
    vector machines, come into play. For illustration, the application of logistic
    regression suffices (see James et al. (2013, ch. 4) for more background information).
    The respective class is also found in the `linear_model` sub-package. [Figure 5-11](#ml_plot_3)
    shows the result of the following Python code. This time, there is a clear cut
    (prediction) value for every different input value. The model predicts that students
    who studied for 0 to 2 hours will fail. For all values equal to or higher than
    2.75 hours, the model predicts that a student passes the exam:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 这是分类算法如逻辑回归和支持向量机发挥作用的地方。为了说明，逻辑回归的应用足够了（详见James等人（2013年，第4章）获取更多背景信息）。相应的类也可以在`linear_model`子包中找到。[图 5-11](#ml_plot_3)展示了以下Python代码的结果。这次，每个不同输入值都有一个明确的（预测）值。模型预测，学习了0至2小时的学生会失败。对于所有等于或高于2.75小时的值，模型预测学生通过考试：
- en: '[PRE21]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO18-1)'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO18-1)'
- en: Instantiates the logistic regression model.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 实例化逻辑回归模型。
- en: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO18-2)'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO18-2)'
- en: Reshapes the one-dimensional `ndarray` object to a two-dimensional one (required
    by `scikit-learn`).
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 将一维`ndarray`对象重塑为二维对象（`scikit-learn`所需）。
- en: '[![3](assets/3.png)](#co_predicting_market_movements_with_machine_learning_CO18-3)'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_predicting_market_movements_with_machine_learning_CO18-3)'
- en: Implements the fitting step.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 实现拟合步骤。
- en: '[![4](assets/4.png)](#co_predicting_market_movements_with_machine_learning_CO18-4)'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_predicting_market_movements_with_machine_learning_CO18-4)'
- en: Implements the prediction step given the fitted model.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 给定拟合模型，实现预测步骤。
- en: '![pfat 0511](assets/pfat_0511.png)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
  zh: '![pfat 0511](assets/pfat_0511.png)'
- en: Figure 5-11\. Logistic regression applied to the classification problem
  id: totrans-232
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-11。逻辑回归应用于分类问题
- en: 'However, as [Figure 5-11](#ml_plot_3) shows, there is no guarantee that 2.75
    hours or more lead to success. It is just “more probable” to succeed from that
    many hours on than to fail. This probabilistic reasoning can also be analyzed
    and visualized based on the same model instance, as the following code illustrates.
    The dashed line in [Figure 5-12](#ml_plot_4) shows the probability for succeeding
    (monotonically increasing). The dash-dotted line shows the probability for failing
    (monotonically decreasing):'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，正如[图 5-11](#ml_plot_3)所示，2.75小时或更多时间并不保证成功。从那么多小时开始，成功只是“更有可能”而已。这种概率推理也可以根据同一模型实例进行分析和可视化，如下面的代码所示。[图 5-12](#ml_plot_4)中的虚线显示了成功概率（单调递增）。点划线显示了失败概率（单调递减）：
- en: '[PRE22]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO19-1)'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO19-1)'
- en: Predicts probabilities for succeeding and failing, respectively.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 预测成功和失败的概率，分别。
- en: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO19-2)'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO19-2)'
- en: Plots the probabilities for failing.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制失败概率。
- en: '[![3](assets/3.png)](#co_predicting_market_movements_with_machine_learning_CO19-3)'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_predicting_market_movements_with_machine_learning_CO19-3)'
- en: Plots the probabilities for succeeding.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制成功概率。
- en: '![pfat 0512](assets/pfat_0512.png)'
  id: totrans-241
  prefs: []
  type: TYPE_IMG
  zh: '![pfat 0512](assets/pfat_0512.png)'
- en: Figure 5-12\. Probabilities for succeeding and failing, respectively, based
    on logistic regression
  id: totrans-242
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-12。基于逻辑回归分别得出的成功和失败概率。
- en: '`scikit-learn` does a good job of providing access to a great variety of machine
    learning models in a unified way. The examples show that the API for applying
    logistic regression does not differ from the one for linear regression. `scikit-learn`,
    therefore, is well suited to test a number of appropriate machine learning models
    in a certain application scenario without altering the Python code very much.'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '`scikit-learn`非常好地提供了统一访问各种机器学习模型的方式。示例显示，应用逻辑回归的API与应用线性回归的API并无不同。因此，`scikit-learn`非常适合在某些应用场景中测试多种适当的机器学习模型，而几乎不需要更改Python代码。'
- en: Equipped with the basics, the next step is to apply logistic regression to the
    problem of predicting market direction.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 掌握了基础知识，下一步是将逻辑回归应用于预测市场方向的问题。
- en: Using Logistic Regression to Predict Market Direction
  id: totrans-245
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用逻辑回归预测市场方向
- en: 'In machine learning, one generally speaks of *features* instead of *independent*
    or *explanatory variables* as in a regression context. The simple classification
    example has a single feature only: the number of hours studied. In practice, one
    often has more than one feature that can be used for classification. Given the
    prediction approach introduced in this chapter, one can identify a *feature* by
    a *lag*. Therefore, working with three lags from the time series data means that
    there are three features. As possible outcomes or categories, there are only `+1`
    and `-1` for an upwards and a downwards movement, respectively. Although the wording
    changes, the formalism stays the same, particularly with regard to deriving the
    matrix, now called the *feature matrix*.'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 在机器学习中，通常用*特征*代替回归背景下的*独立变量*或*解释变量*。简单的分类示例只有一个特征：学习小时数。实际应用中，通常有多个可用于分类的特征。根据本章介绍的预测方法，可以通过*滞后*来识别一个*特征*。因此，从时间序列数据中工作的三个滞后意味着有三个特征。作为可能的结果或类别，只有`+1`和`-1`分别表示向上和向下的移动。尽管措辞不同，但形式主义保持不变，特别是在推导矩阵时，现在称为*特征矩阵*。
- en: 'The following code presents an alternative to creating a `pandas` `DataFrame`
    based “feature matrix” to which the three step procedure applies equally well—if
    not in a more Pythonic fashion. The feature matrix now is a sub-set of the columns
    in the original data set:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码提供了一种创建`pandas` `DataFrame`的“特征矩阵”的替代方法，这三个步骤同样适用，甚至更符合Pythonic风格。现在的特征矩阵是原始数据集中列的子集：
- en: '[PRE23]'
  id: totrans-248
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO20-1)'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO20-1)'
- en: Instantiates an empty `list` object to collect column names.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 实例化一个空的`list`对象以收集列名。
- en: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO20-2)'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO20-2)'
- en: Creates a `str` object for the column name.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 为列名创建一个`str`对象。
- en: '[![3](assets/3.png)](#co_predicting_market_movements_with_machine_learning_CO20-3)'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_predicting_market_movements_with_machine_learning_CO20-3)'
- en: Adds a new column to the `DataFrame` object with the respective lag data.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 向`DataFrame`对象添加一个带有相应滞后数据的新列。
- en: '[![4](assets/4.png)](#co_predicting_market_movements_with_machine_learning_CO20-4)'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_predicting_market_movements_with_machine_learning_CO20-4)'
- en: Appends the column name to the `list` object.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 将列名附加到`list`对象。
- en: '[![5](assets/5.png)](#co_predicting_market_movements_with_machine_learning_CO20-5)'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: '[![5](assets/5.png)](#co_predicting_market_movements_with_machine_learning_CO20-5)'
- en: Makes sure that the data set is complete.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 确保数据集完整。
- en: 'Logistic regression improves the hit ratio compared to linear regression by
    more than a percentage point to about 54.5%. [Figure 5-13](#ml_plot_5) shows the
    performance of the strategy based on logistic regression-based predictions. Although
    the hit ratio is higher, the performance is worse than with linear regression:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 与线性回归相比，逻辑回归将命中率提高了超过一个百分点，达到约54.5%。[图 5-13](#ml_plot_5)展示了基于逻辑回归预测的策略表现。尽管命中率更高，但性能比线性回归差：
- en: '[PRE24]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO21-1)'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO21-1)'
- en: Instantiates the model object using a `C` value that gives less weight to the
    regularization term (see the [Generalized Linear Models page](https://oreil.ly/D819h)).
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 使用一个`C`值实例化模型对象，该值减少了正则化项的权重（参见[广义线性模型页面](https://oreil.ly/D819h)）。
- en: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO21-2)'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO21-2)'
- en: Fits the model based on the sign of the returns to be predicted.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 根据要预测的回报的符号拟合模型。
- en: '[![3](assets/3.png)](#co_predicting_market_movements_with_machine_learning_CO21-3)'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_predicting_market_movements_with_machine_learning_CO21-3)'
- en: Generates a new column in the `DataFrame` object and writes the prediction values
    to it.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 在`DataFrame`对象中生成一个新列，并将预测值写入其中。
- en: '[![4](assets/4.png)](#co_predicting_market_movements_with_machine_learning_CO21-4)'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_predicting_market_movements_with_machine_learning_CO21-4)'
- en: Shows the number of the resulting long and short positions, respectively.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 显示生成的多头和空头仓位的数量。
- en: '[![5](assets/5.png)](#co_predicting_market_movements_with_machine_learning_CO21-5)'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: '[![5](assets/5.png)](#co_predicting_market_movements_with_machine_learning_CO21-5)'
- en: Calculates the number of correct and wrong predictions.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 计算正确和错误预测的数量。
- en: '[![6](assets/6.png)](#co_predicting_market_movements_with_machine_learning_CO21-6)'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: '[![6](assets/6.png)](#co_predicting_market_movements_with_machine_learning_CO21-6)'
- en: The accuracy (hit ratio) is 53.3% in this case.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，准确率（命中率）为53.3%。
- en: '[![7](assets/7.png)](#co_predicting_market_movements_with_machine_learning_CO21-7)'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: '[![7](assets/7.png)](#co_predicting_market_movements_with_machine_learning_CO21-7)'
- en: However, the gross performance of the strategy…
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，策略的总体表现…
- en: '[![8](assets/8.png)](#co_predicting_market_movements_with_machine_learning_CO21-9)'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: '[![8](assets/8.png)](#co_predicting_market_movements_with_machine_learning_CO21-9)'
- en: …is much higher when compared with the passive benchmark investment.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: …与被动基准投资相比要高得多。
- en: '![pfat 0513](assets/pfat_0513.png)'
  id: totrans-277
  prefs: []
  type: TYPE_IMG
  zh: '![pfat 0513](assets/pfat_0513.png)'
- en: Figure 5-13\. Gross performance of `GLD` ETF and the logistic regression-based
    strategy (3 lags, in-sample)
  id: totrans-278
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图5-13\. `GLD` ETF的总体表现和基于逻辑回归的策略（3个滞后值，样本内）
- en: 'Increasing the number of lags used from three to five decreases the hit ratio
    but improves the gross performance of the strategy to some extent (in-sample,
    before transaction costs). [Figure 5-14](#ml_plot_6) shows the resulting performance:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 将使用的滞后数从三增加到五，虽然降低了命中率，但在某种程度上提高了策略的总体表现（样本内，在交易成本之前）。 [图5-14](#ml_plot_6) 显示了相应的表现：
- en: '[PRE25]'
  id: totrans-280
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO22-1)'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO22-1)'
- en: Increases the number of lags to five.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 将滞后数增加到五。
- en: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO22-2)'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO22-2)'
- en: Fits the model based on five lags.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 根据五个滞后值拟合模型。
- en: '[![3](assets/3.png)](#co_predicting_market_movements_with_machine_learning_CO22-3)'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_predicting_market_movements_with_machine_learning_CO22-3)'
- en: There are now significantly more short positions with the new parametrization.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 现在有了更多的空头头寸。
- en: '[![4](assets/4.png)](#co_predicting_market_movements_with_machine_learning_CO22-4)'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_predicting_market_movements_with_machine_learning_CO22-4)'
- en: The accuracy (hit ratio) decreases to 53.1%.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 准确率（命中率）降低到了53.1%。
- en: '[![5](assets/5.png)](#co_predicting_market_movements_with_machine_learning_CO22-5)'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: '[![5](assets/5.png)](#co_predicting_market_movements_with_machine_learning_CO22-5)'
- en: The cumulative performance also increases significantly.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 累积表现也显著增加。
- en: '![pfat 0514](assets/pfat_0514.png)'
  id: totrans-291
  prefs: []
  type: TYPE_IMG
  zh: '![pfat 0514](assets/pfat_0514.png)'
- en: Figure 5-14\. Gross performance of `GLD` ETF and the logistic regression-based
    strategy (five lags, in-sample)
  id: totrans-292
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图5-14\. `GLD` ETF的总体表现和基于逻辑回归的策略（五个滞后值，样本内）
- en: You have to be careful to not fall into the overfitting trap here. A more realistic
    picture is obtained by an approach that uses *training data* (= in-sample data)
    for the *fitting* of the model and *test data* (= out-of-sample data) for the
    *evaluation* of the strategy performance. This is done in the following section,
    when the approach is generalized again in the form of a Python class.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 这里必须小心，不要陷入过拟合的陷阱。通过一种方法获得了更为现实的图片，该方法使用*训练数据*（=样本内数据）来*拟合*模型，并使用*测试数据*（=样本外数据）来评估*策略性能*。这在接下来的部分中完成，当该方法再次以Python类的形式被概括时。
- en: Generalizing the Approach
  id: totrans-294
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 泛化方法
- en: '[“Classification Algorithm Backtesting Class”](#sci_vector_backtester) presents
    a Python module with a class for the vectorized backtesting of strategies based
    on linear models from `scikit-learn`. Although only linear and logistic regression
    are implemented, the number of models is easily increased. In principle, the `ScikitVectorBacktester`
    class could inherit selected methods from the `LRVectorBacktester` but it is presented
    in a self-contained fashion. This makes it easier to enhance and reuse this class
    for practical applications.'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: '[`分类算法回测类`](#sci_vector_backtester) 提供了一个Python模块，其中包含一个用于基于`scikit-learn`线性模型的策略的向量化回测的类。尽管只实现了线性和逻辑回归，但模型数量很容易增加。原则上，`ScikitVectorBacktester`
    类可以从 `LRVectorBacktester` 中继承选定的方法，但它以自包含的方式呈现。这使得更容易增强和重用该类用于实际应用。'
- en: Based on the `ScikitBacktesterClass`, an out-of-sample evaluation of the logistic
    regression-based strategy is possible. The example uses the EUR/USD exchange rate
    as the base instrument.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 基于`ScikitBacktesterClass`，可以对基于逻辑回归的策略进行样本外评估。本例使用EUR/USD汇率作为基础工具。
- en: '[Figure 5-15](#ml_plot_7) illustrates that the strategy outperforms the base
    instrument during the out-of-sample period (spanning the year 2019) however, without
    considering transaction costs as before:'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: '[图5-15](#ml_plot_7)说明了该策略在样本外期间（跨越2019年）表现优于基础工具，然而，与以前一样，不考虑交易成本：'
- en: '[PRE26]'
  id: totrans-298
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '![pfat 0515](assets/pfat_0515.png)'
  id: totrans-299
  prefs: []
  type: TYPE_IMG
  zh: '![pfat 0515](assets/pfat_0515.png)'
- en: Figure 5-15\. Gross performance of S&P 500 and the out-of-sample logistic regression-based
    strategy (15 lags, no transaction costs)
  id: totrans-300
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-15\. 标准普尔500指数的总体表现及样本外基于逻辑回归的策略（15滞后，无交易成本）
- en: 'As another example, consider the same strategy applied to the `GDX` ETF, for
    which an out-of-sample outperformance (over the year 2018) is shown in [Figure 5-16](#ml_plot_8)
    (before transaction costs):'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 举个例子，考虑相同策略应用于 `GDX` ETF，在2018年展示了样本外的超额表现（在考虑交易成本之前）在 [图 5-16](#ml_plot_8)
    中：
- en: '[PRE27]'
  id: totrans-302
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '![pfat 0516](assets/pfat_0516.png)'
  id: totrans-303
  prefs: []
  type: TYPE_IMG
  zh: '![pfat 0516](assets/pfat_0516.png)'
- en: Figure 5-16\. Gross performance of `GDX` ETF and the logistic regression-based
    strategy (10 lags, out-of-sample, no transaction costs)
  id: totrans-304
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-16\. `GDX` ETF的总体表现及基于逻辑回归的策略（10滞后，样本外，无交易成本）
- en: '[Figure 5-17](#ml_plot_8_a) shows how the gross performance is diminished—leading
    even to a net loss—when taking transaction costs into account, while keeping all
    other parameters constant:'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 5-17](#ml_plot_8_a)展示了考虑交易成本后，总体表现如何下降，甚至导致净损失，而其他所有参数保持不变：'
- en: '[PRE28]'
  id: totrans-306
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '![pfat 0517](assets/pfat_0517.png)'
  id: totrans-307
  prefs: []
  type: TYPE_IMG
  zh: '![pfat 0517](assets/pfat_0517.png)'
- en: Figure 5-17\. Gross performance of `GDX` ETF and the logistic regression-based
    strategy (10 lags, out-of-sample, with transaction costs)
  id: totrans-308
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-17\. `GDX` ETF的总体表现及基于逻辑回归的策略（10滞后，样本外，含交易成本）
- en: Applying sophisticated machine learning techniques to stock market prediction
    often yields promising results early on. In several examples, the strategies backtested
    outperform the base instrument significantly in-sample. Quite often, such stellar
    performances are due to a mix of simplifying assumptions and also due to an overfitting
    of the prediction model. For example, testing the very same strategy instead of
    in-sample on an out-of-sample data set and adding transaction costs—as two ways
    of getting to a more realistic picture—often shows that the performance of the
    considered strategy “suddenly” trails the base instrument performance-wise or
    turns to a net loss.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 将复杂的机器学习技术应用于股市预测通常在早期表现出有希望的结果。在多个示例中，回测策略往往在样本内表现优于基础工具。这种突出的表现往往是由于简化假设的混合，同时也由于预测模型的过拟合。例如，测试相同策略而非样本内数据集，加入交易成本——这两种方法都能更真实地描绘出的图片——通常表明，所考虑策略的表现“突然”在性能上落后于基础工具或转为净损失。
- en: Using Deep Learning for Market Movement Prediction
  id: totrans-310
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用深度学习预测市场动向
- en: Right from the open sourcing and publication by Google, the deep learning library
    [`TensorFlow`](http://tensorflow.org) has attracted much interest and wide-spread
    application. This section applies `TensorFlow` in the same way that the previous
    section applied `scikit-learn` to the prediction of stock market movements modeled
    as a classification problem. However, `TensorFlow` is not used directly; it is
    rather used via the equally popular [`Keras`](http://keras.io) deep learning package.
    `Keras` can be thought of as providing a higher level abstraction to the `TensorFlow`
    package with an easier to understand and use API.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 自从谷歌开源并发布后，深度学习库 [`TensorFlow`](http://tensorflow.org) 吸引了广泛关注和应用。本节将 `TensorFlow`
    应用于与前一节类似的股市动向预测，模型化为分类问题。然而，`TensorFlow` 并非直接使用；它是通过同样流行的 [`Keras`](http://keras.io)
    深度学习包间接使用的。`Keras` 可以被视为提供了对 `TensorFlow` 包更高级别的抽象，具有更易于理解和使用的 API。
- en: The libraries are best installed via `pip install tensorflow` and `pip install
    keras`. `scikit-learn` also offers classes to apply neural networks to classification
    problems.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 库最好通过 `pip install tensorflow` 和 `pip install keras` 安装。`scikit-learn` 还提供了应用神经网络解决分类问题的类。
- en: For more background information on deep learning and `Keras`, see Goodfellow
    et al. (2016) and Chollet (2017), respectively.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 想要了解更多有关深度学习和 `Keras` 的背景信息，请参阅Goodfellow等人（2016）和Chollet（2017）。
- en: The Simple Classification Problem Revisited
  id: totrans-314
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 简单的分类问题再审视
- en: 'To illustrate the basic approach of applying neural networks to classification
    problems, the simple classification problem introduced in the previous section
    again proves useful:'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 为了说明将神经网络应用于分类问题的基本方法，前一节介绍的简单分类问题再次显示出其用处：
- en: '[PRE29]'
  id: totrans-316
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO23-1)'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO23-1)'
- en: Stores the two data sub-sets in a `DataFrame` object.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 将两个数据子集存储在 `DataFrame` 对象中。
- en: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO23-2)'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO23-2)'
- en: Prints out the meta information for the `DataFrame` object.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 打印出`DataFrame`对象的元信息。
- en: 'With these preparations, `MLPClassifier` from `scikit-learn` can be imported
    and straightforwardly applied.^([3](ch05.html#idm45785368841160)) “MLP” in this
    context stands for *multi-layer perceptron*, which is another expression for *dense
    neural network*. As before, the API to apply neural networks with `scikit-learn`
    is basically the same:'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 准备工作完成后，可以导入并直接应用`scikit-learn`中的`MLPClassifier`。^([3](ch05.html#idm45785368841160))
    在这个上下文中，“MLP”代表*多层感知器*，这是*密集神经网络*的另一种表达方式。与以往一样，使用`scikit-learn`应用神经网络的API基本相同：
- en: '[PRE30]'
  id: totrans-322
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO24-1)'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO24-1)'
- en: Imports the `MLPClassifier` object from `scikit-learn`.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 从`scikit-learn`导入`MLPClassifier`对象。
- en: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO24-2)'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO24-2)'
- en: Instantiates the `MLPClassifier` object.
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 实例化`MLPClassifier`对象。
- en: 'The following code fits the model, generates the predictions, and plots the
    results, as shown in [Figure 5-18](#dl_plot_1):'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码拟合模型，生成预测并绘制结果，如[图5-18](#dl_plot_1)所示：
- en: '[PRE31]'
  id: totrans-328
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO25-1)'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO25-1)'
- en: Fits the neural network for classification.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 为分类拟合神经网络。
- en: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO25-2)'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO25-2)'
- en: Generates the prediction values based on the fitted model.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 根据拟合模型生成预测值。
- en: '[![3](assets/3.png)](#co_predicting_market_movements_with_machine_learning_CO25-3)'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_predicting_market_movements_with_machine_learning_CO25-3)'
- en: Plots the original data and the prediction values.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制原始数据和预测值。
- en: This simple example shows that the application of the deep learning approach
    is quite similar to the approach with `scikit-learn` and the `LogisticRegression`
    model object. The API is basically the same; only the parameters are different.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 这个简单的例子显示了深度学习方法的应用与`scikit-learn`和`LogisticRegression`模型对象的方法非常相似。API基本相同，只是参数不同。
- en: '![pfat 0518](assets/pfat_0518.png)'
  id: totrans-336
  prefs: []
  type: TYPE_IMG
  zh: '![pfat 0518](assets/pfat_0518.png)'
- en: Figure 5-18\. Base data and prediction results with `MLPClassifier` for the
    simple classification example
  id: totrans-337
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图5-18\. 简单分类示例中使用`MLPClassifier`的基础数据和预测结果
- en: Using Deep Neural Networks to Predict Market Direction
  id: totrans-338
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用深度神经网络预测市场方向。
- en: 'The next step is to apply the approach to stock market data in the form of
    log returns from a financial time series. First, the data needs to be retrieved
    and prepared:'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是将这种方法应用于股票市场数据，以金融时间序列的对数收益率形式。首先，需要检索和准备数据：
- en: '[PRE32]'
  id: totrans-340
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO26-1)'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO26-1)'
- en: Reads the data from the `CSV` file.
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 从`CSV`文件读取数据。
- en: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO26-2)'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO26-2)'
- en: Picks the single time series column of interest.
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 选择感兴趣的单个时间序列列。
- en: '[![3](assets/3.png)](#co_predicting_market_movements_with_machine_learning_CO26-3)'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_predicting_market_movements_with_machine_learning_CO26-3)'
- en: Renames the only column to `price`.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 将唯一的列重命名为`price`。
- en: '[![4](assets/4.png)](#co_predicting_market_movements_with_machine_learning_CO26-4)'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_predicting_market_movements_with_machine_learning_CO26-4)'
- en: Calculates the log returns and defines the `direction` as a binary column.
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 计算对数收益率并将`direction`定义为二进制列。
- en: '[![5](assets/5.png)](#co_predicting_market_movements_with_machine_learning_CO26-6)'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: '[![5](assets/5.png)](#co_predicting_market_movements_with_machine_learning_CO26-6)'
- en: Creates the lagged data.
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 创建滞后数据。
- en: '[![6](assets/6.png)](#co_predicting_market_movements_with_machine_learning_CO26-7)'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: '[![6](assets/6.png)](#co_predicting_market_movements_with_machine_learning_CO26-7)'
- en: Creates new `DataFrame` columns with the log returns shifted by the respective
    number of lags.
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 创建新的`DataFrame`列，其中包含相应滞后数的对数收益率。
- en: '[![7](assets/7.png)](#co_predicting_market_movements_with_machine_learning_CO26-8)'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: '[![7](assets/7.png)](#co_predicting_market_movements_with_machine_learning_CO26-8)'
- en: Deletes rows containing `NaN` values.
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 删除包含`NaN`值的行。
- en: '[![8](assets/8.png)](#co_predicting_market_movements_with_machine_learning_CO26-9)'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: '[![8](assets/8.png)](#co_predicting_market_movements_with_machine_learning_CO26-9)'
- en: Prints out the final five rows indicating the “patterns” emerging in the five
    feature columns.
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 输出最后五行，指示五个特征列中出现的“模式”。
- en: 'The following code uses a dense neural network (DNN) with the `Keras` package^([4](ch05.html#idm45785368008552)),
    defines training and test data sub-sets, defines the feature columns, and labels
    and fits the classifier. In the backend, `Keras` uses the `TensorFlow` package
    to accomplish the task. [Figure 5-19](#dnn_plot_metrics) shows how the accuracy
    of the DNN classifier changes for both the training and validation data sets during
    training. As validation data set, 20% of the training data (without shuffling)
    is used:'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码使用密集神经网络（DNN）与`Keras`包进行训练和测试数据子集的定义，定义特征列和标签，并拟合分类器。在后台，`Keras`使用`TensorFlow`包来完成任务。[图 5-19](#dnn_plot_metrics)显示了DNN分类器在训练过程中训练和验证数据集的准确性如何变化。作为验证数据集，使用训练数据的20%（不进行洗牌）：
- en: '[PRE33]'
  id: totrans-358
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO27-1)'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO27-1)'
- en: Imports the `TensorFlow` package.
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 导入`TensorFlow`包。
- en: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO27-2)'
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO27-2)'
- en: Imports the required model object from `Keras`.
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 从`Keras`导入所需的模型对象。
- en: '[![3](assets/3.png)](#co_predicting_market_movements_with_machine_learning_CO27-3)'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_predicting_market_movements_with_machine_learning_CO27-3)'
- en: Imports the relevant layer object from `Keras`.
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 从`Keras`中导入相关层对象。
- en: '[![4](assets/4.png)](#co_predicting_market_movements_with_machine_learning_CO27-4)'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_predicting_market_movements_with_machine_learning_CO27-4)'
- en: A `Sequential` model is instantiated.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 实例化一个`Sequential`模型。
- en: '[![5](assets/5.png)](#co_predicting_market_movements_with_machine_learning_CO27-5)'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: '[![5](assets/5.png)](#co_predicting_market_movements_with_machine_learning_CO27-5)'
- en: The hidden layers and the output layer are defined.
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 定义隐藏层和输出层。
- en: '[![6](assets/6.png)](#co_predicting_market_movements_with_machine_learning_CO27-8)'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: '[![6](assets/6.png)](#co_predicting_market_movements_with_machine_learning_CO27-8)'
- en: Compiles the `Sequential` model object for classification.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 为分类编译`Sequential`模型对象。
- en: '[![7](assets/7.png)](#co_predicting_market_movements_with_machine_learning_CO27-9)'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: '[![7](assets/7.png)](#co_predicting_market_movements_with_machine_learning_CO27-9)'
- en: Defines the cutoff date between the training and test data.
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 定义训练和测试数据之间的截止日期。
- en: '[![8](assets/8.png)](#co_predicting_market_movements_with_machine_learning_CO27-10)'
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: '[![8](assets/8.png)](#co_predicting_market_movements_with_machine_learning_CO27-10)'
- en: Defines the training and test data sets.
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 定义训练和测试数据集。
- en: '[![9](assets/9.png)](#co_predicting_market_movements_with_machine_learning_CO27-11)'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: '[![9](assets/9.png)](#co_predicting_market_movements_with_machine_learning_CO27-11)'
- en: Normalizes the features data by Gaussian normalization.
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 通过高斯归一化对特征数据进行归一化。
- en: '[![10](assets/10.png)](#co_predicting_market_movements_with_machine_learning_CO27-15)'
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: '[![10](assets/10.png)](#co_predicting_market_movements_with_machine_learning_CO27-15)'
- en: Fits the model to the training data set.
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 将模型拟合到训练数据集。
- en: '![pfat 0519](assets/pfat_0519.png)'
  id: totrans-379
  prefs: []
  type: TYPE_IMG
  zh: '![pfat 0519](assets/pfat_0519.png)'
- en: Figure 5-19\. Accuracy of DNN classifier on training and validation data per
    training step
  id: totrans-380
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图5-19\. DNN分类器在训练和验证数据中的准确性每个训练步骤
- en: 'Equipped with the fitted classifier, the model can generate predictions on
    the training data set. [Figure 5-20](#dl_plot_2) shows the strategy gross performance
    compared to the base instrument (in-sample):'
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 配备适配的分类器，该模型可以在训练数据集上生成预测。[图 5-20](#dl_plot_2)显示了策略总体绩效与基础工具（样本内）的比较：
- en: '[PRE34]'
  id: totrans-382
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO28-1)'
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO28-1)'
- en: Predicts the market direction in-sample.
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 在样本内预测市场方向。
- en: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO28-3)'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO28-3)'
- en: Transforms the predictions into long-short positions, `+1` and `-1`.
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 将预测转换为多空头寸，`+1`和`-1`。
- en: '[![3](assets/3.png)](#co_predicting_market_movements_with_machine_learning_CO28-4)'
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_predicting_market_movements_with_machine_learning_CO28-4)'
- en: Calculates the strategy returns given the positions.
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 计算给定仓位的策略回报。
- en: '[![4](assets/4.png)](#co_predicting_market_movements_with_machine_learning_CO28-5)'
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_predicting_market_movements_with_machine_learning_CO28-5)'
- en: Plots and compares the strategy performance to the benchmark performance (in-sample).
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制并比较策略绩效与基准绩效（样本内）。
- en: '![pfat 0520](assets/pfat_0520.png)'
  id: totrans-391
  prefs: []
  type: TYPE_IMG
  zh: '![pfat 0520](assets/pfat_0520.png)'
- en: Figure 5-20\. Gross performance of EUR/USD compared to the deep learning-based
    strategy (in-sample, no transaction costs)
  id: totrans-392
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图5-20\. EUR/USD的总体绩效与基于深度学习的策略比较（样本内，无交易成本）
- en: 'The strategy seems to perform somewhat better than the base instrument on the
    training data set (in-sample, without transaction costs). However, the more interesting
    question is how it performs on the test data set (out-of-sample). After a wobbly
    start, the strategy also outperforms the base instrument out-of-sample, as [Figure 5-21](#dl_plot_3)
    illustrates. This is despite the fact that the accuracy of the classifier is only
    slightly above 50% on the test data set:'
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 该策略在训练数据集上似乎比基础工具稍有改进（样本内，无交易成本）。然而，更有趣的问题是它在测试数据集上的表现。在起步踯躅后，策略也在测试数据集上表现优于基础工具，正如图[5-21](#dl_plot_3)所示。尽管分类器在测试数据集上的准确率仅略高于50%：
- en: '[PRE35]'
  id: totrans-394
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '![pfat 0521](assets/pfat_0521.png)'
  id: totrans-395
  prefs: []
  type: TYPE_IMG
  zh: '![pfat 0521](assets/pfat_0521.png)'
- en: Figure 5-21\. Gross performance of EUR/USD compared to the deep learning-based
    strategy (out-of-sample, no transaction costs)
  id: totrans-396
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-21\. EUR/USD 的总体表现与基于深度学习的策略对比（样本外，无交易成本）
- en: Adding Different Types of Features
  id: totrans-397
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加不同类型的特征
- en: 'So far, the analysis mainly focuses on the log returns directly. It is, of
    course, possible not only to add more classes/categories but also to add other
    types of features to the mix, such as ones based on *momentum*, *volatility*,
    or *distance* measures. The code that follows derives the additional features
    and adds them to the data set:'
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，分析主要集中在对数收益率上。当然，不仅可以添加更多的类别/分类，还可以添加其他类型的特征，比如基于*动量*、*波动性*或*距离*度量的特征。接下来的代码会推导出这些额外的特征并将它们添加到数据集中：
- en: '[PRE36]'
  id: totrans-399
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO29-1)'
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO29-1)'
- en: The momentum-based feature.
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 基于动量的特征。
- en: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO29-2)'
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_predicting_market_movements_with_machine_learning_CO29-2)'
- en: The volatility-based feature.
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 基于波动性的特征。
- en: '[![3](assets/3.png)](#co_predicting_market_movements_with_machine_learning_CO29-3)'
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_predicting_market_movements_with_machine_learning_CO29-3)'
- en: The distance-based feature.
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 基于距离的特征。
- en: 'The next steps are to redefine the training and test data sets, to normalize
    the features data, and to update the model to reflect the new features columns:'
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是重新定义训练和测试数据集，规范化特征数据，并更新模型以反映新的特征列：
- en: '[PRE37]'
  id: totrans-407
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO30-1)'
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_predicting_market_movements_with_machine_learning_CO30-1)'
- en: The `input_shape` parameter is adjusted to reflect the new number of features.
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: 参数`input_shape`已调整以反映新的特征数。
- en: 'Based on the enriched feature set, the classifier can be trained. The in-sample
    performance of the strategy is quite a bit better than before, as illustrated
    in [Figure 5-22](#dl_plot_4):'
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 基于丰富的特征集，可以训练分类器。如图[5-22](#dl_plot_4)所示，策略的样本内表现比以前好得多：
- en: '[PRE38]'
  id: totrans-411
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: '![pfat 0522](assets/pfat_0522.png)'
  id: totrans-412
  prefs: []
  type: TYPE_IMG
  zh: '![pfat 0522](assets/pfat_0522.png)'
- en: Figure 5-22\. Gross performance of EUR/USD compared to the deep learning-based
    strategy (in-sample, additional features)
  id: totrans-413
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-22\. EUR/USD 的总体表现与基于深度学习的策略对比（样本内，额外特征）
- en: 'The final step is the evaluation of the classifier and the derivation of the
    strategy performance out-of-sample. The classifier also performs significantly
    better, *ceteris paribus*, when compared to the case without the additional features.
    As before, the start is a bit wobbly (see [Figure 5-23](#dl_plot_5)):'
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步是对分类器进行评估，并推导出样本外策略表现。与没有额外特征的情况相比，分类器的表现也显著提高，*其他条件不变*。与训练数据集相比，起步稍显踯躅（见图[5-23](#dl_plot_5)）：
- en: '[PRE39]'
  id: totrans-415
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '![pfat 0523](assets/pfat_0523.png)'
  id: totrans-416
  prefs: []
  type: TYPE_IMG
  zh: '![pfat 0523](assets/pfat_0523.png)'
- en: Figure 5-23\. Gross performance of EUR/USD compared to the deep learning-based
    strategy (out-of-sample, additional features)
  id: totrans-417
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-23\. EUR/USD 的总体表现与基于深度学习的策略对比（样本外，额外特征）
- en: The `Keras` package, in combination with the `TensorFlow` package as its backend,
    allows one to make use of the most recent advances in deep learning, such as deep
    neural network (DNN) classifiers, for algorithmic trading. The application is
    as straightforward as applying other machine learning models with `scikit-learn`.
    The approach illustrated in this section allows for an easy enhancement with regard
    to the different types of features used.
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: '`Keras`包与其后端`TensorFlow`包结合使用，允许利用深度学习的最新进展，如深度神经网络（DNN）分类器，用于算法交易。该应用与使用`scikit-learn`的其他机器学习模型一样简单。本节中展示的方法允许轻松地增强所使用的不同类型的特征。'
- en: As an exercise, it is worthwhile to code a Python class (in the spirit of [“Linear
    Regression Backtesting Class”](#lr_vector_backtester) and [“Classification Algorithm
    Backtesting Class”](#sci_vector_backtester)) that allows for a more systematic
    and realistic usage of the `Keras` package for financial market prediction and
    the backtesting of respective trading strategies.
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一项练习，编写一个Python类（灵感来自[“线性回归回测类”](#lr_vector_backtester)和[“分类算法回测类”](#sci_vector_backtester)），允许更系统化和现实化地使用`Keras`包进行金融市场预测和相应交易策略的回测。
- en: Conclusions
  id: totrans-420
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Predicting future market movements is the holy grail in finance. It means to
    find the truth. It means to overcome *efficient markets*. If one can do it with
    a considerable edge, then stellar investment and trading returns are the consequence.
    This chapter introduces statistical techniques from the fields of traditional
    statistics, machine learning, and deep learning to predict the future market direction
    based on past returns or similar financial quantities. Some first in-sample results
    are promising, both for linear and logistic regression. However, a more reliable
    impression is gained when evaluating such strategies out-of-sample and when factoring
    in transaction costs.
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 预测未来市场走势是金融界的圣杯。这意味着找到真理。这意味着克服*有效市场*。如果能够在这方面取得相当大的优势，那么卓越的投资和交易回报将是其结果。本章介绍了来自传统统计学、机器学习和深度学习领域的统计技术，以便根据过去的收益或类似的金融数据预测未来市场走向。一些首次样本内结果是有希望的，无论是线性回归还是逻辑回归。然而，在样本外评估这些策略并考虑交易成本时，可以获得更可靠的印象。
- en: This chapter does not claim to have found the holy grail. It rather offers a
    glimpse on techniques that could prove useful in the search for it. The unified
    API of `scikit-learn` also makes it easy to replace, for example, one linear model
    with another one. In that sense, the `ScikitBacktesterClass` can be used as a
    starting point to explore more machine learning models and to apply them to financial
    time series prediction.
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: 本章并不声称找到了圣杯。它更多地提供了一瞥可能在寻找圣杯过程中证明有用的技术。`scikit-learn`的统一API也使得例如用另一个线性模型替换一个线性模型变得很容易。在这种意义上，`ScikitBacktesterClass`可以作为探索更多机器学习模型并将其应用于金融时间序列预测的起点。
- en: The quote at the beginning of the chapter from the *Terminator 2* movie from
    1991 is rather optimistic with regard to how fast and to what extent computers
    might be able to learn and acquire consciousness. No matter if you believe that
    computers will replace human beings in most areas of life or not, or if they indeed
    one day become self-aware, they have proven useful to human beings as supporting
    devices in almost any area of life. And algorithms like those used in machine
    learning, deep learning, or artificial intelligence hold at least the promise
    to let them become better algorithmic traders in the near future. A more detailed
    account of these topics and considerations is found in Hilpisch (2020).
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 本章开头引用了1991年电影《终结者2》中的一句话，对于计算机能够学习和获得意识的速度和程度持乐观态度。无论您是否相信计算机会在生活的大部分领域取代人类，或者它们是否有一天会真正意识到自我存在，它们已被证明对人类非常有用，几乎在生活的任何领域都作为支持设备存在。而像机器学习、深度学习或人工智能中使用的算法至少有望让它们在不久的将来成为更好的算法交易员。关于这些主题和考虑的更详细介绍可以在Hilpisch（2020）中找到。
- en: References and Further Resources
  id: totrans-424
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献和进一步资源
- en: 'The books by Guido and Müller (2016) and VanderPlas (2016) provide practical
    introductions to machine learning with Python and `scikit-learn`. The book by
    Hilpisch (2020) focuses exclusively on the application of algorithms for machine
    and deep learning to the problem of identifying statistical inefficiencies and
    exploiting economic inefficiencies through algorithmic trading:'
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: Guido和Müller（2016）以及VanderPlas（2016）的书提供了Python和`scikit-learn`进行机器学习的实用介绍。Hilpisch（2020）的书专注于将机器学习和深度学习算法应用于识别统计效率低下和通过算法交易利用经济效率低下的问题。
- en: 'Guido, Sarah, and Andreas Müller. 2016\. *Introduction to Machine Learning
    with Python: A Guide for Data Scientists*. Sebastopol: O’Reilly.'
  id: totrans-426
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Guido，Sarah和Andreas Müller。2016。《Python数据科学入门：数据科学家指南》。Sebastopol：O’Reilly。
- en: 'Hilpisch, Yves. 2020\. *Artificial Intelligence in Finance: A Python-Based
    Guide*. Sebastopol: O’Reilly.'
  id: totrans-427
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hilpisch，Yves。2020。《金融中的人工智能：基于Python的指南》。Sebastopol：O’Reilly。
- en: 'VanderPlas, Jake. 2016\. *Python Data Science Handbook: Essential Tools for
    Working with Data*. Sebastopol: O’Reilly.'
  id: totrans-428
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VanderPlas，Jake。2016。《Python数据科学手册：处理数据的基本工具》。Sebastopol：O’Reilly。
- en: 'The books by Hastie et al. (2008) and James et al. (2013) provide a thorough,
    mathematical overview of popular machine learning techniques and algorithms:'
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: Hastie等人（2008年）和James等人（2013年）的书提供了流行的机器学习技术和算法的彻底数学概述：
- en: 'Hastie, Trevor, Robert Tibshirani, and Jerome Friedman. 2008\. *The Elements
    of Statistical Learning*. 2nd ed. New York: Springer.'
  id: totrans-430
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hastie, Trevor, Robert Tibshirani, and Jerome Friedman. 2008\. *统计学习的要素*. 第2版。纽约：斯普林格出版社。
- en: 'James, Gareth, Daniela Witten, Trevor Hastie, and Robert Tibshirani. 2013\.
    *Introduction to Statistical Learning*. New York: Springer.'
  id: totrans-431
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: James, Gareth, Daniela Witten, Trevor Hastie, and Robert Tibshirani. 2013\.
    *统计学习导论*. 纽约：斯普林格出版社。
- en: 'For more background information on deep learning and `Keras`, refer to these
    books:'
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: 欲了解更多关于深度学习和`Keras`的背景信息，请参阅以下书籍：
- en: 'Chollet, Francois. 2017\. *Deep Learning with Python*. Shelter Island: Manning.'
  id: totrans-433
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chollet, Francois. 2017\. *Python深度学习*. Shelter Island：Manning。
- en: 'Goodfellow, Ian, Yoshua Bengio, and Aaron Courville. 2016\. *Deep Learning*.
    Cambridge: MIT Press. [*http://deeplearningbook.org*](http://deeplearningbook.org).'
  id: totrans-434
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Goodfellow, Ian, Yoshua Bengio, and Aaron Courville. 2016\. *深度学习*. 剑桥：MIT出版社。[*http://deeplearningbook.org*](http://deeplearningbook.org)。
- en: Python Scripts
  id: totrans-435
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python脚本
- en: This section presents Python scripts referenced and used in this chapter.
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: 本节展示了本章引用和使用的Python脚本。
- en: Linear Regression Backtesting Class
  id: totrans-437
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 线性回归回测类
- en: 'The following presents Python code with a class for the vectorized backtesting
    of strategies based on *linear regression* used for the prediction of the direction
    of market movements:'
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: 这里展示了一个基于*线性回归*的策略向量化回测的Python代码，用于预测市场运动方向：
- en: '[PRE40]'
  id: totrans-439
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Classification Algorithm Backtesting Class
  id: totrans-440
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分类算法回测类
- en: 'The following presents Python code with a class for the vectorized backtesting
    of strategies based on *logistic regression*, as a standard classification algorithm,
    used for the prediction of the direction of market movements:'
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: 这里展示了一个基于*逻辑回归*的策略向量化回测的Python代码，作为一种标准的分类算法，用于预测市场运动方向：
- en: '[PRE41]'
  id: totrans-442
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: ^([1](ch05.html#idm45785375631928-marker)) The books by Guido and Müller (2016)
    and VanderPlas (2016) provide practical, general introductions to machine learning
    with Python.
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: ^([1](ch05.html#idm45785375631928-marker)) Guido和Müller（2016年）以及VanderPlas（2016年）的书提供了Python机器学习的实用、通用介绍。
- en: ^([2](ch05.html#idm45785373157144-marker)) See, for example, the discussion
    in [The Tale of 10 Days](https://oreil.ly/KRH78).
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: ^([2](ch05.html#idm45785373157144-marker)) 例如，请参阅[10天的故事](https://oreil.ly/KRH78)的讨论。
- en: ^([3](ch05.html#idm45785368841160-marker)) For details, see [*https://oreil.ly/hOwsE*](https://oreil.ly/hOwsE).
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: ^([3](ch05.html#idm45785368841160-marker)) 详细信息，请参阅[*https://oreil.ly/hOwsE*](https://oreil.ly/hOwsE)。
- en: ^([4](ch05.html#idm45785368008552-marker)) For details, refer to [*https://keras.io/layers/core/*](https://keras.io/layers/core/).
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: ^([4](ch05.html#idm45785368008552-marker)) 详细信息，请参阅[*https://keras.io/layers/core/*](https://keras.io/layers/core/)。
