- en: Chapter 5\. Static Economy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A securities market model is viable if and only if there exists at least one
    equivalent martingale measure for it.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Harrison and Kreps (1979)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The central piece of the theory relating the no-arbitrage arguments with martingale
    theory is the so-called Fundamental Theorem of Asset Pricing.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Delbaen and Schachermayer (2006)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This chapter introduces more formalism to model a general static economy. Such
    an economy is characterized by an arbitrarily large, but still finite, state space.
    As before, the general static economy is analyzed at two relevant points in time
    only, for example, today and one year from now. Therefore, this chapter introduces
    one major generalization‚Äînamely with regard to the state space. The next chapter
    then generalizes the model economy further with regard to the number of relevant
    points in time. This enables one to also model dynamics.
  prefs: []
  type: TYPE_NORMAL
- en: The chapter makes use, as before, of linear algebra and probability theoretical
    concepts. Books that cover these topics well for the purposes of this chapter
    are Aleskerov et al. (2011) for linear algebra and Jacod and Protter (2004) for
    probability theory. A gentle introduction to general static economies and their
    analysis is found in Milne (1995). Pliska (1997) is a good introductory textbook
    on the topic that is both accessible and rigorous. Duffie (1988) is an advanced
    text that covers general static economies in greater detail, providing all the
    necessary tools from linear algebra and probability in a self-contained fashion.
  prefs: []
  type: TYPE_NORMAL
- en: 'Topics covered in this chapter are general discrete probability spaces, financial
    assets and contingent claims, market completeness, the two Fundamental Theorems
    of Asset Pricing, replication and arbitrage pricing, Black-Scholes-Merton (1973)
    and Merton (1976) option pricing, and representative agent pricing with Arrow-Debreu
    securities. The following table gives an overview of the topics in finance, mathematics,
    and Python found in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Finance | Mathematics | Python |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Uncertainty | State space, algebra, probability measure, probability space
    | `NumPy`, `ndarray`, `rng.normal` |'
  prefs: []
  type: TYPE_TB
- en: '| Financial asset, contingent claim | Random variable, expectation | `rng`,
    `mean()`, `np.dot` |'
  prefs: []
  type: TYPE_TB
- en: '| Market payoff matrix | Matrix | `ndarray`, `mean()`, `std()` |'
  prefs: []
  type: TYPE_TB
- en: '| Replication, arbitrage pricing | Solving systems of linear equations, dot
    product | `np.maximum`, `np.linalg.solve`, `np.dot` |'
  prefs: []
  type: TYPE_TB
- en: '| Market completeness | Rank, span, vector space | `ndarray`, `np.dot`, `np.linalg.matrix_rank`
    |'
  prefs: []
  type: TYPE_TB
- en: '| Martingale measure | Probability measure | `ndarray`, `scipy.optimize.minimize`
    |'
  prefs: []
  type: TYPE_TB
- en: '| Black-Scholes-Merton model (1973) | Geometric Brownian motion, normal distribution,
    Monte Carlo simulation, replication | `rng.standard_normal`, `np.linalg.lstsq`
    |'
  prefs: []
  type: TYPE_TB
- en: '| Merton (1976) model, log-normal jumps | Jump diffusion, Poisson distribution
    | `rng.poisson`, `np.linalg.lstsq` |'
  prefs: []
  type: TYPE_TB
- en: The major goal of this chapter is *generalization*. Almost all of the concepts
    and notions presented in this chapter have been introduced in the previous chapters.
    The enlargement of the state space makes the introduction of a bit more formalism
    necessary. However, on the Python side, the code is still as concise as experienced
    before. The benefits of this generalization should be clear. It is simply not
    realistic to model the possible future share price of, say, the Apple stock with
    two or three states only. It is much more realistic to assume that the share price
    can take on a value out of a possible 100, 500, or even more values. This is an
    important step toward a more realistic financial model.
  prefs: []
  type: TYPE_NORMAL
- en: Uncertainty
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Consider an economy with a *general, discrete state space* <math alttext="normal
    upper Omega"><mi>Œ©</mi></math> with a finite number of elements <math alttext="StartAbsoluteValue
    normal upper Omega EndAbsoluteValue less-than normal infinity"><mrow><mfenced
    open="|" close="|"><mi>Œ©</mi></mfenced> <mo><</mo> <mi>‚àû</mi></mrow></math> .
    An *algebra* <math alttext="script upper F"><mi>‚Ñ±</mi></math> in <math alttext="normal
    upper Omega"><mi>Œ©</mi></math> is a family of sets for which the following statements
    hold true:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="normal upper Omega element-of script upper F"><mrow><mi>Œ©</mi>
    <mo>‚àà</mo> <mi>‚Ñ±</mi></mrow></math>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <math alttext="double-struck upper E element-of script upper F right double
    arrow double-struck upper E Superscript c Baseline element-of script upper F"><mrow><mi>ùîº</mi>
    <mo>‚àà</mo> <mi>‚Ñ±</mi> <mo>‚áí</mo> <msup><mi>ùîº</mi> <mi>c</mi></msup> <mo>‚àà</mo>
    <mi>‚Ñ±</mi></mrow></math>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <math alttext="double-struck upper E 1 comma double-struck upper E 2 comma period
    period period comma double-struck upper E Subscript upper I Baseline element-of
    script upper F right double arrow union double-struck upper E Subscript i Baseline
    element-of script upper F"><mrow><msub><mi>ùîº</mi> <mn>1</mn></msub> <mo>,</mo>
    <msub><mi>ùîº</mi> <mn>2</mn></msub> <mo>,</mo> <mo>.</mo> <mo>.</mo> <mo>.</mo>
    <mo>,</mo> <msub><mi>ùîº</mi> <mi>I</mi></msub> <mo>‚àà</mo> <mi>‚Ñ±</mi> <mo>‚áí</mo>
    <msubsup><mo>‚à™</mo> <mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow> <mi>I</mi></msubsup>
    <msub><mi>ùîº</mi> <mi>i</mi></msub> <mo>‚àà</mo> <mi>‚Ñ±</mi></mrow></math>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <math alttext="double-struck upper E Superscript c"><msup><mi>ùîº</mi> <mi>c</mi></msup></math>
    denotes the complement of a set <math alttext="double-struck upper E"><mi>ùîº</mi></math>
    . The power set <math alttext="normal script upper P left-parenthesis normal upper
    Omega right-parenthesis"><mrow><mi>‚Ñò</mi> <mo>(</mo> <mi>Œ©</mi> <mo>)</mo></mrow></math>
    is the largest algebra, while the set <math alttext="script upper F equals StartSet
    normal empty-set comma normal upper Omega EndSet"><mrow><mi>‚Ñ±</mi> <mo>=</mo>
    <mo>{</mo> <mi>‚àÖ</mi> <mo>,</mo> <mi>Œ©</mi> <mo>}</mo></mrow></math> is the smallest
    algebra in <math alttext="normal upper Omega"><mi>Œ©</mi></math> . An algebra is
    a model for *observable events* in an economy. In this context, a single state
    of the economy <math alttext="omega element-of normal upper Omega"><mrow><mi>œâ</mi>
    <mo>‚àà</mo> <mi>Œ©</mi></mrow></math> can be interpreted as an *atomic event*.
  prefs: []
  type: TYPE_NORMAL
- en: A *probability* assigns a real number <math alttext="0 less-than-or-equal-to
    p Subscript omega Baseline identical-to upper P left-parenthesis StartSet omega
    EndSet right-parenthesis less-than-or-equal-to 1"><mrow><mn>0</mn> <mo>‚â§</mo>
    <msub><mi>p</mi> <mi>œâ</mi></msub> <mo>‚â°</mo> <mi>P</mi> <mrow><mo>(</mo> <mrow><mo>{</mo>
    <mi>œâ</mi> <mo>}</mo></mrow> <mo>)</mo></mrow> <mo>‚â§</mo> <mn>1</mn></mrow></math>
    to a state <math alttext="omega element-of normal upper Omega"><mrow><mi>œâ</mi>
    <mo>‚àà</mo> <mi>Œ©</mi></mrow></math> or a real number <math alttext="0 less-than-or-equal-to
    upper P left-parenthesis double-struck upper E double-struck right-parenthesis
    less-than-or-equal-to 1"><mrow><mn>0</mn> <mo>‚â§</mo> <mi>P</mi> <mo>(</mo> <mi>ùîº</mi>
    <mo>)</mo> <mo>‚â§</mo> <mn>1</mn></mrow></math> to an event <math alttext="double-struck
    upper E element-of script upper F"><mrow><mi>ùîº</mi> <mo>‚àà</mo> <mi>‚Ñ±</mi></mrow></math>
    . If the probabilities for all states are known, one has <math alttext="upper
    P left-parenthesis double-struck upper E right-parenthesis equals sigma-summation
    Underscript omega element-of double-struck upper E Endscripts p Subscript omega"><mrow><mi>P</mi>
    <mrow><mo>(</mo> <mi>ùîº</mi> <mo>)</mo></mrow> <mo>=</mo> <msub><mo>‚àë</mo> <mrow><mi>œâ</mi><mo>‚àà</mo><mi>ùîº</mi></mrow></msub>
    <msub><mi>p</mi> <mi>œâ</mi></msub></mrow></math> .
  prefs: []
  type: TYPE_NORMAL
- en: 'A *probability measure* <math alttext="upper P colon script upper F right-arrow
    left-bracket 0 comma 1 right-bracket"><mrow><mi>P</mi> <mo>:</mo> <mi>‚Ñ±</mi> <mo>‚Üí</mo>
    <mo>[</mo> <mn>0</mn> <mo>,</mo> <mn>1</mn> <mo>]</mo></mrow></math> is characterized
    by the following characteristics:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="for-all double-struck upper E element-of script upper F colon
    upper P left-parenthesis double-struck upper E right-parenthesis greater-than-or-equal-to
    0"><mrow><mo>‚àÄ</mo> <mi>ùîº</mi> <mo>‚àà</mo> <mi>‚Ñ±</mi> <mo>:</mo> <mi>P</mi> <mo>(</mo>
    <mi>ùîº</mi> <mo>)</mo> <mo>‚â•</mo> <mn>0</mn></mrow></math>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <math alttext="upper P left-parenthesis union double-struck upper E Subscript
    i Baseline right-parenthesis equals sigma-summation Underscript i equals 1 Overscript
    upper I Endscripts double-struck upper E Subscript i Baseline for disjoint sets
    double-struck upper E Subscript i Baseline element-of script upper F"><mrow><mi>P</mi>
    <mfenced separators="" open="(" close=")"><msubsup><mo>‚à™</mo> <mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow>
    <mi>I</mi></msubsup> <msub><mi>ùîº</mi> <mi>i</mi></msub></mfenced> <mo>=</mo> <msubsup><mo>‚àë</mo>
    <mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow> <mi>I</mi></msubsup> <msub><mi>ùîº</mi>
    <mi>i</mi></msub> <mtext>for</mtext> <mtext>disjoint</mtext> <mtext>sets</mtext>
    <msub><mi>ùîº</mi> <mi>i</mi></msub> <mo>‚àà</mo> <mi>‚Ñ±</mi></mrow></math>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <math alttext="upper P left-parenthesis normal upper Omega right-parenthesis
    equals 1"><mrow><mi>P</mi> <mo>(</mo> <mi>Œ©</mi> <mo>)</mo> <mo>=</mo> <mn>1</mn></mrow></math>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Together the three elements <math alttext="StartSet normal upper Omega comma
    script upper F comma upper P EndSet"><mrow><mo>{</mo> <mi>Œ©</mi> <mo>,</mo> <mi>‚Ñ±</mi>
    <mo>,</mo> <mi>P</mi> <mo>}</mo></mrow></math> form a *probability space*. A probability
    space is the formal representation of *uncertainty* in the model economy.
  prefs: []
  type: TYPE_NORMAL
- en: Random Variables
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Given a probability space <math alttext="StartSet normal upper Omega comma
    script upper F comma upper P EndSet"><mrow><mo>{</mo> <mi>Œ©</mi> <mo>,</mo> <mi>‚Ñ±</mi>
    <mo>,</mo> <mi>P</mi> <mo>}</mo></mrow></math> , a *random variable* is a <math
    alttext="script upper F minus"><mrow><mi>‚Ñ±</mi> <mo>-</mo></mrow></math> measurable
    function:'
  prefs: []
  type: TYPE_NORMAL
- en: <math mode="display"><mrow><mi>S</mi> <mo>:</mo> <mi>Œ©</mi> <mo>‚Üí</mo> <msub><mi>‚Ñù</mi>
    <mrow><mn>‚â•0</mn></mrow></msub> <mo>,</mo> <mi>œâ</mi> <mo>‚Ü¶</mo> <mi>S</mi> <mrow><mo>(</mo>
    <mi>œâ</mi> <mo>)</mo></mrow></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: '<math alttext="script upper F minus"><mrow><mi>‚Ñ±</mi> <mo>-</mo></mrow></math>
    measurability implies that for each <math alttext="double-struck upper E element-of
    left-brace left-bracket a comma b left-bracket colon a comma b element-of double-struck
    upper R comma a less-than b right-brace"><mrow><mi>ùîº</mi> <mo>‚àà</mo> <mo>{</mo>
    <mo>[</mo> <mi>a</mi> <mo>,</mo> <mi>b</mi> <mo>[</mo> <mo>:</mo> <mi>a</mi> <mo>,</mo>
    <mi>b</mi> <mo>‚àà</mo> <mi>‚Ñù</mi> <mo>,</mo> <mi>a</mi> <mo><</mo> <mi>b</mi> <mo>}</mo></mrow></math>
    , one has:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="upper S Superscript negative 1 Baseline left-parenthesis double-struck
    upper E right-parenthesis identical-to StartSet omega element-of normal upper
    Omega colon upper S left-parenthesis omega right-parenthesis element-of double-struck
    upper E EndSet element-of script upper F" display="block"><mrow><msup><mi>S</mi>
    <mrow><mo>-</mo><mn>1</mn></mrow></msup> <mrow><mo>(</mo> <mi>ùîº</mi> <mo>)</mo></mrow>
    <mo>‚â°</mo> <mrow><mo>{</mo> <mi>œâ</mi> <mo>‚àà</mo> <mi>Œ©</mi> <mo>:</mo> <mi>S</mi>
    <mrow><mo>(</mo> <mi>œâ</mi> <mo>)</mo></mrow> <mo>‚àà</mo> <mi>ùîº</mi> <mo>}</mo></mrow>
    <mo>‚àà</mo> <mi>‚Ñ±</mi></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'If <math alttext="script upper F identical-to normal script upper P left-parenthesis
    normal upper Omega right-parenthesis"><mrow><mi>‚Ñ±</mi> <mo>‚â°</mo> <mi>‚Ñò</mi> <mo>(</mo>
    <mi>Œ©</mi> <mo>)</mo></mrow></math> , the *expectation* of a random variable is
    defined by:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="bold upper E Superscript upper P Baseline left-parenthesis upper
    S right-parenthesis equals sigma-summation Underscript omega element-of normal
    upper Omega Endscripts upper P left-parenthesis omega right-parenthesis dot upper
    S left-parenthesis omega right-parenthesis" display="block"><mrow><msup><mi>ùêÑ</mi>
    <mi>P</mi></msup> <mrow><mo>(</mo> <mi>S</mi> <mo>)</mo></mrow> <mo>=</mo> <munder><mo>‚àë</mo>
    <mrow><mi>œâ</mi><mo>‚àà</mo><mi>Œ©</mi></mrow></munder> <mi>P</mi> <mrow><mo>(</mo>
    <mi>œâ</mi> <mo>)</mo></mrow> <mo>¬∑</mo> <mi>S</mi> <mrow><mo>(</mo> <mi>œâ</mi>
    <mo>)</mo></mrow></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'Otherwise, it holds:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="bold upper E Superscript upper P Baseline left-parenthesis upper
    S right-parenthesis equals sigma-summation Underscript double-struck upper E element-of
    script upper F Endscripts upper P left-parenthesis double-struck upper E right-parenthesis
    dot upper S left-parenthesis double-struck upper E right-parenthesis" display="block"><mrow><msup><mi>ùêÑ</mi>
    <mi>P</mi></msup> <mrow><mo>(</mo> <mi>S</mi> <mo>)</mo></mrow> <mo>=</mo> <munder><mo>‚àë</mo>
    <mrow><mi>ùîº</mi><mo>‚àà</mo><mi>‚Ñ±</mi></mrow></munder> <mi>P</mi> <mrow><mo>(</mo>
    <mi>ùîº</mi> <mo>)</mo></mrow> <mo>¬∑</mo> <mi>S</mi> <mrow><mo>(</mo> <mi>ùîº</mi>
    <mo>)</mo></mrow></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: Numerical Examples
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To make a concrete example, assume a state space of <math alttext="normal upper
    Omega equals StartSet omega 1 comma omega 2 comma omega 3 comma omega 4 EndSet"><mrow><mi>Œ©</mi>
    <mo>=</mo> <mo>{</mo> <msub><mi>œâ</mi> <mn>1</mn></msub> <mo>,</mo> <msub><mi>œâ</mi>
    <mn>2</mn></msub> <mo>,</mo> <msub><mi>œâ</mi> <mn>3</mn></msub> <mo>,</mo> <msub><mi>œâ</mi>
    <mn>4</mn></msub> <mo>}</mo></mrow></math> . Furthermore, assume that an algebra
    with <math alttext="script upper F equals StartSet normal empty-set comma StartSet
    omega 1 comma omega 2 EndSet comma StartSet omega 3 comma omega 4 EndSet comma
    normal upper Omega EndSet"><mrow><mi>‚Ñ±</mi> <mo>=</mo> <mo>{</mo> <mi>‚àÖ</mi> <mo>,</mo>
    <mrow><mo>{</mo> <msub><mi>œâ</mi> <mn>1</mn></msub> <mo>,</mo> <msub><mi>œâ</mi>
    <mn>2</mn></msub> <mo>}</mo></mrow> <mo>,</mo> <mrow><mo>{</mo> <msub><mi>œâ</mi>
    <mn>3</mn></msub> <mo>,</mo> <msub><mi>œâ</mi> <mn>4</mn></msub> <mo>}</mo></mrow>
    <mo>,</mo> <mi>Œ©</mi> <mo>}</mo></mrow></math> is given. It is easily verified
    that this set satisfies the three characteristics of an algebra in <math alttext="normal
    upper Omega"><mi>Œ©</mi></math> . The probability measure shall be defined by <math
    alttext="upper P left-parenthesis StartSet omega 1 comma omega 2 EndSet right-parenthesis
    equals upper P left-parenthesis StartSet omega 3 comma omega 4 EndSet right-parenthesis
    equals one-half"><mrow><mi>P</mi> <mrow><mo>(</mo> <mrow><mo>{</mo> <msub><mi>œâ</mi>
    <mn>1</mn></msub> <mo>,</mo> <msub><mi>œâ</mi> <mn>2</mn></msub> <mo>}</mo></mrow>
    <mo>)</mo></mrow> <mo>=</mo> <mi>P</mi> <mrow><mo>(</mo> <mrow><mo>{</mo> <msub><mi>œâ</mi>
    <mn>3</mn></msub> <mo>,</mo> <msub><mi>œâ</mi> <mn>4</mn></msub> <mo>}</mo></mrow>
    <mo>)</mo></mrow> <mo>=</mo> <mfrac><mn>1</mn> <mn>2</mn></mfrac></mrow></math>
    . Again, it is easy to see that <math alttext="upper P"><mi>P</mi></math> is indeed
    a probability measure on <math alttext="script upper F"><mi>‚Ñ±</mi></math> under
    these assumptions.
  prefs: []
  type: TYPE_NORMAL
- en: Consider now a function <math alttext="upper T"><mi>T</mi></math> with <math
    alttext="upper T left-parenthesis omega 1 right-parenthesis equals 1 comma upper
    T left-parenthesis omega 2 right-parenthesis equals 2 comma upper T left-parenthesis
    omega 3 right-parenthesis equals 3"><mrow><mi>T</mi> <mrow><mo>(</mo> <msub><mi>œâ</mi>
    <mn>1</mn></msub> <mo>)</mo></mrow> <mo>=</mo> <mn>1</mn> <mo>,</mo> <mi>T</mi>
    <mrow><mo>(</mo> <msub><mi>œâ</mi> <mn>2</mn></msub> <mo>)</mo></mrow> <mo>=</mo>
    <mn>2</mn> <mo>,</mo> <mi>T</mi> <mrow><mo>(</mo> <msub><mi>œâ</mi> <mn>3</mn></msub>
    <mo>)</mo></mrow> <mo>=</mo> <mn>3</mn></mrow></math> , and <math alttext="upper
    T left-parenthesis omega 4 right-parenthesis equals 4"><mrow><mi>T</mi> <mo>(</mo>
    <msub><mi>œâ</mi> <mn>4</mn></msub> <mo>)</mo> <mo>=</mo> <mn>4</mn></mrow></math>
    . This function is *not* a random variable defined on the probability space since
    the algebra <math alttext="script upper F"><mi>‚Ñ±</mi></math> does not distinguish,
    for example, between <math alttext="omega 1"><msub><mi>œâ</mi> <mn>1</mn></msub></math>
    and <math alttext="omega 2"><msub><mi>œâ</mi> <mn>2</mn></msub></math> ‚Äîthey are
    subsumed by the set <math alttext="StartSet omega 1 comma omega 2 EndSet"><mrow><mo>{</mo>
    <msub><mi>œâ</mi> <mn>1</mn></msub> <mo>,</mo> <msub><mi>œâ</mi> <mn>2</mn></msub>
    <mo>}</mo></mrow></math> . One could say that the algebra is ‚Äúnot granular‚Äù enough.
  prefs: []
  type: TYPE_NORMAL
- en: 'Consider another function <math alttext="upper S"><mi>S</mi></math> with <math
    alttext="upper S left-parenthesis omega 1 right-parenthesis equals 20 comma upper
    S left-parenthesis omega 2 right-parenthesis equals 20 comma upper S left-parenthesis
    omega 3 right-parenthesis equals 5"><mrow><mi>S</mi> <mrow><mo>(</mo> <msub><mi>œâ</mi>
    <mn>1</mn></msub> <mo>)</mo></mrow> <mo>=</mo> <mn>20</mn> <mo>,</mo> <mi>S</mi>
    <mrow><mo>(</mo> <msub><mi>œâ</mi> <mn>2</mn></msub> <mo>)</mo></mrow> <mo>=</mo>
    <mn>20</mn> <mo>,</mo> <mi>S</mi> <mrow><mo>(</mo> <msub><mi>œâ</mi> <mn>3</mn></msub>
    <mo>)</mo></mrow> <mo>=</mo> <mn>5</mn></mrow></math> , and <math alttext="upper
    S left-parenthesis omega 4 right-parenthesis equals 5"><mrow><mi>S</mi> <mo>(</mo>
    <msub><mi>œâ</mi> <mn>4</mn></msub> <mo>)</mo> <mo>=</mo> <mn>5</mn></mrow></math>
    . This is now a random variable defined on the probability space with an expectation
    of:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="bold upper E Superscript upper P Baseline left-parenthesis upper
    S right-parenthesis equals sigma-summation Underscript double-struck upper E element-of
    script upper F Endscripts upper P left-parenthesis double-struck upper E right-parenthesis
    dot upper S left-parenthesis double-struck upper E right-parenthesis equals one-half
    dot 20 plus one-half dot 5 equals 12.5" display="block"><mrow><msup><mi>ùêÑ</mi>
    <mi>P</mi></msup> <mrow><mo>(</mo> <mi>S</mi> <mo>)</mo></mrow> <mo>=</mo> <munder><mo>‚àë</mo>
    <mrow><mi>ùîº</mi><mo>‚àà</mo><mi>‚Ñ±</mi></mrow></munder> <mi>P</mi> <mrow><mo>(</mo>
    <mi>ùîº</mi> <mo>)</mo></mrow> <mo>¬∑</mo> <mi>S</mi> <mrow><mo>(</mo> <mi>ùîº</mi>
    <mo>)</mo></mrow> <mo>=</mo> <mfrac><mn>1</mn> <mn>2</mn></mfrac> <mo>¬∑</mo> <mn>20</mn>
    <mo>+</mo> <mfrac><mn>1</mn> <mn>2</mn></mfrac> <mo>¬∑</mo> <mn>5</mn> <mo>=</mo>
    <mn>12</mn> <mo>.</mo> <mn>5</mn></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: In general, however, it will be assumed that <math alttext="script upper F identical-to
    normal script upper P left-parenthesis normal upper Omega right-parenthesis"><mrow><mi>‚Ñ±</mi>
    <mo>‚â°</mo> <mi>‚Ñò</mi> <mo>(</mo> <mi>Œ©</mi> <mo>)</mo></mrow></math> , with <math
    alttext="upper P"><mi>P</mi></math> accordingly defined such that the function
    (random variable) <math alttext="upper T"><mi>T</mi></math> , for example, also
    is <math alttext="script upper F minus"><mrow><mi>‚Ñ±</mi> <mo>-</mo></mrow></math>
    measurable with the expectation properly defined.
  prefs: []
  type: TYPE_NORMAL
- en: 'With Python, it is efficient to illustrate cases in which <math alttext="normal
    upper Omega"><mi>Œ©</mi></math> is much larger. The following Python code assumes
    equal probability for all possible states:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[![1](Images/1.png)](ch05_split_000.xhtml#co_static_economy_CO1-1)'
  prefs: []
  type: TYPE_NORMAL
- en: Fixes the seed value for the `NumPy` random number generator for reproducibility
    of the results.
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](ch05_split_000.xhtml#co_static_economy_CO1-2)'
  prefs: []
  type: TYPE_NORMAL
- en: Fixes the number of states in the state space (for the simulations to follow).
  prefs: []
  type: TYPE_NORMAL
- en: '[![3](Images/3.png)](ch05_split_000.xhtml#co_static_economy_CO1-3)'
  prefs: []
  type: TYPE_NORMAL
- en: Draws `I` normally distributed (pseudo-)random numbers with mean `loc` and standard
    deviation `scale`.
  prefs: []
  type: TYPE_NORMAL
- en: '[![4](Images/4.png)](ch05_split_000.xhtml#co_static_economy_CO1-5)'
  prefs: []
  type: TYPE_NORMAL
- en: Calculates the expectation (mean value) assuming an equal probability for every
    simulated value (state).
  prefs: []
  type: TYPE_NORMAL
- en: 'Any other probability measure can, of course, also be chosen:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[![1](Images/1.png)](ch05_split_000.xhtml#co_static_economy_CO2-1)'
  prefs: []
  type: TYPE_NORMAL
- en: Draws uniformly distributed random numbers between 0 and 1.
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](ch05_split_000.xhtml#co_static_economy_CO2-2)'
  prefs: []
  type: TYPE_NORMAL
- en: Normalizes the values in the `ndarray` object to sum up to 1.
  prefs: []
  type: TYPE_NORMAL
- en: '[![3](Images/3.png)](ch05_split_000.xhtml#co_static_economy_CO2-5)'
  prefs: []
  type: TYPE_NORMAL
- en: The resulting weights according to the random probability measure.
  prefs: []
  type: TYPE_NORMAL
- en: '[![4](Images/4.png)](ch05_split_000.xhtml#co_static_economy_CO2-6)'
  prefs: []
  type: TYPE_NORMAL
- en: The expectation as the dot product of the probability vector and the vector
    representing the random variable.
  prefs: []
  type: TYPE_NORMAL
- en: Mathematical Techniques
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In addition to linear algebra, traditional probability theory plays a central
    role in discrete finance. It allows us to capture and analyze uncertainty and,
    more specifically, risk in a systematic, well-established way. When moving from
    discrete finance models to continuous ones, more advanced approaches, such as
    stochastic calculus, are required. For discrete finance models, standard linear
    algebra and probability theory prove powerful enough in most cases. For more details
    on discrete finance, refer to Pliska (1997).
  prefs: []
  type: TYPE_NORMAL
- en: Financial Assets
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Consider an economy at two different dates <math alttext="t element-of StartSet
    0 comma 1 EndSet"><mrow><mi>t</mi> <mo>‚àà</mo> <mo>{</mo> <mn>0</mn> <mo>,</mo>
    <mn>1</mn> <mo>}</mo></mrow></math> , today and one year from now (or any other
    time period in the future to this end). Assume that a probability space <math
    alttext="StartSet normal upper Omega comma script upper F identical-to normal
    script upper P left-parenthesis normal upper Omega right-parenthesis comma upper
    P EndSet"><mrow><mo>{</mo> <mi>Œ©</mi> <mo>,</mo> <mi>‚Ñ±</mi> <mo>‚â°</mo> <mi>‚Ñò</mi>
    <mo>(</mo> <mi>Œ©</mi> <mo>)</mo> <mo>,</mo> <mi>P</mi> <mo>}</mo></mrow></math>
    is given that represents *uncertainty* about the future in the model economy,
    with <math alttext="StartAbsoluteValue normal upper Omega EndAbsoluteValue identical-to
    upper I"><mrow><mfenced open="|" close="|"><mi>Œ©</mi></mfenced> <mo>‚â°</mo> <mi>I</mi></mrow></math>
    possible future states. In this case, <math alttext="normal upper Omega equals
    StartSet omega 1 comma omega 2 comma period period period comma omega Subscript
    upper I Baseline EndSet"><mrow><mi>Œ©</mi> <mo>=</mo> <mo>{</mo> <msub><mi>œâ</mi>
    <mn>1</mn></msub> <mo>,</mo> <msub><mi>œâ</mi> <mn>2</mn></msub> <mo>,</mo> <mo>.</mo>
    <mo>.</mo> <mo>.</mo> <mo>,</mo> <msub><mi>œâ</mi> <mi>I</mi></msub> <mo>}</mo></mrow></math>
    .
  prefs: []
  type: TYPE_NORMAL
- en: 'A traded *financial asset* is represented by a price process <math alttext="upper
    S equals left-parenthesis upper S 0 comma upper S 1 right-parenthesis"><mrow><mi>S</mi>
    <mo>=</mo> <mo>(</mo> <msub><mi>S</mi> <mn>0</mn></msub> <mo>,</mo> <msub><mi>S</mi>
    <mn>1</mn></msub> <mo>)</mo></mrow></math> , where the price today is fixed <math><mrow><msub><mi>S</mi>
    <mn>0</mn></msub> <mo>‚àà</mo><msub><mi>‚Ñù</mi> <mrow><mn>>0</mn></mrow></msub></mrow></math>
    , and the price in one year, <math><mrow><msub><mi>S</mi> <mn>1</mn></msub> <mo>:</mo><mi>Œ©</mi><mo>‚Üí</mo><msub><mi>‚Ñù</mi>
    <mrow><mn>‚â•0</mn></mrow></msub></mrow></math> , is a random variable that is <math
    alttext="script upper F minus"><mrow><mi>‚Ñ±</mi> <mo>-</mo></mrow></math> measurable.
    Formally, the future price vector of a traded financial asset is a vector with
    <math alttext="upper I"><mi>I</mi></math> elements:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="upper S 1 equals Start 4 By 1 Matrix 1st Row  upper S 1 left-parenthesis
    omega 1 right-parenthesis 2nd Row  upper S 1 left-parenthesis omega 2 right-parenthesis
    3rd Row  period period period 4th Row  upper S 1 left-parenthesis omega Subscript
    upper I Baseline right-parenthesis EndMatrix" display="block"><mrow><msub><mi>S</mi>
    <mn>1</mn></msub> <mo>=</mo> <mfenced open="(" close=")"><mtable><mtr><mtd><mrow><msub><mi>S</mi>
    <mn>1</mn></msub> <mrow><mo>(</mo> <msub><mi>œâ</mi> <mn>1</mn></msub> <mo>)</mo></mrow></mrow></mtd></mtr>
    <mtr><mtd><mrow><msub><mi>S</mi> <mn>1</mn></msub> <mrow><mo>(</mo> <msub><mi>œâ</mi>
    <mn>2</mn></msub> <mo>)</mo></mrow></mrow></mtd></mtr> <mtr><mtd><mrow><mo>.</mo>
    <mo>.</mo> <mo>.</mo></mrow></mtd></mtr> <mtr><mtd><mrow><msub><mi>S</mi> <mn>1</mn></msub>
    <mrow><mo>(</mo> <msub><mi>œâ</mi> <mi>I</mi></msub> <mo>)</mo></mrow></mrow></mtd></mtr></mtable></mfenced></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'If there are multiple financial assets traded, say <math alttext="upper K greater-than
    1"><mrow><mi>K</mi> <mo>></mo> <mn>1</mn></mrow></math> , they are represented
    by multiple price processes, <math alttext="upper S Superscript k Baseline equals
    left-parenthesis upper S 0 Superscript k Baseline comma upper S 1 Superscript
    k Baseline right-parenthesis comma k equals 1 comma 2 comma period period period
    comma upper K"><mrow><msup><mi>S</mi> <mi>k</mi></msup> <mo>=</mo> <mrow><mo>(</mo>
    <msubsup><mi>S</mi> <mn>0</mn> <mi>k</mi></msubsup> <mo>,</mo> <msubsup><mi>S</mi>
    <mn>1</mn> <mi>k</mi></msubsup> <mo>)</mo></mrow> <mo>,</mo> <mi>k</mi> <mo>=</mo>
    <mn>1</mn> <mo>,</mo> <mn>2</mn> <mo>,</mo> <mo>.</mo> <mo>.</mo> <mo>.</mo> <mo>,</mo>
    <mi>K</mi></mrow></math> . The *market payoff matrix* is then composed of the
    future price vectors of the traded financial assets:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="script upper M equals Start 4 By 4 Matrix 1st Row 1st Column
    upper S 1 Superscript 1 Baseline left-parenthesis omega 1 right-parenthesis 2nd
    Column upper S 1 squared left-parenthesis omega 1 right-parenthesis 3rd Column
    period period period 4th Column upper S 1 Superscript upper K Baseline left-parenthesis
    omega 1 right-parenthesis 2nd Row 1st Column upper S 1 Superscript 1 Baseline
    left-parenthesis omega 2 right-parenthesis 2nd Column upper S 1 squared left-parenthesis
    omega 2 right-parenthesis 3rd Column period period period 4th Column upper S 1
    Superscript upper K Baseline left-parenthesis omega 2 right-parenthesis 3rd Row
    1st Column period period period 2nd Column period period period 3rd Column period
    period period 4th Column period period period 4th Row 1st Column upper S 1 Superscript
    1 Baseline left-parenthesis omega 3 right-parenthesis 2nd Column upper S 1 squared
    left-parenthesis omega 3 right-parenthesis 3rd Column period period period 4th
    Column upper S 1 Superscript upper K Baseline left-parenthesis omega 3 right-parenthesis
    EndMatrix" display="block"><mrow><mi>‚Ñ≥</mi> <mo>=</mo> <mfenced open="(" close=")"><mtable><mtr><mtd><mrow><msubsup><mi>S</mi>
    <mn>1</mn> <mn>1</mn></msubsup> <mrow><mo>(</mo> <msub><mi>œâ</mi> <mn>1</mn></msub>
    <mo>)</mo></mrow></mrow></mtd> <mtd><mrow><msubsup><mi>S</mi> <mn>1</mn> <mn>2</mn></msubsup>
    <mrow><mo>(</mo> <msub><mi>œâ</mi> <mn>1</mn></msub> <mo>)</mo></mrow></mrow></mtd>
    <mtd><mrow><mo>.</mo> <mo>.</mo> <mo>.</mo></mrow></mtd> <mtd><mrow><msubsup><mi>S</mi>
    <mn>1</mn> <mi>K</mi></msubsup> <mrow><mo>(</mo> <msub><mi>œâ</mi> <mn>1</mn></msub>
    <mo>)</mo></mrow></mrow></mtd></mtr> <mtr><mtd><mrow><msubsup><mi>S</mi> <mn>1</mn>
    <mn>1</mn></msubsup> <mrow><mo>(</mo> <msub><mi>œâ</mi> <mn>2</mn></msub> <mo>)</mo></mrow></mrow></mtd>
    <mtd><mrow><msubsup><mi>S</mi> <mn>1</mn> <mn>2</mn></msubsup> <mrow><mo>(</mo>
    <msub><mi>œâ</mi> <mn>2</mn></msub> <mo>)</mo></mrow></mrow></mtd> <mtd><mrow><mo>.</mo>
    <mo>.</mo> <mo>.</mo></mrow></mtd> <mtd><mrow><msubsup><mi>S</mi> <mn>1</mn> <mi>K</mi></msubsup>
    <mrow><mo>(</mo> <msub><mi>œâ</mi> <mn>2</mn></msub> <mo>)</mo></mrow></mrow></mtd></mtr>
    <mtr><mtd><mrow><mo>.</mo> <mo>.</mo> <mo>.</mo></mrow></mtd> <mtd><mrow><mo>.</mo>
    <mo>.</mo> <mo>.</mo></mrow></mtd> <mtd><mrow><mo>.</mo> <mo>.</mo> <mo>.</mo></mrow></mtd>
    <mtd><mrow><mo>.</mo> <mo>.</mo> <mo>.</mo></mrow></mtd></mtr> <mtr><mtd><mrow><msubsup><mi>S</mi>
    <mn>1</mn> <mn>1</mn></msubsup> <mrow><mo>(</mo> <msub><mi>œâ</mi> <mn>3</mn></msub>
    <mo>)</mo></mrow></mrow></mtd> <mtd><mrow><msubsup><mi>S</mi> <mn>1</mn> <mn>2</mn></msubsup>
    <mrow><mo>(</mo> <msub><mi>œâ</mi> <mn>3</mn></msub> <mo>)</mo></mrow></mrow></mtd>
    <mtd><mrow><mo>.</mo> <mo>.</mo> <mo>.</mo></mrow></mtd> <mtd><mrow><msubsup><mi>S</mi>
    <mn>1</mn> <mi>K</mi></msubsup> <mrow><mo>(</mo> <msub><mi>œâ</mi> <mn>3</mn></msub>
    <mo>)</mo></mrow></mrow></mtd></mtr></mtable></mfenced></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: Denote the *set of traded financial assets* by <math alttext="script upper S
    identical-to left-parenthesis upper S Superscript 1 Baseline comma upper S squared
    comma period period period comma upper S Superscript upper K Baseline right-parenthesis"><mrow><mi>ùíÆ</mi>
    <mo>‚â°</mo> <mo>(</mo> <msup><mi>S</mi> <mn>1</mn></msup> <mo>,</mo> <msup><mi>S</mi>
    <mn>2</mn></msup> <mo>,</mo> <mo>.</mo> <mo>.</mo> <mo>.</mo> <mo>,</mo> <msup><mi>S</mi>
    <mi>K</mi></msup> <mo>)</mo></mrow></math> . The *static model economy* can then
    be summarized by
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="script upper E equals left-parenthesis StartSet normal upper
    Omega comma script upper F comma upper P EndSet comma script upper S right-parenthesis"
    display="block"><mrow><mi>‚Ñ∞</mi> <mo>=</mo> <mo>(</mo> <mo>{</mo> <mi>Œ©</mi> <mo>,</mo>
    <mi>‚Ñ±</mi> <mo>,</mo> <mi>P</mi> <mo>}</mo> <mo>,</mo> <mi>ùíÆ</mi> <mo>)</mo></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: where it is usually assumed that <math alttext="script upper F identical-to
    normal script upper P left-parenthesis normal upper Omega right-parenthesis"><mrow><mi>‚Ñ±</mi>
    <mo>‚â°</mo> <mi>‚Ñò</mi> <mo>(</mo> <mi>Œ©</mi> <mo>)</mo></mrow></math> .
  prefs: []
  type: TYPE_NORMAL
- en: 'Fixing the number of possible future states to five <math alttext="normal upper
    Omega equals StartSet omega 1 comma period period period comma omega 5 EndSet"><mrow><mi>Œ©</mi>
    <mo>=</mo> <mo>{</mo> <msub><mi>œâ</mi> <mn>1</mn></msub> <mo>,</mo> <mo>.</mo>
    <mo>.</mo> <mo>.</mo> <mo>,</mo> <msub><mi>œâ</mi> <mn>5</mn></msub> <mo>}</mo></mrow></math>
    with equal probability <math alttext="for-all omega element-of normal upper Omega
    colon upper P left-parenthesis omega right-parenthesis equals one-fifth"><mrow><mo>‚àÄ</mo>
    <mi>œâ</mi> <mo>‚àà</mo> <mi>Œ©</mi> <mo>:</mo> <mi>P</mi> <mrow><mo>(</mo> <mi>œâ</mi>
    <mo>)</mo></mrow> <mo>=</mo> <mfrac><mn>1</mn> <mn>5</mn></mfrac></mrow></math>
    and the number of traded financial assets to five as well, a numerical example
    in Python illustrates such a static model economy:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[![1](Images/1.png)](ch05_split_000.xhtml#co_static_economy_CO3-1)'
  prefs: []
  type: TYPE_NORMAL
- en: The assumed market payoff matrix where the columns represent the future, uncertain
    price vectors of the traded financial assets.
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](ch05_split_000.xhtml#co_static_economy_CO3-2)'
  prefs: []
  type: TYPE_NORMAL
- en: The current price vector for the five assets, for each of which the price is
    fixed to 10.
  prefs: []
  type: TYPE_NORMAL
- en: '[![3](Images/3.png)](ch05_split_000.xhtml#co_static_economy_CO3-4)'
  prefs: []
  type: TYPE_NORMAL
- en: This calculates the expected (or average) future price for every traded financial
    asset.
  prefs: []
  type: TYPE_NORMAL
- en: '[![4](Images/4.png)](ch05_split_000.xhtml#co_static_economy_CO3-5)'
  prefs: []
  type: TYPE_NORMAL
- en: This in turn calculates the expected (or average) rates of return.
  prefs: []
  type: TYPE_NORMAL
- en: '[![5](Images/5.png)](ch05_split_000.xhtml#co_static_economy_CO3-7)'
  prefs: []
  type: TYPE_NORMAL
- en: The rates of return matrix calculated and printed out.
  prefs: []
  type: TYPE_NORMAL
- en: '[![6](Images/6.png)](ch05_split_000.xhtml#co_static_economy_CO3-8)'
  prefs: []
  type: TYPE_NORMAL
- en: The standard deviation of the rates of return or volatility calculated for every
    traded financial asset‚Äîthe first one is risk-less; it can be considered to be
    a bond.
  prefs: []
  type: TYPE_NORMAL
- en: Contingent Claims
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Given a model economy <math alttext="script upper E"><mi>‚Ñ∞</mi></math> , a *contingent
    claim* is characterized by a price process <math alttext="upper C equals left-parenthesis
    upper C 0 comma upper C 1 right-parenthesis"><mrow><mi>C</mi> <mo>=</mo> <mo>(</mo>
    <msub><mi>C</mi> <mn>0</mn></msub> <mo>,</mo> <msub><mi>C</mi> <mn>1</mn></msub>
    <mo>)</mo></mrow></math> , where <math alttext="upper C 1"><msub><mi>C</mi> <mn>1</mn></msub></math>
    is an <math alttext="script upper F minus"><mrow><mi>‚Ñ±</mi> <mo>-</mo></mrow></math>
    measurable random variable.
  prefs: []
  type: TYPE_NORMAL
- en: One can think of European call and put options as canonical examples of contingent
    claims. The payoff of a European call option might, for instance, be defined relative
    to the second traded financial asset according to <math alttext="upper C 1 equals
    max left-parenthesis upper S 1 squared minus upper K comma 0 right-parenthesis"><mrow><msub><mi>C</mi>
    <mn>1</mn></msub> <mo>=</mo> <mo movablelimits="true" form="prefix">max</mo> <mrow><mo>(</mo>
    <msubsup><mi>S</mi> <mn>1</mn> <mn>2</mn></msubsup> <mo>-</mo> <mi>K</mi> <mo>,</mo>
    <mn>0</mn> <mo>)</mo></mrow></mrow></math> , where <math><mrow><mi>K</mi><mo>‚àà</mo><msub><mi>‚Ñù</mi>
    <mrow><mn>‚â•0</mn></mrow></msub></mrow></math> is the strike price of the option.
    Since the payoff of the option is ‚Äúderived‚Äù from another asset, one therefore
    often speaks of *derivative instruments*, or *derivatives* for short.
  prefs: []
  type: TYPE_NORMAL
- en: If a contingent claim can be *replicated* by a portfolio <math alttext="phi
    element-of double-struck upper R Superscript upper K"><mrow><mi>œï</mi> <mo>‚àà</mo>
    <msup><mi>‚Ñù</mi> <mi>K</mi></msup></mrow></math> of the traded financial assets
    <math alttext="script upper S"><mi>ùíÆ</mi></math>
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="script upper M dot phi equals upper C 1" display="block"><mrow><mi>‚Ñ≥</mi>
    <mo>¬∑</mo> <mi>œï</mi> <mo>=</mo> <msub><mi>C</mi> <mn>1</mn></msub></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: then the *arbitrage price* of the contingent claim is
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="script upper M script 0 dot phi equals upper C 0" display="block"><mrow><msub><mi>‚Ñ≥</mi>
    <mn mathvariant="script">0</mn></msub> <mo>¬∑</mo> <mi>œï</mi> <mo>=</mo> <msub><mi>C</mi>
    <mn>0</mn></msub></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: where <math><mrow><msub><mi>‚Ñ≥</mi> <mn mathvariant="script">0</mn></msub> <mo>=</mo><msup><mfenced
    separators="" open="(" close=")"><msubsup><mi>S</mi> <mn>0</mn> <mn>1</mn></msubsup>
    <mo>,</mo><msubsup><mi>S</mi> <mn>0</mn> <mn>2</mn></msubsup> <mo>,</mo><mo>.</mo><mo>.</mo><mo>.</mo><mo>,</mo><msubsup><mi>S</mi>
    <mn>0</mn> <mi>K</mi></msubsup></mfenced> <mi>T</mi></msup> <mo>‚àà</mo><msubsup><mi>‚Ñù</mi>
    <mrow><mn>>0</mn></mrow> <mi>I</mi></msubsup></mrow></math> is the *current price
    vector* of the traded financial assets.
  prefs: []
  type: TYPE_NORMAL
- en: 'Continuing the Python example from before, replication of contingent claims
    based on linear algebra methods is illustrated in the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[![1](Images/1.png)](ch05_split_000.xhtml#co_static_economy_CO4-1)'
  prefs: []
  type: TYPE_NORMAL
- en: The strike price of the European call option, and the payoff vector of the relevant
    financial asset.
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](ch05_split_000.xhtml#co_static_economy_CO4-3)'
  prefs: []
  type: TYPE_NORMAL
- en: The call option is written on the second traded financial asset with future
    payoff of <math alttext="upper S 1 squared equals left-parenthesis 25 comma 20
    comma 10 comma 5 comma 0 right-parenthesis"><mrow><msubsup><mi>S</mi> <mn>1</mn>
    <mn>2</mn></msubsup> <mo>=</mo> <mrow><mo>(</mo> <mn>25</mn> <mo>,</mo> <mn>20</mn>
    <mo>,</mo> <mn>10</mn> <mo>,</mo> <mn>5</mn> <mo>,</mo> <mn>0</mn> <mo>)</mo></mrow></mrow></math>
    .
  prefs: []
  type: TYPE_NORMAL
- en: '[![3](Images/3.png)](ch05_split_000.xhtml#co_static_economy_CO4-5)'
  prefs: []
  type: TYPE_NORMAL
- en: This solves the replication problem given the market payoff matrix.
  prefs: []
  type: TYPE_NORMAL
- en: '[![4](Images/4.png)](ch05_split_000.xhtml#co_static_economy_CO4-7)'
  prefs: []
  type: TYPE_NORMAL
- en: Checks whether the replication portfolio indeed replicates the future payoff
    of the European call option.
  prefs: []
  type: TYPE_NORMAL
- en: '[![5](Images/5.png)](ch05_split_000.xhtml#co_static_economy_CO4-8)'
  prefs: []
  type: TYPE_NORMAL
- en: From the replication portfolio, the arbitrage price follows in combination with
    the current price vector of the traded financial assets.
  prefs: []
  type: TYPE_NORMAL
- en: Market Completeness
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Market completeness of the static model economy can be analyzed based on the
    *rank* of the market payoff matrix <math alttext="script upper M"><mi>‚Ñ≥</mi></math>
    as defined by the traded financial assets <math alttext="script upper S"><mi>ùíÆ</mi></math>
    . The rank of a matrix equals the number of linearly independent (column) vectors
    (see Aleskerov et al. (2011), section 2.7). Consider the column vectors that represent
    the future price vectors of the traded financial assets. They are *linearly independent*
    if
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="script upper M dot phi equals 0" display="block"><mrow><mi>‚Ñ≥</mi>
    <mo>¬∑</mo> <mi>œï</mi> <mo>=</mo> <mn>0</mn></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: has only one solution, namely the null vector <math alttext="phi equals left-parenthesis
    0 comma 0 comma period period period comma 0 right-parenthesis Superscript upper
    T Baseline element-of double-struck upper R Superscript upper K"><mrow><mi>œï</mi>
    <mo>=</mo> <msup><mrow><mo>(</mo><mn>0</mn><mo>,</mo><mn>0</mn><mo>,</mo><mo>.</mo><mo>.</mo><mo>.</mo><mo>,</mo><mn>0</mn><mo>)</mo></mrow>
    <mi>T</mi></msup> <mo>‚àà</mo> <msup><mi>‚Ñù</mi> <mi>K</mi></msup></mrow></math>
    .
  prefs: []
  type: TYPE_NORMAL
- en: 'On the other hand, the *span* of the market payoff matrix <math alttext="script
    upper M"><mi>‚Ñ≥</mi></math> is given by all linear combinations of the column vectors:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="span left-parenthesis script upper M right-parenthesis equals
    StartSet phi element-of double-struck upper R Superscript upper K Baseline colon
    script upper M dot phi EndSet" display="block"><mrow><mtext>span</mtext> <mrow><mo>(</mo>
    <mi>‚Ñ≥</mi> <mo>)</mo></mrow> <mo>=</mo> <mfenced separators="" open="{" close="}"><mi>œï</mi>
    <mo>‚àà</mo> <msup><mi>‚Ñù</mi> <mi>K</mi></msup> <mo>:</mo> <mi>‚Ñ≥</mi> <mo>¬∑</mo>
    <mi>œï</mi></mfenced></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'The model economy <math alttext="script upper E"><mi>‚Ñ∞</mi></math> is complete
    if the set of attainable contingent claims satisfies <math alttext="double-struck
    upper A equals double-struck upper R Superscript upper I"><mrow><mi>ùî∏</mi> <mo>=</mo>
    <msup><mi>‚Ñù</mi> <mi>I</mi></msup></mrow></math> . However, the set of attainable
    contingent claims equals by definition the span of the traded financial assets
    <math alttext="double-struck upper A identical-to span left-parenthesis script
    upper M right-parenthesis"><mrow><mi>ùî∏</mi> <mo>‚â°</mo> <mtext>span</mtext> <mo>(</mo>
    <mi>‚Ñ≥</mi> <mo>)</mo></mrow></math> . The model economy <math alttext="script
    upper E"><mi>‚Ñ∞</mi></math> therefore is *complete* if:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="span left-parenthesis script upper M right-parenthesis equals
    double-struck upper R Superscript upper I" display="block"><mrow><mtext>span</mtext>
    <mrow><mo>(</mo> <mi>‚Ñ≥</mi> <mo>)</mo></mrow> <mo>=</mo> <msup><mi>‚Ñù</mi> <mi>I</mi></msup></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'Under which circumstances is this the case? It is the case if the rank of the
    matrix is at least as large as the number of future states possible:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="rank left-parenthesis script upper M right-parenthesis greater-than-or-equal-to
    upper I" display="block"><mrow><mtext>rank</mtext> <mo>(</mo> <mi>‚Ñ≥</mi> <mo>)</mo>
    <mo>‚â•</mo> <mi>I</mi></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'In other words, the column vectors of <math alttext="script upper M"><mi>‚Ñ≥</mi></math>
    form a *basis* of the vector space <math alttext="double-struck upper R Superscript
    upper I"><msup><mi>‚Ñù</mi> <mi>I</mi></msup></math> (with potentially more basis
    vectors than required). A *vector space* <math alttext="double-struck upper V"><mi>ùïç</mi></math>
    is a set of elements (called *vectors*) that is characterized by:'
  prefs: []
  type: TYPE_NORMAL
- en: An addition function mapping two vectors <math alttext="v 1 comma v 2 element-of
    double-struck upper V"><mrow><msub><mi>v</mi> <mn>1</mn></msub> <mo>,</mo> <msub><mi>v</mi>
    <mn>2</mn></msub> <mo>‚àà</mo> <mi>ùïç</mi></mrow></math> to another element of the
    vector space <math alttext="left-parenthesis v 1 plus v 2 right-parenthesis element-of
    double-struck upper V"><mrow><mo>(</mo> <msub><mi>v</mi> <mn>1</mn></msub> <mo>+</mo>
    <msub><mi>v</mi> <mn>2</mn></msub> <mo>)</mo> <mo>‚àà</mo> <mi>ùïç</mi></mrow></math>
    .
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A scalar multiplication function mapping a scalar <math alttext="alpha element-of
    double-struck upper R"><mrow><mi>Œ±</mi> <mo>‚àà</mo> <mi>‚Ñù</mi></mrow></math> and
    a vector <math alttext="v element-of double-struck upper V"><mrow><mi>v</mi> <mo>‚àà</mo>
    <mi>ùïç</mi></mrow></math> to another element of the vector space <math alttext="left-parenthesis
    alpha dot v right-parenthesis element-of double-struck upper V"><mrow><mo>(</mo>
    <mi>Œ±</mi> <mo>¬∑</mo> <mi>v</mi> <mo>)</mo> <mo>‚àà</mo> <mi>ùïç</mi></mrow></math>
    .
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A special element‚Äîusually called ‚Äúzero‚Äù or ‚Äúneutral element‚Äù‚Äî <math alttext="0
    element-of double-struck upper V"><mrow><mn>0</mn> <mo>‚àà</mo> <mi>ùïç</mi></mrow></math>
    such that <math alttext="v plus 0 equals v"><mrow><mi>v</mi> <mo>+</mo> <mn>0</mn>
    <mo>=</mo> <mi>v</mi></mrow></math> .
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: It is easy to verify that, for example, the sets <math alttext="double-struck
    upper R comma double-struck upper R Superscript 5"><mrow><mi>‚Ñù</mi> <mo>,</mo>
    <msup><mi>‚Ñù</mi> <mn>5</mn></msup></mrow></math> , or <math><mrow><msup><mi>‚Ñù</mi>
    <mi>I</mi></msup> <mo>,</mo><mi>I</mi><mo>‚àà</mo><msub><mi>‚Ñï</mi> <mrow><mn>>0</mn></mrow></msub></mrow></math>
    are vector spaces.
  prefs: []
  type: TYPE_NORMAL
- en: 'Consequently, the model economy is *incomplete* if:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="rank left-parenthesis script upper M right-parenthesis less-than
    upper I" display="block"><mrow><mtext>rank</mtext> <mo>(</mo> <mi>‚Ñ≥</mi> <mo>)</mo>
    <mo><</mo> <mi>I</mi></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'To make things a bit more concrete, consider a state space with three possible
    future states only, <math alttext="normal upper Omega equals StartSet omega 1
    comma omega 2 comma omega 3 EndSet"><mrow><mi>Œ©</mi> <mo>=</mo> <mo>{</mo> <msub><mi>œâ</mi>
    <mn>1</mn></msub> <mo>,</mo> <msub><mi>œâ</mi> <mn>2</mn></msub> <mo>,</mo> <msub><mi>œâ</mi>
    <mn>3</mn></msub> <mo>}</mo></mrow></math> . All random variables, then, are vectors
    in the vector space <math alttext="double-struck upper R cubed"><msup><mi>‚Ñù</mi>
    <mn>3</mn></msup></math> . The following market payoff matrix‚Äîresulting from three
    traded financial assets‚Äîhas a rank of 2 only because two-column vectors are linearly
    dependent. This leads to an incomplete market:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="script upper M equals Start 3 By 3 Matrix 1st Row 1st Column
    11 2nd Column 20 3rd Column 10 2nd Row 1st Column 11 2nd Column 10 3rd Column
    5 3rd Row 1st Column 11 2nd Column 5 3rd Column 2.5 EndMatrix right double arrow
    rank left-parenthesis script upper M right-parenthesis equals 2" display="block"><mrow><mi>‚Ñ≥</mi>
    <mo>=</mo> <mfenced open="(" close=")"><mtable><mtr><mtd><mn>11</mn></mtd> <mtd><mn>20</mn></mtd>
    <mtd><mn>10</mn></mtd></mtr> <mtr><mtd><mn>11</mn></mtd> <mtd><mn>10</mn></mtd>
    <mtd><mn>5</mn></mtd></mtr> <mtr><mtd><mn>11</mn></mtd> <mtd><mn>5</mn></mtd>
    <mtd><mrow><mn>2</mn> <mo>.</mo> <mn>5</mn></mrow></mtd></mtr></mtable></mfenced>
    <mo>‚áí</mo> <mtext>rank</mtext> <mrow><mo>(</mo> <mi>‚Ñ≥</mi> <mo>)</mo></mrow> <mo>=</mo>
    <mn>2</mn></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'It is easily verified that the financial assets 2 and 3 are indeed linearly
    dependent:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="upper S 1 squared equals Start 3 By 1 Matrix 1st Row  20 2nd
    Row  10 3rd Row  5 EndMatrix equals 2 dot Start 3 By 1 Matrix 1st Row  10 2nd
    Row  5 3rd Row  2.5 EndMatrix equals 2 dot upper S 1 cubed" display="block"><mrow><msubsup><mi>S</mi>
    <mn>1</mn> <mn>2</mn></msubsup> <mo>=</mo> <mfenced open="(" close=")"><mtable><mtr><mtd><mn>20</mn></mtd></mtr>
    <mtr><mtd><mn>10</mn></mtd></mtr> <mtr><mtd><mn>5</mn></mtd></mtr></mtable></mfenced>
    <mo>=</mo> <mn>2</mn> <mo>¬∑</mo> <mfenced open="(" close=")"><mtable><mtr><mtd><mn>10</mn></mtd></mtr>
    <mtr><mtd><mn>5</mn></mtd></mtr> <mtr><mtd><mrow><mn>2</mn> <mo>.</mo> <mn>5</mn></mrow></mtd></mtr></mtable></mfenced>
    <mo>=</mo> <mn>2</mn> <mo>¬∑</mo> <msubsup><mi>S</mi> <mn>1</mn> <mn>3</mn></msubsup></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'By contrast, the market payoff matrix that follows‚Äîresulting from a different
    set of three traded financial assets‚Äîhas a rank of 3, leading to a complete market.
    In such a case, one also speaks of the matrix having *full rank*:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="script upper M equals Start 3 By 3 Matrix 1st Row 1st Column
    11 2nd Column 20 3rd Column 10 2nd Row 1st Column 11 2nd Column 10 3rd Column
    25 3rd Row 1st Column 11 2nd Column 5 3rd Column 10 EndMatrix right double arrow
    rank left-parenthesis script upper M right-parenthesis equals 3" display="block"><mrow><mi>‚Ñ≥</mi>
    <mo>=</mo> <mfenced open="(" close=")"><mtable><mtr><mtd><mn>11</mn></mtd> <mtd><mn>20</mn></mtd>
    <mtd><mn>10</mn></mtd></mtr> <mtr><mtd><mn>11</mn></mtd> <mtd><mn>10</mn></mtd>
    <mtd><mn>25</mn></mtd></mtr> <mtr><mtd><mn>11</mn></mtd> <mtd><mn>5</mn></mtd>
    <mtd><mn>10</mn></mtd></mtr></mtable></mfenced> <mo>‚áí</mo> <mtext>rank</mtext>
    <mrow><mo>(</mo> <mi>‚Ñ≥</mi> <mo>)</mo></mrow> <mo>=</mo> <mn>3</mn></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'Assume next that a probability space is fixed for which the state space has
    five elements, <math alttext="normal upper Omega equals StartSet omega 1 comma
    period period period comma omega 5 EndSet"><mrow><mi>Œ©</mi> <mo>=</mo> <mo>{</mo>
    <msub><mi>œâ</mi> <mn>1</mn></msub> <mo>,</mo> <mo>.</mo> <mo>.</mo> <mo>.</mo>
    <mo>,</mo> <msub><mi>œâ</mi> <mn>5</mn></msub> <mo>}</mo></mrow></math> . The future
    (uncertain) price and payoff vectors of the five traded financial assets <math
    alttext="script upper S"><mi>ùíÆ</mi></math> and all contingent claims, respectively,
    are now elements of the vector space <math alttext="double-struck upper R Superscript
    5"><msup><mi>‚Ñù</mi> <mn>5</mn></msup></math> . The Python code that follows analyzes
    contingent claim replication based on such a model economy <math alttext="script
    upper E"><mi>‚Ñ∞</mi></math> . It starts by assuming that all five Arrow-Debreu
    securities are traded and then proceeds to a randomized market payoff matrix:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[![1](Images/1.png)](ch05_split_000.xhtml#co_static_economy_CO5-1)'
  prefs: []
  type: TYPE_NORMAL
- en: Creates a two-dimensional `ndarray` object, here an identity matrix. It can
    be interpreted as the market payoff matrix resulting from five traded Arrow-Debreu
    securities. It forms a so-called *canonical* basis of the vector space <math alttext="double-struck
    upper R Superscript 5"><msup><mi>‚Ñù</mi> <mn>5</mn></msup></math> .
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](ch05_split_000.xhtml#co_static_economy_CO5-3)'
  prefs: []
  type: TYPE_NORMAL
- en: Calculates the rank of the matrix, which is also trivial to see for the identity
    matrix.
  prefs: []
  type: TYPE_NORMAL
- en: '[![3](Images/3.png)](ch05_split_000.xhtml#co_static_economy_CO5-4)'
  prefs: []
  type: TYPE_NORMAL
- en: A contingent claim payoff that is to be replicated by the traded financial assets.
  prefs: []
  type: TYPE_NORMAL
- en: '[![4](Images/4.png)](ch05_split_000.xhtml#co_static_economy_CO5-6)'
  prefs: []
  type: TYPE_NORMAL
- en: This solves the replication (representation) problem, which is again trivial
    in the case of the identity matrix.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, a randomized market payoff matrix is generated, which happens to be of
    full rank as well (no guarantees here in general):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[![1](Images/1.png)](ch05_split_000.xhtml#co_static_economy_CO6-1)'
  prefs: []
  type: TYPE_NORMAL
- en: Fixes the seed for the `NumPy` random number generator, which allows for reproducibility
    of the results.
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](ch05_split_000.xhtml#co_static_economy_CO6-2)'
  prefs: []
  type: TYPE_NORMAL
- en: Creates a randomized market payoff matrix (`ndarray` object with shape `(5,
    5)` populated by random integers between 1 and 10).
  prefs: []
  type: TYPE_NORMAL
- en: '[![3](Images/3.png)](ch05_split_000.xhtml#co_static_economy_CO6-4)'
  prefs: []
  type: TYPE_NORMAL
- en: The matrix has full rank‚Äîboth the column and row vectors are linearly independent.
  prefs: []
  type: TYPE_NORMAL
- en: '[![4](Images/4.png)](ch05_split_000.xhtml#co_static_economy_CO6-6)'
  prefs: []
  type: TYPE_NORMAL
- en: The nontrivial solution to the replication problem with the randomized basis
    for the vector space <math alttext="double-struck upper R Superscript 5"><msup><mi>‚Ñù</mi>
    <mn>5</mn></msup></math> .
  prefs: []
  type: TYPE_NORMAL
- en: '[![5](Images/5.png)](ch05_split_000.xhtml#co_static_economy_CO6-8)'
  prefs: []
  type: TYPE_NORMAL
- en: Checks the solution for achieving perfect replication.
  prefs: []
  type: TYPE_NORMAL
- en: Fundamental Theorems of Asset Pricing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Consider the general static model economy <math alttext="script upper E equals
    left-parenthesis StartSet normal upper Omega comma script upper F comma upper
    P EndSet comma script upper S right-parenthesis"><mrow><mi>‚Ñ∞</mi> <mo>=</mo> <mo>(</mo>
    <mo>{</mo> <mi>Œ©</mi> <mo>,</mo> <mi>‚Ñ±</mi> <mo>,</mo> <mi>P</mi> <mo>}</mo> <mo>,</mo>
    <mi>ùíÆ</mi> <mo>)</mo></mrow></math> , with <math alttext="upper I"><mi>I</mi></math>
    possible states and <math alttext="upper K"><mi>K</mi></math> traded financial
    assets. Assume that the risk-less short rate for lending and borrowing in the
    economy is <math><mrow><mi>r</mi><mo>‚àà</mo><msub><mi>‚Ñù</mi> <mrow><mn>‚â•0</mn></mrow></msub></mrow></math>
    .^([1](ch05_split_001.xhtml#idm44853688595608))
  prefs: []
  type: TYPE_NORMAL
- en: An *arbitrage opportunity* is a portfolio <math alttext="phi element-of double-struck
    upper R Superscript upper K"><mrow><mi>œï</mi> <mo>‚àà</mo> <msup><mi>‚Ñù</mi> <mi>K</mi></msup></mrow></math>
    of the traded financial assets <math alttext="script upper S"><mi>ùíÆ</mi></math>
    such that the price of the portfolio is zero
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="upper S 0 dot phi equals sigma-summation Underscript k equals
    1 Overscript upper K Endscripts upper S 0 Superscript k Baseline dot phi Superscript
    k Baseline equals 0" display="block"><mrow><msub><mi>S</mi> <mn>0</mn></msub>
    <mo>¬∑</mo> <mi>œï</mi> <mo>=</mo> <munderover><mo>‚àë</mo> <mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow>
    <mi>K</mi></munderover> <msubsup><mi>S</mi> <mn>0</mn> <mi>k</mi></msubsup> <mo>¬∑</mo>
    <msup><mi>œï</mi> <mi>k</mi></msup> <mo>=</mo> <mn>0</mn></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'and the expected payoff is greater than zero:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="bold upper E Superscript upper P Baseline left-parenthesis script
    upper M dot phi right-parenthesis greater-than 0" display="block"><mrow><msup><mi>ùêÑ</mi>
    <mi>P</mi></msup> <mrow><mo>(</mo> <mi>‚Ñ≥</mi> <mo>¬∑</mo> <mi>œï</mi> <mo>)</mo></mrow>
    <mo>></mo> <mn>0</mn></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'Denote the *set of all arbitrage opportunities* by:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="double-struck upper O identical-to StartSet phi element-of double-struck
    upper R Superscript upper K Baseline colon upper S 0 dot phi equals 0 comma bold
    upper E Superscript upper P Baseline left-parenthesis script upper M dot phi right-parenthesis
    greater-than 0 EndSet" display="block"><mrow><mi>ùïÜ</mi> <mo>‚â°</mo> <mo>{</mo>
    <mi>œï</mi> <mo>‚àà</mo> <msup><mi>‚Ñù</mi> <mi>K</mi></msup> <mo>:</mo> <msub><mi>S</mi>
    <mn>0</mn></msub> <mo>¬∑</mo> <mi>œï</mi> <mo>=</mo> <mn>0</mn> <mo>,</mo> <msup><mi>ùêÑ</mi>
    <mi>P</mi></msup> <mrow><mo>(</mo> <mi>‚Ñ≥</mi> <mo>¬∑</mo> <mi>œï</mi> <mo>)</mo></mrow>
    <mo>></mo> <mn>0</mn> <mo>}</mo></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'A *martingale measure* <math alttext="upper Q"><mi>Q</mi></math> for the model
    economy makes the discounted price processes martingales and therefore satisfies
    the following condition:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="StartFraction 1 Over 1 plus r EndFraction dot bold upper E Superscript
    upper Q Baseline left-parenthesis script upper M right-parenthesis equals upper
    S 0" display="block"><mrow><mfrac><mn>1</mn> <mrow><mn>1</mn><mo>+</mo><mi>r</mi></mrow></mfrac>
    <mo>¬∑</mo> <msup><mi>ùêÑ</mi> <mi>Q</mi></msup> <mrow><mo>(</mo> <mi>‚Ñ≥</mi> <mo>)</mo></mrow>
    <mo>=</mo> <msub><mi>S</mi> <mn>0</mn></msub></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: With these definitions, the *First Fundamental Theorem of Asset Pricing* (see
    also [Chapter¬†2](ch02_split_000.xhtml#two_state_economy)), which relates the existence
    of a martingale measure to the absence of arbitrage opportunities, can be formulated.
    For a discussion and proof, refer to Pliska (1997, section 1.3).
  prefs: []
  type: TYPE_NORMAL
- en: First Fundamental Theorem of Asset Pricing (1FTAP)
  prefs: []
  type: TYPE_NORMAL
- en: 'The following statements are equivalent:'
  prefs: []
  type: TYPE_NORMAL
- en: A martingale measure <math alttext="upper Q"><mi>Q</mi></math> exists.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The economy is arbitrage-free, it holds <math alttext="double-struck 0 equals
    normal empty-set"><mrow><mn mathvariant="double-struck">0</mn> <mo>=</mo> <mi>‚àÖ</mi></mrow></math>
    .
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The derivation of a martingale measure is formally the same as the solution
    of a replication problem for a contingent claim <math alttext="upper C equals
    left-parenthesis upper C 0 comma upper C 1 right-parenthesis"><mrow><mi>C</mi>
    <mo>=</mo> <mo>(</mo> <msub><mi>C</mi> <mn>0</mn></msub> <mo>,</mo> <msub><mi>C</mi>
    <mn>1</mn></msub> <mo>)</mo></mrow></math> , which reads
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="script upper M dot phi equals upper C 1" display="block"><mrow><mi>‚Ñ≥</mi>
    <mo>¬∑</mo> <mi>œï</mi> <mo>=</mo> <msub><mi>C</mi> <mn>1</mn></msub></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: and where the replication portfolio <math alttext="phi"><mi>œï</mi></math> needs
    to be determined. Mathematically, this is equivalent to solving a system of linear
    equations, as illustrated in [Chapter¬†2](ch02_split_000.xhtml#two_state_economy).
    Finding a martingale measure can be written as
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="StartFraction 1 Over 1 plus r EndFraction dot bold upper E Superscript
    upper Q Baseline left-parenthesis script upper M right-parenthesis equals StartFraction
    1 Over 1 plus r EndFraction script upper M Superscript upper T Baseline dot upper
    Q equals script upper M overTilde dot upper Q equals upper S 0" display="block"><mrow><mfrac><mn>1</mn>
    <mrow><mn>1</mn><mo>+</mo><mi>r</mi></mrow></mfrac> <mo>¬∑</mo> <msup><mi>ùêÑ</mi>
    <mi>Q</mi></msup> <mrow><mo>(</mo> <mi>‚Ñ≥</mi> <mo>)</mo></mrow> <mo>=</mo> <mfrac><mn>1</mn>
    <mrow><mn>1</mn><mo>+</mo><mi>r</mi></mrow></mfrac> <msup><mi>‚Ñ≥</mi> <mi>T</mi></msup>
    <mo>¬∑</mo> <mi>Q</mi> <mo>=</mo> <mover accent="true"><mi>‚Ñ≥</mi> <mo>Àú</mo></mover>
    <mo>¬∑</mo> <mi>Q</mi> <mo>=</mo> <msub><mi>S</mi> <mn>0</mn></msub></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: where <math alttext="script upper M overTilde identical-to StartFraction 1 Over
    1 plus r EndFraction script upper M Superscript upper T"><mrow><mover accent="true"><mi>‚Ñ≥</mi>
    <mo>Àú</mo></mover> <mo>‚â°</mo> <mfrac><mn>1</mn> <mrow><mn>1</mn><mo>+</mo><mi>r</mi></mrow></mfrac>
    <msup><mi>‚Ñ≥</mi> <mi>T</mi></msup></mrow></math> and where
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="upper Q equals Start 4 By 1 Matrix 1st Row  upper Q left-parenthesis
    omega 1 right-parenthesis 2nd Row  upper Q left-parenthesis omega 2 right-parenthesis
    3rd Row  period period period 4th Row  upper Q left-parenthesis omega Subscript
    upper I Baseline right-parenthesis EndMatrix comma for-all omega element-of normal
    upper Omega colon 0 less-than-or-equal-to upper Q left-parenthesis omega right-parenthesis
    less-than-or-equal-to 1 comma sigma-summation Underscript omega element-of normal
    upper Omega Endscripts upper Q left-parenthesis omega right-parenthesis equals
    1" display="block"><mrow><mi>Q</mi> <mo>=</mo> <mfenced open="(" close=")"><mtable><mtr><mtd><mrow><mi>Q</mi>
    <mo>(</mo> <msub><mi>œâ</mi> <mn>1</mn></msub> <mo>)</mo></mrow></mtd></mtr> <mtr><mtd><mrow><mi>Q</mi>
    <mo>(</mo> <msub><mi>œâ</mi> <mn>2</mn></msub> <mo>)</mo></mrow></mtd></mtr> <mtr><mtd><mrow><mo>.</mo>
    <mo>.</mo> <mo>.</mo></mrow></mtd></mtr> <mtr><mtd><mrow><mi>Q</mi> <mo>(</mo>
    <msub><mi>œâ</mi> <mi>I</mi></msub> <mo>)</mo></mrow></mtd></mtr></mtable></mfenced>
    <mo>,</mo> <mo>‚àÄ</mo> <mi>œâ</mi> <mo>‚àà</mo> <mi>Œ©</mi> <mo>:</mo> <mn>0</mn> <mo>‚â§</mo>
    <mi>Q</mi> <mrow><mo>(</mo> <mi>œâ</mi> <mo>)</mo></mrow> <mo>‚â§</mo> <mn>1</mn>
    <mo>,</mo> <munder><mo>‚àë</mo> <mrow><mi>œâ</mi><mo>‚àà</mo><mi>Œ©</mi></mrow></munder>
    <mi>Q</mi> <mrow><mo>(</mo> <mi>œâ</mi> <mo>)</mo></mrow> <mo>=</mo> <mn>1</mn></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'This problem can be considered the *dual problem* to the replication problem‚Äîalbeit
    under some restrictive constraints. The constraints, resulting from the requirement
    that the solution be a probability measure, make a different technical approach
    in Python necessary. The problem of finding a martingale measure can be modeled
    as a constrained minimization problem‚Äîinstead of just solving a system of linear
    equation. The example assumes a state space with five elements and the market
    payoff structure from before:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '[![1](Images/1.png)](ch05_split_000.xhtml#co_static_economy_CO7-1)'
  prefs: []
  type: TYPE_NORMAL
- en: Imports the `optimize` subpackage from `scipy` as `sco`.
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](ch05_split_000.xhtml#co_static_economy_CO7-2)'
  prefs: []
  type: TYPE_NORMAL
- en: Defines the market payoff matrix.
  prefs: []
  type: TYPE_NORMAL
- en: '[![3](Images/3.png)](ch05_split_000.xhtml#co_static_economy_CO7-3)'
  prefs: []
  type: TYPE_NORMAL
- en: Verifies that the matrix is of full rank.
  prefs: []
  type: TYPE_NORMAL
- en: '[![4](Images/4.png)](ch05_split_000.xhtml#co_static_economy_CO7-4)'
  prefs: []
  type: TYPE_NORMAL
- en: Defines the price vector for the traded financial assets‚Ä¶
  prefs: []
  type: TYPE_NORMAL
- en: '[![5](Images/5.png)](ch05_split_000.xhtml#co_static_economy_CO7-5)'
  prefs: []
  type: TYPE_NORMAL
- en: ‚Ä¶and shows the values, which are all set to 10.
  prefs: []
  type: TYPE_NORMAL
- en: '[![6](Images/6.png)](ch05_split_000.xhtml#co_static_economy_CO7-6)'
  prefs: []
  type: TYPE_NORMAL
- en: Fixes the constant short rate.
  prefs: []
  type: TYPE_NORMAL
- en: '[![7](Images/7.png)](ch05_split_000.xhtml#co_static_economy_CO7-7)'
  prefs: []
  type: TYPE_NORMAL
- en: Defines the objective function that is to be minimized. This approach is necessary
    because the linear system is to be solved under a constraint and with bounds for
    all parameters.
  prefs: []
  type: TYPE_NORMAL
- en: '[![8](Images/8.png)](ch05_split_000.xhtml#co_static_economy_CO7-8)'
  prefs: []
  type: TYPE_NORMAL
- en: The constraint that the single probabilities need to add up to one.
  prefs: []
  type: TYPE_NORMAL
- en: '[![9](Images/9.png)](ch05_split_000.xhtml#co_static_economy_CO7-9)'
  prefs: []
  type: TYPE_NORMAL
- en: Defines the bounds for every single probability.
  prefs: []
  type: TYPE_NORMAL
- en: '[![10](Images/10.png)](ch05_split_000.xhtml#co_static_economy_CO7-11)'
  prefs: []
  type: TYPE_NORMAL
- en: The optimization procedure minimizing the function `E`‚Ä¶
  prefs: []
  type: TYPE_NORMAL
- en: '[![11](Images/11.png)](ch05_split_000.xhtml#co_static_economy_CO7-12)'
  prefs: []
  type: TYPE_NORMAL
- en: ‚Ä¶defining the method used,‚Ä¶
  prefs: []
  type: TYPE_NORMAL
- en: '[![12](Images/12.png)](ch05_split_000.xhtml#co_static_economy_CO7-13)'
  prefs: []
  type: TYPE_NORMAL
- en: ‚Ä¶providing the constraints to be observed, and‚Ä¶
  prefs: []
  type: TYPE_NORMAL
- en: '[![13](Images/13.png)](ch05_split_000.xhtml#co_static_economy_CO7-14)'
  prefs: []
  type: TYPE_NORMAL
- en: ‚Ä¶providing the bounds for the parameters.
  prefs: []
  type: TYPE_NORMAL
- en: '[![14](Images/14.png)](ch05_split_000.xhtml#co_static_economy_CO7-15)'
  prefs: []
  type: TYPE_NORMAL
- en: The results vector is the martingale measure.
  prefs: []
  type: TYPE_NORMAL
- en: '[![15](Images/15.png)](ch05_split_000.xhtml#co_static_economy_CO7-17)'
  prefs: []
  type: TYPE_NORMAL
- en: Under the martingale measure, the discounted price processes are martingales.
  prefs: []
  type: TYPE_NORMAL
- en: The second Fundamental Theorem of Asset Pricing also holds true in the general
    static model economy <math alttext="script upper E"><mi>‚Ñ∞</mi></math> . For a
    discussion and proof, refer to Pliska (1997, section 1.5).
  prefs: []
  type: TYPE_NORMAL
- en: Second Fundamental Theorem of Asset Pricing (2FTAP)
  prefs: []
  type: TYPE_NORMAL
- en: 'The following statements are equivalent:'
  prefs: []
  type: TYPE_NORMAL
- en: The martingale measure <math alttext="upper Q"><mi>Q</mi></math> is unique.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The economy is complete, it holds <math alttext="double-struck upper A equals
    double-struck upper R Subscript plus Superscript upper I"><mrow><mi>ùî∏</mi> <mo>=</mo>
    <msubsup><mi>‚Ñù</mi> <mo>+</mo> <mi>I</mi></msubsup></mrow></math> .
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Fundamental Theorems
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The quest for valid option pricing models led to the seminal option pricing
    models of Black and Scholes (1973) and Merton (1973)‚Äîtogether Black-Scholes-Merton
    (1973). The models used in these seminal papers are rather specific in that they
    assume a geometric Brownian motion as the model for the price process of the only
    risky asset. Research from the late 1970s and early 1980s, namely from Harrison
    and Kreps (1979) and Harrison and Pliska (1981), provides a general framework
    for the pricing of contingent claims. In their general framework, martingale measures
    and processes that are (semi-)martingales play the central role. The class of
    (semi-)martingale processes is pretty large and encompasses both the early models
    (for example, geometric Brownian motion) as well as many more sophisticated financial
    models proposed and analyzed much later (for example, jump diffusions or stochastic
    volatility processes). Among others, this is one of the reasons why the presented
    theorems are called *fundamental*‚Äîthey apply to a large class of interesting and
    important financial models.
  prefs: []
  type: TYPE_NORMAL
- en: Black-Scholes-Merton Option Pricing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Black-Scholes-Merton (1973) model for option pricing is based on a continuous
    model economy generally represented by stochastic differential equations (SDEs)
    with suitable boundary conditions. The SDE used to describe the evolution of the
    *single risky asset* (think of a stock or stock index) is the one for a *geometric
    Brownian motion*. In addition to the risky asset, another *risk-less asset* is
    traded in their model economy and it pays a continuous, risk-less short rate.
  prefs: []
  type: TYPE_NORMAL
- en: In the static case with two relevant points in time only, say <math alttext="t
    equals 0"><mrow><mi>t</mi> <mo>=</mo> <mn>0</mn></mrow></math> and <math alttext="t
    equals upper T greater-than 0"><mrow><mi>t</mi> <mo>=</mo> <mi>T</mi> <mo>></mo>
    <mn>0</mn></mrow></math> , the future, uncertain value of the risky asset <math
    alttext="upper S Subscript upper T"><msub><mi>S</mi> <mi>T</mi></msub></math>
    is given by
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="upper S Subscript upper T Baseline equals upper S 0 dot e Superscript
    left-parenthesis r minus StartFraction sigma squared Over 2 EndFraction right-parenthesis
    upper T plus sigma StartRoot upper T EndRoot z" display="block"><mrow><msub><mi>S</mi>
    <mi>T</mi></msub> <mo>=</mo> <msub><mi>S</mi> <mn>0</mn></msub> <mo>¬∑</mo> <msup><mi>e</mi>
    <mrow><mfenced separators="" open="(" close=")"><mi>r</mi><mo>-</mo><mfrac><msup><mi>œÉ</mi>
    <mn>2</mn></msup> <mn>2</mn></mfrac></mfenced><mi>T</mi><mo>+</mo><mi>œÉ</mi><msqrt><mi>T</mi></msqrt><mi>z</mi></mrow></msup></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: where <math><mrow><msub><mi>S</mi> <mn>0</mn></msub> <mo>‚àà</mo><msub><mi>‚Ñù</mi>
    <mrow><mn>>0</mn></mrow></msub></mrow></math> is the price of the risky asset
    today, <math><mrow><mi>r</mi><mo>‚àà</mo><msub><mi>‚Ñù</mi> <mrow><mn>‚â•0</mn></mrow></msub></mrow></math>
    is the constant risk-less short rate, <math><mrow><mi>œÉ</mi><mo>‚àà</mo><msub><mi>‚Ñù</mi>
    <mrow><mn>>0</mn></mrow></msub></mrow></math> is a constant volatility factor,
    and <math alttext="z"><mi>z</mi></math> is a standard normally distributed random
    variable (see Jacod and Protter (2004), chapter 16).
  prefs: []
  type: TYPE_NORMAL
- en: 'In a discrete, numerical context, one can draw, for example, pseudo-random
    numbers <math alttext="z Subscript i Baseline comma i equals 1 comma 2 comma period
    period period comma upper I"><mrow><msub><mi>z</mi> <mi>i</mi></msub> <mo>,</mo>
    <mi>i</mi> <mo>=</mo> <mn>1</mn> <mo>,</mo> <mn>2</mn> <mo>,</mo> <mo>.</mo> <mo>.</mo>
    <mo>.</mo> <mo>,</mo> <mi>I</mi></mrow></math> that are standard normally distributed
    to derive <math alttext="upper I"><mi>I</mi></math> numerical values for <math
    alttext="upper S Subscript upper T"><msub><mi>S</mi> <mi>T</mi></msub></math>
    according to the preceding equation:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="upper S Subscript upper T Baseline left-parenthesis z Subscript
    i Baseline right-parenthesis equals upper S 0 dot e Superscript left-parenthesis
    r minus StartFraction sigma squared Over 2 EndFraction right-parenthesis upper
    T plus sigma StartRoot upper T EndRoot z Super Subscript i Superscript Baseline
    comma i equals 1 comma 2 comma period period period comma upper I" display="block"><mrow><msub><mi>S</mi>
    <mi>T</mi></msub> <mrow><mo>(</mo> <msub><mi>z</mi> <mi>i</mi></msub> <mo>)</mo></mrow>
    <mo>=</mo> <msub><mi>S</mi> <mn>0</mn></msub> <mo>¬∑</mo> <msup><mi>e</mi> <mrow><mfenced
    separators="" open="(" close=")"><mi>r</mi><mo>-</mo><mfrac><msup><mi>œÉ</mi> <mn>2</mn></msup>
    <mn>2</mn></mfrac></mfenced><mi>T</mi><mo>+</mo><mi>œÉ</mi><msqrt><mi>T</mi></msqrt><msub><mi>z</mi>
    <mi>i</mi></msub></mrow></msup> <mo>,</mo> <mi>i</mi> <mo>=</mo> <mn>1</mn> <mo>,</mo>
    <mn>2</mn> <mo>,</mo> <mo>.</mo> <mo>.</mo> <mo>.</mo> <mo>,</mo> <mi>I</mi></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'Such a procedure is usually called a *Monte Carlo simulation*. To simplify
    the notation, <math alttext="upper S Subscript upper T"><msub><mi>S</mi> <mi>T</mi></msub></math>
    shall from now on specify the vector of simulated future values of the stock:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="upper S Subscript upper T Baseline identical-to Start 4 By 1
    Matrix 1st Row  upper S Subscript upper T Baseline left-parenthesis z 1 right-parenthesis
    2nd Row  upper S Subscript upper T Baseline left-parenthesis z 2 right-parenthesis
    3rd Row  period period period 4th Row  upper S Subscript upper T Baseline left-parenthesis
    z Subscript upper I Baseline right-parenthesis EndMatrix" display="block"><mrow><msub><mi>S</mi>
    <mi>T</mi></msub> <mo>‚â°</mo> <mfenced open="(" close=")"><mtable><mtr><mtd><mrow><msub><mi>S</mi>
    <mi>T</mi></msub> <mrow><mo>(</mo> <msub><mi>z</mi> <mn>1</mn></msub> <mo>)</mo></mrow></mrow></mtd></mtr>
    <mtr><mtd><mrow><msub><mi>S</mi> <mi>T</mi></msub> <mrow><mo>(</mo> <msub><mi>z</mi>
    <mn>2</mn></msub> <mo>)</mo></mrow></mrow></mtd></mtr> <mtr><mtd><mrow><mo>.</mo>
    <mo>.</mo> <mo>.</mo></mrow></mtd></mtr> <mtr><mtd><mrow><msub><mi>S</mi> <mi>T</mi></msub>
    <mrow><mo>(</mo> <msub><mi>z</mi> <mi>I</mi></msub> <mo>)</mo></mrow></mrow></mtd></mtr></mtable></mfenced></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'With these definitions, the model economy is as follows. There is a general
    probability space <math alttext="StartSet normal upper Omega comma script upper
    F identical-to normal script upper P left-parenthesis normal upper Omega right-parenthesis
    comma upper P EndSet"><mrow><mo>{</mo> <mi>Œ©</mi> <mo>,</mo> <mi>‚Ñ±</mi> <mo>‚â°</mo>
    <mi>‚Ñò</mi> <mo>(</mo> <mi>Œ©</mi> <mo>)</mo> <mo>,</mo> <mi>P</mi> <mo>}</mo></mrow></math>
    with <math alttext="upper I"><mi>I</mi></math> possible future states of the economy.
    Every state is assumed to be equally likely‚Äîthat is, it holds:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="for-all omega element-of normal upper Omega colon upper P left-parenthesis
    omega right-parenthesis equals StartFraction 1 Over upper I EndFraction" display="block"><mrow><mo>‚àÄ</mo>
    <mi>œâ</mi> <mo>‚àà</mo> <mi>Œ©</mi> <mo>:</mo> <mi>P</mi> <mrow><mo>(</mo> <mi>œâ</mi>
    <mo>)</mo></mrow> <mo>=</mo> <mfrac><mn>1</mn> <mi>I</mi></mfrac></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'The set of traded financial assets <math alttext="script upper S"><mi>ùíÆ</mi></math>
    consists of the risk-less asset called *bond* with price process <math alttext="upper
    B equals left-parenthesis upper B 0 comma upper B 0 dot e Superscript r upper
    T Baseline right-parenthesis"><mrow><mi>B</mi> <mo>=</mo> <mfenced separators=""
    open="(" close=")"><msub><mi>B</mi> <mn>0</mn></msub> <mo>,</mo> <msub><mi>B</mi>
    <mn>0</mn></msub> <mo>¬∑</mo> <msup><mi>e</mi> <mrow><mi>r</mi><mi>T</mi></mrow></msup></mfenced></mrow></math>
    and the risky asset called *stock* (paying no dividends) with price process <math
    alttext="upper S equals left-parenthesis upper S 0 comma upper S Subscript upper
    T Baseline right-parenthesis"><mrow><mi>S</mi> <mo>=</mo> <mo>(</mo> <msub><mi>S</mi>
    <mn>0</mn></msub> <mo>,</mo> <msub><mi>S</mi> <mi>T</mi></msub> <mo>)</mo></mrow></math>
    and <math alttext="upper S Subscript upper T"><msub><mi>S</mi> <mi>T</mi></msub></math>
    as defined previously. Together this forms the Black-Scholes-Merton (1973) model
    economy:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="script upper E Superscript upper B upper S upper M Baseline equals
    left-parenthesis StartSet normal upper Omega comma script upper F comma upper
    P EndSet comma script upper S equals StartSet upper B comma upper S EndSet right-parenthesis"
    display="block"><mrow><msup><mi>‚Ñ∞</mi> <mrow><mi>B</mi><mi>S</mi><mi>M</mi></mrow></msup>
    <mo>=</mo> <mfenced separators="" open="(" close=")"><mo>{</mo> <mi>Œ©</mi> <mo>,</mo>
    <mi>‚Ñ±</mi> <mo>,</mo> <mi>P</mi> <mo>}</mo> <mo>,</mo> <mi>ùíÆ</mi> <mo>=</mo> <mo>{</mo>
    <mi>B</mi> <mo>,</mo> <mi>S</mi> <mo>}</mo></mfenced></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: Assume a European call option written on the stock as a contingent claim. The
    payoff is
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="upper C Subscript upper T Baseline identical-to left-parenthesis
    upper S Subscript upper T Baseline minus upper K comma 0 right-parenthesis" display="block"><mrow><msub><mi>C</mi>
    <mi>T</mi></msub> <mo>‚â°</mo> <mrow><mo>(</mo> <msub><mi>S</mi> <mi>T</mi></msub>
    <mo>-</mo> <mi>K</mi> <mo>,</mo> <mn>0</mn> <mo>)</mo></mrow></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'with strike price <math><mrow><mi>K</mi><mo>‚àà</mo><msub><mi>‚Ñù</mi> <mrow><mn>‚â•0</mn></mrow></msub></mrow></math>
    . The price‚Äîhere, the *Monte Carlo estimator*‚Äîfor the call option is given as
    the expected (average) discounted payoff:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="upper C 0 equals e Superscript minus r upper T Baseline StartFraction
    1 Over upper I EndFraction sigma-summation Underscript i equals 1 Overscript upper
    I Endscripts max left-parenthesis upper S Subscript upper T Baseline left-parenthesis
    z Subscript i Baseline right-parenthesis minus upper K comma 0 right-parenthesis"
    display="block"><mrow><msub><mi>C</mi> <mn>0</mn></msub> <mo>=</mo> <msup><mi>e</mi>
    <mrow><mo>-</mo><mi>r</mi><mi>T</mi></mrow></msup> <mfrac><mn>1</mn> <mi>I</mi></mfrac>
    <munderover><mo>‚àë</mo> <mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow> <mi>I</mi></munderover>
    <mo movablelimits="true" form="prefix">max</mo> <mrow><mo>(</mo> <msub><mi>S</mi>
    <mi>T</mi></msub> <mrow><mo>(</mo> <msub><mi>z</mi> <mi>i</mi></msub> <mo>)</mo></mrow>
    <mo>-</mo> <mi>K</mi> <mo>,</mo> <mn>0</mn> <mo>)</mo></mrow></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'The model economy and the Monte Carlo‚Äìbased pricing approach are straightforward
    to implement in Python. [Figure¬†5-1](ch05_split_001.xhtml#bsm_01) shows the frequency
    distribution of the simulated stock price values, including the mean and the standard
    deviation around the mean:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '[![1](Images/1.png)](ch05_split_001.xhtml#co_static_economy_CO8-1)'
  prefs: []
  type: TYPE_NORMAL
- en: The initial stock price level.
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](ch05_split_001.xhtml#co_static_economy_CO8-2)'
  prefs: []
  type: TYPE_NORMAL
- en: The constant short rate.
  prefs: []
  type: TYPE_NORMAL
- en: '[![3](Images/3.png)](ch05_split_001.xhtml#co_static_economy_CO8-3)'
  prefs: []
  type: TYPE_NORMAL
- en: The volatility factor.
  prefs: []
  type: TYPE_NORMAL
- en: '[![4](Images/4.png)](ch05_split_001.xhtml#co_static_economy_CO8-4)'
  prefs: []
  type: TYPE_NORMAL
- en: The time horizon in year fractions.
  prefs: []
  type: TYPE_NORMAL
- en: '[![5](Images/5.png)](ch05_split_001.xhtml#co_static_economy_CO8-5)'
  prefs: []
  type: TYPE_NORMAL
- en: The number of states and also the number of simulations.
  prefs: []
  type: TYPE_NORMAL
- en: '[![6](Images/6.png)](ch05_split_001.xhtml#co_static_economy_CO8-6)'
  prefs: []
  type: TYPE_NORMAL
- en: Fixes the seed value for reproducibility.
  prefs: []
  type: TYPE_NORMAL
- en: '[![7](Images/7.png)](ch05_split_001.xhtml#co_static_economy_CO8-7)'
  prefs: []
  type: TYPE_NORMAL
- en: 'The core line of code: it implements the Monte Carlo simulation with `NumPy`
    in vectorized fashion, simulating `I` values in a single step.'
  prefs: []
  type: TYPE_NORMAL
- en: '[![8](Images/8.png)](ch05_split_001.xhtml#co_static_economy_CO8-9)'
  prefs: []
  type: TYPE_NORMAL
- en: The mean value as obtained from the simulated set of stock prices.
  prefs: []
  type: TYPE_NORMAL
- en: '[![9](Images/9.png)](ch05_split_001.xhtml#co_static_economy_CO8-10)'
  prefs: []
  type: TYPE_NORMAL
- en: The theoretically to-be-expected value of the stock price.
  prefs: []
  type: TYPE_NORMAL
- en: '[![10](Images/10.png)](ch05_split_001.xhtml#co_static_economy_CO8-11)'
  prefs: []
  type: TYPE_NORMAL
- en: These lines of code plot the simulation results as a histogram and add some
    major statistics.
  prefs: []
  type: TYPE_NORMAL
- en: '![ftwp 0501](Images/ftwp_0501.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 5-1\. Frequency distribution of simulated values for the stock price
    in Black-Scholes-Merton (1973)
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Having the simulated stock price values available makes European option pricing
    only a matter of two more vectorized operations:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '[![1](Images/1.png)](ch05_split_001.xhtml#co_static_economy_CO9-1)'
  prefs: []
  type: TYPE_NORMAL
- en: The strike price of the option.
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](ch05_split_001.xhtml#co_static_economy_CO9-2)'
  prefs: []
  type: TYPE_NORMAL
- en: The payoff vector of the option.
  prefs: []
  type: TYPE_NORMAL
- en: '[![3](Images/3.png)](ch05_split_001.xhtml#co_static_economy_CO9-3)'
  prefs: []
  type: TYPE_NORMAL
- en: The Monte Carlo estimator of the option price.
  prefs: []
  type: TYPE_NORMAL
- en: Completeness of Black-Scholes-Merton
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'What about the completeness of the Black-Scholes-Merton model economy <math
    alttext="script upper E Superscript upper B upper S upper M"><msup><mi>‚Ñ∞</mi>
    <mrow><mi>B</mi><mi>S</mi><mi>M</mi></mrow></msup></math> ? The previous section
    derives a Monte Carlo estimator for the (arbitrage) price of a European call option
    despite the fact that there are many more states of the economy, <math alttext="upper
    I much-greater-than 2"><mrow><mi>I</mi> <mo>‚â´</mo> <mn>2</mn></mrow></math> ,
    than financial assets traded, <math alttext="upper K equals 2"><mrow><mi>K</mi>
    <mo>=</mo> <mn>2</mn></mrow></math> . Two observations can be made:'
  prefs: []
  type: TYPE_NORMAL
- en: General incompleteness
  prefs: []
  type: TYPE_NORMAL
- en: In a wider sense, the economy is incomplete because not every contingent claim
    can be replicated by a portfolio of the traded assets and because there is not
    a unique martingale measure (see 2FTAP).
  prefs: []
  type: TYPE_NORMAL
- en: Specific completeness
  prefs: []
  type: TYPE_NORMAL
- en: In a narrow sense, the model is complete, because every contingent claim that
    can be represented as a function of the price vector of the stock <math alttext="upper
    C 1 equals f left-parenthesis upper S 1 squared right-parenthesis"><mrow><msub><mi>C</mi>
    <mn>1</mn></msub> <mo>=</mo> <mi>f</mi> <mrow><mo>(</mo> <msubsup><mi>S</mi> <mn>1</mn>
    <mn>2</mn></msubsup> <mo>)</mo></mrow></mrow></math> is replicable by positions
    in the bond and the stock.
  prefs: []
  type: TYPE_NORMAL
- en: When using Monte Carlo simulation to derive an estimator for the arbitrage price
    in the previous section, the fact is used that the model economy <math alttext="script
    upper E Superscript upper B upper S upper M"><msup><mi>‚Ñ∞</mi> <mrow><mi>B</mi><mi>S</mi><mi>M</mi></mrow></msup></math>
    is complete in the previous specific, narrow sense. The payoff of the European
    call option only depends on the future price vector of the stock. What is missing
    so far is the replication portfolio and the resulting arbitrage price calculation
    to verify that the Monte Carlo simulation approach is justified.
  prefs: []
  type: TYPE_NORMAL
- en: 'The `NumPy` function used so far to solve replication problems, `np.linalg.solve`,
    requires a square (market payoff) matrix. In the Black-Scholes-Merton economy
    with only two traded financial assets and many more possible future states, this
    prerequisite is not given. However, one can use a least-squares approach via `np.linalg.lstsq`
    to find a numerical solution to the replication problem:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '[![1](Images/1.png)](ch05_split_001.xhtml#co_static_economy_CO10-1)'
  prefs: []
  type: TYPE_NORMAL
- en: The arbitrarily fixed price for the bond.
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](ch05_split_001.xhtml#co_static_economy_CO10-2)'
  prefs: []
  type: TYPE_NORMAL
- en: The price vector today for the two traded financial assets.
  prefs: []
  type: TYPE_NORMAL
- en: '[![3](Images/3.png)](ch05_split_001.xhtml#co_static_economy_CO10-3)'
  prefs: []
  type: TYPE_NORMAL
- en: The future price vector of the bond given the initial price and the short rate.
  prefs: []
  type: TYPE_NORMAL
- en: '[![4](Images/4.png)](ch05_split_001.xhtml#co_static_economy_CO10-5)'
  prefs: []
  type: TYPE_NORMAL
- en: The resulting market payoff matrix, which is of rank 2 only‚Äîcompared to 10,000
    future states.
  prefs: []
  type: TYPE_NORMAL
- en: '[![5](Images/5.png)](ch05_split_001.xhtml#co_static_economy_CO10-7)'
  prefs: []
  type: TYPE_NORMAL
- en: This solves the replication problem through least-squares representation. For
    the call option replication, the bond is to be shorted (sold), and the stock is
    to be bought.
  prefs: []
  type: TYPE_NORMAL
- en: '[![6](Images/6.png)](ch05_split_001.xhtml#co_static_economy_CO10-9)'
  prefs: []
  type: TYPE_NORMAL
- en: The average replication error, resulting, for example, from floating point inaccuracies
    and the numerical methods used, is not exactly zero but really close to it.
  prefs: []
  type: TYPE_NORMAL
- en: '[![7](Images/7.png)](ch05_split_001.xhtml#co_static_economy_CO10-10)'
  prefs: []
  type: TYPE_NORMAL
- en: This calculates the arbitrage price given the (numerically) optimal replication
    portfolio. It is close to the Monte Carlo estimator from before.
  prefs: []
  type: TYPE_NORMAL
- en: Merton Jump-Diffusion Option Pricing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This section introduces another important model economy that dates back to Merton
    (1976) and adds a jump component to the stock price model of Black-Scholes-Merton
    (1973). The random jump component renders the model economy <math alttext="script
    upper M Superscript upper M Baseline 76"><msup><mi>‚Ñ≥</mi> <mrow><mi>M</mi><mn>76</mn></mrow></msup></math>
    incomplete in general. However, in the discrete setting of this chapter, one can
    apply the same numerical approaches for option pricing as introduced for <math
    alttext="script upper E Superscript upper B upper S upper M"><msup><mi>‚Ñ∞</mi>
    <mrow><mi>B</mi><mi>S</mi><mi>M</mi></mrow></msup></math> in the previous two
    sections. The model is called the *jump-diffusion* model, although a diffusion
    is only defined in a dynamic context.
  prefs: []
  type: TYPE_NORMAL
- en: In real financial time series, one observes jumps with some regularities. They
    might be caused by a stock market crash or by other rare and/or extreme events.
    The model by Merton (1976) allows us to explicitly model such rare events and
    their impact on the price of financial instruments. Models without jumps are often
    not well suited to explain certain characteristics and phenomena as regularly
    observed in financial time series. The model is also capable of modeling both
    positive and negative jumps. While a negative jump (large drop) might be observed
    in practice for stock indices, positive jumps (spikes) occur in practice, for
    example, in volatility indices.
  prefs: []
  type: TYPE_NORMAL
- en: The *Merton jump-diffusion economy* <math alttext="script upper E Superscript
    upper M Baseline 76"><msup><mi>‚Ñ∞</mi> <mrow><mi>M</mi><mn>76</mn></mrow></msup></math>
    is the same as the Black-Scholes-Merton economy <math alttext="script upper E
    Superscript upper B upper S upper M"><msup><mi>‚Ñ∞</mi> <mrow><mi>B</mi><mi>S</mi><mi>M</mi></mrow></msup></math>
    apart from the future price of the stock at time <math alttext="upper T"><mi>T</mi></math>
    , which can be simulated in this economy according to
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="upper S Subscript upper T Baseline left-parenthesis z Subscript
    i Baseline right-parenthesis equals upper S 0 dot left-parenthesis e Superscript
    left-parenthesis r minus r Super Subscript j Superscript minus StartFraction sigma
    squared Over 2 EndFraction right-parenthesis upper T plus sigma StartRoot upper
    T EndRoot z Super Subscript i Super Superscript 1 Superscript plus Baseline plus
    left-parenthesis e Superscript mu plus delta z Super Subscript i Super Superscript
    2 Superscript Baseline minus 1 right-parenthesis y Subscript i Baseline right-parenthesis
    comma i equals 1 comma 2 comma period period period comma upper I" display="block"><mrow><msub><mi>S</mi>
    <mi>T</mi></msub> <mrow><mo>(</mo> <msub><mi>z</mi> <mi>i</mi></msub> <mo>)</mo></mrow>
    <mo>=</mo> <msub><mi>S</mi> <mn>0</mn></msub> <mo>¬∑</mo> <mfenced separators=""
    open="(" close=")"><msup><mi>e</mi> <mrow><mfenced separators="" open="(" close=")"><mi>r</mi><mo>-</mo><msub><mi>r</mi>
    <mi>j</mi></msub> <mo>-</mo><mfrac><msup><mi>œÉ</mi> <mn>2</mn></msup> <mn>2</mn></mfrac></mfenced><mi>T</mi><mo>+</mo><mi>œÉ</mi><msqrt><mi>T</mi></msqrt><msubsup><mi>z</mi>
    <mi>i</mi> <mn>1</mn></msubsup> <mo>+</mo></mrow></msup> <mo>+</mo> <mfenced separators=""
    open="(" close=")"><msup><mi>e</mi> <mrow><mi>Œº</mi><mo>+</mo><mi>Œ¥</mi><msubsup><mi>z</mi>
    <mi>i</mi> <mn>2</mn></msubsup></mrow></msup> <mo>-</mo> <mn>1</mn></mfenced>
    <msub><mi>y</mi> <mi>i</mi></msub></mfenced> <mo>,</mo> <mi>i</mi> <mo>=</mo>
    <mn>1</mn> <mo>,</mo> <mn>2</mn> <mo>,</mo> <mo>.</mo> <mo>.</mo> <mo>.</mo> <mo>,</mo>
    <mi>I</mi></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'with the <math alttext="z Subscript i Superscript 1 Baseline comma z Subscript
    i Superscript 2"><mrow><msubsup><mi>z</mi> <mi>i</mi> <mn>1</mn></msubsup> <mo>,</mo>
    <msubsup><mi>z</mi> <mi>i</mi> <mn>2</mn></msubsup></mrow></math> being standard
    normally distributed and the <math alttext="y Subscript i"><msub><mi>y</mi> <mi>i</mi></msub></math>
    being Poisson distributed with intensity <math alttext="lamda"><mi>Œª</mi></math>
    (see Jacod and Protter (2004), chapter 4). The jumps are log-normally distributed
    with an expected value of <math alttext="mu"><mi>Œº</mi></math> and standard deviation
    of <math alttext="delta"><mi>Œ¥</mi></math> (see Jacod and Protter (2004), chapter
    7). The expected jump size is:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="r Subscript j Baseline equals lamda dot left-parenthesis e Superscript
    mu plus delta squared slash 2 Baseline minus 1 right-parenthesis" display="block"><mrow><msub><mi>r</mi>
    <mi>j</mi></msub> <mo>=</mo> <mi>Œª</mi> <mo>¬∑</mo> <mfenced separators="" open="("
    close=")"><msup><mi>e</mi> <mrow><mi>Œº</mi><mo>+</mo><msup><mi>Œ¥</mi> <mn>2</mn></msup>
    <mo>/</mo><mn>2</mn></mrow></msup> <mo>-</mo> <mn>1</mn></mfenced></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'Implementing and simulating this model in Python requires the definition of
    additional parameters and the simulation of three random variables. [Figure¬†5-2](ch05_split_001.xhtml#m76_01)
    shows the frequency distribution of the simulated values, which can become negative
    given the parameters assumed and the Python code used:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '[![1](Images/1.png)](ch05_split_001.xhtml#co_static_economy_CO11-1)'
  prefs: []
  type: TYPE_NORMAL
- en: Fixes the initial price vector of the two traded financial assets (bond and
    stock).
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](ch05_split_001.xhtml#co_static_economy_CO11-2)'
  prefs: []
  type: TYPE_NORMAL
- en: The first set of standard normally distributed random numbers.
  prefs: []
  type: TYPE_NORMAL
- en: '[![3](Images/3.png)](ch05_split_001.xhtml#co_static_economy_CO11-3)'
  prefs: []
  type: TYPE_NORMAL
- en: The second set of standard normally distributed random numbers.
  prefs: []
  type: TYPE_NORMAL
- en: '[![4](Images/4.png)](ch05_split_001.xhtml#co_static_economy_CO11-5)'
  prefs: []
  type: TYPE_NORMAL
- en: The set with Poisson distributed random numbers with intensity `lambda`.
  prefs: []
  type: TYPE_NORMAL
- en: '[![5](Images/5.png)](ch05_split_001.xhtml#co_static_economy_CO11-6)'
  prefs: []
  type: TYPE_NORMAL
- en: The simulation of the stock price values at <math alttext="upper T"><mi>T</mi></math>
    given the three sets of random numbers.
  prefs: []
  type: TYPE_NORMAL
- en: '[![6](Images/6.png)](ch05_split_001.xhtml#co_static_economy_CO11-7)'
  prefs: []
  type: TYPE_NORMAL
- en: Calculates the discounted mean value of the simulated stock price.
  prefs: []
  type: TYPE_NORMAL
- en: '![ftwp 0502](Images/ftwp_0502.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 5-2\. Frequency distribution of the simulated values for the stock price
    in Merton (1976)
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Adding a maximum function to the stock price, Monte Carlo simulation avoids
    negative values (see [Figure¬†5-3](ch05_split_001.xhtml#m76_02)):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '[![1](Images/1.png)](ch05_split_001.xhtml#co_static_economy_CO12-1)'
  prefs: []
  type: TYPE_NORMAL
- en: Maximum function‚Ä¶
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](ch05_split_001.xhtml#co_static_economy_CO12-2)'
  prefs: []
  type: TYPE_NORMAL
- en: ‚Ä¶avoids negative values for the stock price.
  prefs: []
  type: TYPE_NORMAL
- en: '![ftwp 0503](Images/ftwp_0503.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 5-3\. Simulated values (truncated) for the stock price in Merton (1976)
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'The final step is the pricing of the European call option through calculation
    of the Monte Carlo estimator and the approximate replication approach:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '[![1](Images/1.png)](ch05_split_001.xhtml#manual_co_static_economy_CO13-1)'
  prefs: []
  type: TYPE_NORMAL
- en: The Monte Carlo estimator for the European call option price.
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](ch05_split_001.xhtml#manual_co_static_economy_CO13-3)'
  prefs: []
  type: TYPE_NORMAL
- en: The approximate replication portfolio.
  prefs: []
  type: TYPE_NORMAL
- en: '[![3](Images/3.png)](ch05_split_001.xhtml#manual_co_static_economy_CO13-5)'
  prefs: []
  type: TYPE_NORMAL
- en: The replication error of the optimal portfolio.
  prefs: []
  type: TYPE_NORMAL
- en: '[![4](Images/4.png)](ch05_split_001.xhtml#manual_co_static_economy_CO13-6)'
  prefs: []
  type: TYPE_NORMAL
- en: The arbitrage price according to the optimal portfolio.
  prefs: []
  type: TYPE_NORMAL
- en: Incompleteness Through Jumps
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: While the Black-Scholes-Merton (1973) model is complete in a narrow sense, the
    addition of a jump component in the Merton (1976) jump diffusion model makes it
    incomplete in a wide sense. This means that even the introduction of additional
    financial assets cannot make it complete. The fact that the jump component can
    take on an infinite number of values would require an infinite number of additional
    financial assets to make the model complete.
  prefs: []
  type: TYPE_NORMAL
- en: Representative Agent Pricing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Assume again the general static economy <math alttext="script upper E"><mi>‚Ñ∞</mi></math>
    now populated by a *representative, expected utility maximizing agent*. The agent
    is endowed with initial wealth today of <math><mrow><mi>w</mi><mo>‚àà</mo><msub><mi>‚Ñù</mi>
    <mrow><mn>>0</mn></mrow></msub></mrow></math> and has preferences that can be
    represented by a utility function <math alttext="u colon c right-arrow double-struck
    upper R comma u left-parenthesis c right-parenthesis right-arrow from bar ln c"><mrow><mi>u</mi>
    <mo>:</mo> <mi>c</mi> <mo>‚Üí</mo> <mi>‚Ñù</mi> <mo>,</mo> <mi>u</mi> <mo>(</mo> <mi>c</mi>
    <mo>)</mo> <mo>‚Ü¶</mo> <mo form="prefix">ln</mo> <mi>c</mi></mrow></math> . Formally,
    the problem of the agent is the same as in [Chapter¬†4](ch04_split_000.xhtml#optimality_equilibrium):'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="StartLayout 1st Row 1st Column Blank 2nd Column max Underscript
    phi Endscripts 3rd Column bold upper E Superscript upper P Baseline left-parenthesis
    u left-parenthesis script upper M dot phi right-parenthesis right-parenthesis
    2nd Row 1st Column w 2nd Column equals 3rd Column script upper M 0 dot phi EndLayout"
    display="block"><mtable><mtr><mtd><munder><mo movablelimits="true" form="prefix">max</mo>
    <mi>œï</mi></munder></mtd> <mtd><mrow><msup><mi>ùêÑ</mi> <mi>P</mi></msup> <mfenced
    separators="" open="(" close=")"><mi>u</mi> <mo>(</mo> <mi>‚Ñ≥</mi> <mo>¬∑</mo> <mi>œï</mi>
    <mo>)</mo></mfenced></mrow></mtd></mtr> <mtr><mtd><mi>w</mi></mtd> <mtd><mo>=</mo></mtd>
    <mtd><mrow><msub><mi>‚Ñ≥</mi> <mn>0</mn></msub> <mo>¬∑</mo> <mi>œï</mi></mrow></mtd></mtr></mtable></math>
  prefs: []
  type: TYPE_NORMAL
- en: The difference is that there are now potentially many more future states possible
    and many more financial assets traded.
  prefs: []
  type: TYPE_NORMAL
- en: 'Furthermore, assuming that the complete set of Arrow-Debreu securities‚Äîwith
    a net supply of one for each security‚Äîis traded, <math alttext="upper K equals
    upper I"><mrow><mi>K</mi> <mo>=</mo> <mi>I</mi></mrow></math> , the *market payoff
    matrix* is:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="script upper M equals Start 4 By 4 Matrix 1st Row 1st Column
    1 2nd Column 0 3rd Column period period period 4th Column 0 2nd Row 1st Column
    0 2nd Column 1 3rd Column period period period 4th Column 0 3rd Row 1st Column
    period period period 2nd Column period period period 3rd Column period period
    period 4th Column period period period 4th Row 1st Column 0 2nd Column 0 3rd Column
    period period period 4th Column 1 EndMatrix" display="block"><mrow><mi>‚Ñ≥</mi>
    <mo>=</mo> <mfenced open="(" close=")"><mtable><mtr><mtd><mn>1</mn></mtd> <mtd><mn>0</mn></mtd>
    <mtd><mrow><mo>.</mo> <mo>.</mo> <mo>.</mo></mrow></mtd> <mtd><mn>0</mn></mtd></mtr>
    <mtr><mtd><mn>0</mn></mtd> <mtd><mn>1</mn></mtd> <mtd><mrow><mo>.</mo> <mo>.</mo>
    <mo>.</mo></mrow></mtd> <mtd><mn>0</mn></mtd></mtr> <mtr><mtd><mrow><mo>.</mo>
    <mo>.</mo> <mo>.</mo></mrow></mtd> <mtd><mrow><mo>.</mo> <mo>.</mo> <mo>.</mo></mrow></mtd>
    <mtd><mrow><mo>.</mo> <mo>.</mo> <mo>.</mo></mrow></mtd> <mtd><mrow><mo>.</mo>
    <mo>.</mo> <mo>.</mo></mrow></mtd></mtr> <mtr><mtd><mn>0</mn></mtd> <mtd><mn>0</mn></mtd>
    <mtd><mrow><mo>.</mo> <mo>.</mo> <mo>.</mo></mrow></mtd> <mtd><mn>1</mn></mtd></mtr></mtable></mfenced></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'The optimization problem in unconstrained form is according to the Theorem
    of Lagrange given by:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="max Underscript phi comma lamda Endscripts f left-parenthesis
    phi comma lamda right-parenthesis equals bold upper E Superscript upper P Baseline
    left-parenthesis u left-parenthesis script upper M dot phi right-parenthesis right-parenthesis
    minus lamda dot left-parenthesis script upper M script 0 dot phi minus w right-parenthesis"
    display="block"><mrow><munder><mo movablelimits="true" form="prefix">max</mo>
    <mrow><mi>œï</mi><mo>,</mo><mi>Œª</mi></mrow></munder> <mi>f</mi> <mrow><mo>(</mo>
    <mi>œï</mi> <mo>,</mo> <mi>Œª</mi> <mo>)</mo></mrow> <mo>=</mo> <msup><mi>ùêÑ</mi>
    <mi>P</mi></msup> <mfenced separators="" open="(" close=")"><mi>u</mi> <mo>(</mo>
    <mi>‚Ñ≥</mi> <mo>¬∑</mo> <mi>œï</mi> <mo>)</mo></mfenced> <mo>-</mo> <mi>Œª</mi> <mo>¬∑</mo>
    <mrow><mo>(</mo> <msub><mi>‚Ñ≥</mi> <mn mathvariant="script">0</mn></msub> <mo>¬∑</mo>
    <mi>œï</mi> <mo>-</mo> <mi>w</mi> <mo>)</mo></mrow></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'From this, the first-order conditions for all portfolio positions <math alttext="phi
    Subscript i Baseline comma i equals 1 comma 2 comma period period period comma
    upper I"><mrow><msub><mi>œï</mi> <mi>i</mi></msub> <mo>,</mo> <mi>i</mi> <mo>=</mo>
    <mn>1</mn> <mo>,</mo> <mn>2</mn> <mo>,</mo> <mo>.</mo> <mo>.</mo> <mo>.</mo> <mo>,</mo>
    <mi>I</mi></mrow></math> ‚Äîwhere <math alttext="i"><mi>i</mi></math> refers to
    the Arrow-Debreu security that pays off in state <math alttext="omega Subscript
    i"><msub><mi>œâ</mi> <mi>i</mi></msub></math> ‚Äîare:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="StartFraction normal partial-differential f Over normal partial-differential
    phi Subscript i Baseline EndFraction equals upper P left-parenthesis omega Subscript
    i Baseline right-parenthesis minus lamda dot upper S 0 Superscript i Baseline
    equals 0 comma i equals 1 comma 2 comma period period period comma upper I" display="block"><mrow><mfrac><mrow><mi>‚àÇ</mi><mi>f</mi></mrow>
    <mrow><mi>‚àÇ</mi><msub><mi>œï</mi> <mi>i</mi></msub></mrow></mfrac> <mo>=</mo> <mi>P</mi>
    <mrow><mo>(</mo> <msub><mi>œâ</mi> <mi>i</mi></msub> <mo>)</mo></mrow> <mo>-</mo>
    <mi>Œª</mi> <mo>¬∑</mo> <msubsup><mi>S</mi> <mn>0</mn> <mi>i</mi></msubsup> <mo>=</mo>
    <mn>0</mn> <mo>,</mo> <mi>i</mi> <mo>=</mo> <mn>1</mn> <mo>,</mo> <mn>2</mn> <mo>,</mo>
    <mo>.</mo> <mo>.</mo> <mo>.</mo> <mo>,</mo> <mi>I</mi></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: '<math alttext="upper S 0 Superscript i"><msubsup><mi>S</mi> <mn>0</mn> <mi>i</mi></msubsup></math>
    is the price of the Arrow-Debreu security paying off in state <math alttext="omega
    Subscript i"><msub><mi>œâ</mi> <mi>i</mi></msub></math> . The relative prices between
    all Arrow-Debreu securities are accordingly determined by the probabilities for
    the respective payoff states to unfold:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="StartFraction upper S 0 Superscript i Baseline Over upper S 0
    Superscript j Baseline EndFraction equals StartFraction upper P left-parenthesis
    omega Subscript i Baseline right-parenthesis Over upper P left-parenthesis omega
    Subscript j Baseline right-parenthesis EndFraction comma omega Subscript i Baseline
    comma omega Subscript j Baseline element-of normal upper Omega" display="block"><mrow><mfrac><msubsup><mi>S</mi>
    <mn>0</mn> <mi>i</mi></msubsup> <msubsup><mi>S</mi> <mn>0</mn> <mi>j</mi></msubsup></mfrac>
    <mo>=</mo> <mfrac><mrow><mi>P</mi><mo>(</mo><msub><mi>œâ</mi> <mi>i</mi></msub>
    <mo>)</mo></mrow> <mrow><mi>P</mi><mo>(</mo><msub><mi>œâ</mi> <mi>j</mi></msub>
    <mo>)</mo></mrow></mfrac> <mo>,</mo> <msub><mi>œâ</mi> <mi>i</mi></msub> <mo>,</mo>
    <msub><mi>œâ</mi> <mi>j</mi></msub> <mo>‚àà</mo> <mi>Œ©</mi></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'Fixing <math alttext="w equals 1"><mrow><mi>w</mi> <mo>=</mo> <mn>1</mn></mrow></math>
    , one obtains for the absolute prices:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="upper S 0 Superscript i Baseline equals upper P left-parenthesis
    omega Subscript i Baseline right-parenthesis" display="block"><mrow><msubsup><mi>S</mi>
    <mn>0</mn> <mi>i</mi></msubsup> <mo>=</mo> <mi>P</mi> <mrow><mo>(</mo> <msub><mi>œâ</mi>
    <mi>i</mi></msub> <mo>)</mo></mrow></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: In words, the price for the Arrow-Debreu security paying off in state <math
    alttext="omega Subscript i"><msub><mi>œâ</mi> <mi>i</mi></msub></math> equals the
    probability <math alttext="upper P left-parenthesis omega Subscript i Baseline
    right-parenthesis"><mrow><mi>P</mi> <mo>(</mo> <msub><mi>œâ</mi> <mi>i</mi></msub>
    <mo>)</mo></mrow></math> for this state to unfold.
  prefs: []
  type: TYPE_NORMAL
- en: This little analysis shows that the formalism of solving the representative
    agent problem for pricing purposes is more or less the same in the general static
    economy as compared to the simple economies of [Chapter¬†4](ch04_split_000.xhtml#optimality_equilibrium).
  prefs: []
  type: TYPE_NORMAL
- en: Conclusions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter covers *general static economies* with a potentially large number
    of states‚Äîfor the Black-Scholes-Merton (1973) model simulation, for example, 10,000
    different states are assumed. The additional formalism introduced pays off pretty
    well because it allows for much more realistic models that can be applied in practice,
    for instance, to value European put or call options on a stock index or a single
    stock.
  prefs: []
  type: TYPE_NORMAL
- en: Python in combination with `NumPy` proves powerful for the modeling of such
    economies with much larger market payoff matrices than seen before. Monte Carlo
    simulation is also accomplished both efficiently and quickly by the use of vectorization
    techniques. Using least-squares regression techniques, approximate replication
    portfolios are efficiently derived in such a setting.
  prefs: []
  type: TYPE_NORMAL
- en: However, static economies are limited per se with regard to what they can model
    in the financial space. For instance, early exercise features like those seen
    in the context of American options cannot be accounted for. This shortcoming will
    be overcome when enlarging the relevant set of points in time‚Äîmaking thereby the
    next natural step to dynamic economies‚Äîin the next chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Further Resources
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Papers cited in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Black, Fischer and Myron Scholes. 1973\. ‚ÄúThe Pricing of Options and Corporate
    Liabilities.‚Äù *Journal of Political Economy* 81 (3): 638‚Äì659.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Harrison, Michael and David Kreps. 1979\. ‚ÄúMartingales and Arbitrage in Multiperiod
    Securities Markets.‚Äù *Journal of Economic Theory* (20): 381‚Äì408.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Harrison, Michael and Stanley Pliska. 1981\. ‚ÄúMartingales and Stochastic Integrals
    in the Theory of Continuous Trading.‚Äù *Stochastic Processes and their Applications*
    (11): 215‚Äì260.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Merton, Robert. 1973\. ‚ÄúTheory of Rational Option Pricing.‚Äù *Bell Journal of
    Economics and Management Science* (4): 141‚Äì183.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Merton, Robert. 1976\. ‚ÄúOption Pricing when the Underlying Stock Returns are
    Discontinuous.‚Äù *Journal of Financial Economics* 3 (3): 125‚Äì144.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Books cited in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Aleskerov, Fuad, Hasan Ersel, and Dmitri Piontkovski. 2011\. *Linear Algebra
    for Economists*. Heidelberg: Springer.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Delbaen, Freddy and Walter Schachermayer. 2006\. *The Mathematics of Arbitrage*.
    Berlin: Springer Verlag.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Duffie, Darrell. 1988\. *Security Markets‚ÄîStochastic Models*. San Diego: Academic
    Press.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Jacod, Jean and Philip Protter. 2004\. *Probability Essentials*. Berlin and
    Heidelberg: Springer.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Milne, Frank. 1995\. *Finance Theory and Asset Pricing*. New York: Oxford University
    Press.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Pliska, Stanley. 1997\. *Introduction to Mathematical Finance.* Malden and
    Oxford: Blackwell Publishers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ^([1](ch05_split_000.xhtml#idm44853688595608-marker)) The notation is changed
    here from <math alttext="i"><mi>i</mi></math> to <math alttext="r"><mi>r</mi></math>
    to emphasize that the *short rate* is meant from now on.
  prefs: []
  type: TYPE_NORMAL
