- en: Chapter 10\. Candlestick-Based Trend-Following Strategies
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Pattern recognition is only one part of the equation. When you a find a pattern,
    you are most likely to use it within a wider trading framework, as trading systems
    relying purely on candlestick patterns are unlikely to yield consistent and stable
    positive returns.
  prefs: []
  type: TYPE_NORMAL
- en: This chapter discusses some examples of strategies you can use to filter the
    patterns using specific technical rules when dealing with trend following. Each
    market has its own characteristics and must have optimized strategy parameters,
    which is why I recommend you focus on understanding the main ideas and concepts
    rather than take away the exact parameters of the strategies presented in this
    chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Ideally, the strategies should help you understand how to combine the different
    candlestick patterns (classic and modern) with some technical indicators. I also
    discuss the indicators in this chapter so that you understand their mechanisms
    and their weaknesses.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: '*Filtering* refers to the concept of choosing the signals that have a better
    probability of providing a positive return.'
  prefs: []
  type: TYPE_NORMAL
- en: Combining the Double Trouble Pattern with the RSI
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As a reminder, the Double Trouble pattern is a modern trend-following candlestick
    configuration that incorporates volatility in its characteristics (calculated
    using the ATR indicator). The RSI is an indicator that, as discussed previously
    in the book, reinterprets the market’s momentum into values between 0 and 100
    to better understand the current dynamic.
  prefs: []
  type: TYPE_NORMAL
- en: Even though the RSI is a contrarian indicator, I will show you a technique for
    using it within a trend-following framework.
  prefs: []
  type: TYPE_NORMAL
- en: This strategy uses the RSI as a filter for the detected Double Trouble patterns.
    This means that whenever a pattern is found, it is run through an RSI filter to
    validate the signal.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: The RSI can also be a momentum gauge. Therefore, values above 50 represent bullish
    momentum (uptrend) while values below 50 represent bearish momentum (downtrend).
    This is one way to use the RSI as a trend-following indicator.
  prefs: []
  type: TYPE_NORMAL
- en: 'The trading conditions of the strategy are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: A long signal is generated whenever a bullish Double Trouble pattern appears
    while the 14-period RSI is above 50.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A short signal is generated whenever a bearish Double Trouble pattern appears
    while the 14-period RSI is below 50.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The filter is therefore the value of the RSI relative to the neutrality level
    of 50\. This is used to increase the hit ratio of the trades using the invisible
    hand mechanism.^([1](ch10.xhtml#idm46762853123120)) The basic intuition of the
    strategy is to take only bullish signals in a bullish regime and only bearish
    signals in a bearish regime.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following code snippet shows how to code the signal function of the strategy:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Notice the addition of the filter through the RSI line of code stating its value
    relative to the neutrality level 50\. [Figure 10-1](#figure10-1) shows a signal
    chart on USDCAD.
  prefs: []
  type: TYPE_NORMAL
- en: You can always tweak the strategy so that it better fits your profile and the
    market’s characteristics. However, you should keep in mind that the RSI is not
    a miraculous predictor of trend as it is price-derived and therefore lagging (that
    is, it does not predict the future but simply tells the story of the past). Also,
    the RSI tends to break and reintegrate the 50 level many times, which may give
    faulty signals.
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/mfpr_1001.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10-1\. Signal chart of the strategy using the Double Trouble pattern
    and the RSI
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Combining the Three Candles Pattern with Moving Averages
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Moving averages are great trend filters and help in determining whether to take
    the signal or not. Remember, a *moving average* is a mean that follows the market
    price using a rolling window. This strategy uses two trend-following elements
    from different fields^([2](ch10.xhtml#idm46762852840176)) in order to give a signal.
  prefs: []
  type: TYPE_NORMAL
- en: The Three Candles pattern is a trend-following configuration composed of big-bodied
    homogenous successive candlesticks that confirm the underlying trend. Generally,
    a bullish Three Candles pattern is called Three White Soldiers, while the bearish
    version is called Three Black Crows.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Similar to using the RSI as a trend follower, using moving averages is extremely
    useful in determining the underlying trend.
  prefs: []
  type: TYPE_NORMAL
- en: When you see a market above its moving average (for example, a 100-period moving
    average), it is generally a sign that a bullish regime is in progress, and when
    you see a market below its moving average, it is generally a sign that a bearish
    regime is in progress, thus indicating which type of signal to prefer.
  prefs: []
  type: TYPE_NORMAL
- en: 'The trading conditions of the strategy are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: A long signal is generated whenever a Three White Soldiers pattern appears while
    the market price is above its 100-period moving average.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A short signal is generated whenever a Three Black Crows pattern appears while
    the market price is below its 100-period moving average.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: The trend-following strategies use a combination of a candlestick pattern and
    a trend filter that increases the conviction in the trade. Although historical
    back-testing shows that the hit ratio is not always increased with the filter,
    for some markets, the ratio is significantly enhanced.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following code snippet shows how to code the signal function of the strategy:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[Figure 10-2](#figure10-2) shows an example of a signal chart with a 100-period
    moving average (the swooping line starting at the upper left), which acts as a
    filter. Notice how you see only bullish signals when the market is above its moving
    average and see only bearish signals when the market is below its moving average.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/mfpr_1002.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10-2\. Signal chart of the strategy using the Three Candles pattern and
    moving averages
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: The strategy is best used in confirmation of other trend-following strategies.
    For example, a fundamental trader has a carry trade in USDJPY and sees that a
    Three White Soldiers pattern has emerged while the market is above its 100-period
    moving average. This observation can serve as a conviction enhancer or a confirmation
    to add more to the position. After all, trading is a numbers game, and stacking
    up the odds on your side increases the probability of gain.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: A *fundamental trader* is a trader who relies on economic and financial analysis
    instead of technical analysis to make their decisions.
  prefs: []
  type: TYPE_NORMAL
- en: A *carry trade* is a currency position that entails going long on (buying) the
    currency with the higher interest rate and shorting (selling) the currency with
    the lower interest rate to benefit from the interest rate differential.
  prefs: []
  type: TYPE_NORMAL
- en: Combining the Bottle Pattern with the Stochastic Oscillator
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Similar to the RSI, the stochastic oscillator is a momentum indicator heavily
    used in technical trading and known both to the retail and professional communities.
    The *stochastic oscillator* uses a basic normalization function to trap the values
    between 0 and 100\. It is easier to calculate than the RSI. Before discussing
    the oscillator, let’s look at the concept of *normalization*.
  prefs: []
  type: TYPE_NORMAL
- en: 'Whenever you have an array of different unbounded values such as the market
    price (or any other random set of time series), you can normalize the values between
    0 and 1, with 0 being the lowest value for a specific time window and 1 being
    the highest value for a specific time window. Take a look at this table:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Time step | 1 | 2 | 3 | 4 | 5 |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| **Value** | 10 | 40 | 5 | 90 | 25 |'
  prefs: []
  type: TYPE_TB
- en: '| Normalized value | 0.06 | 0.41 | **0.00** | **1.00** | 0.24 |'
  prefs: []
  type: TYPE_TB
- en: The table shows that when the variable moves in time from period 1 to period
    5, the normalized values show that they can be bounded between 0 and 1, with 0
    referring to the lowest value (5) and 1 referring to the highest value (90). Similarly,
    notice how the value that lies approximately between 0 and 1 has a normalized
    value of 0.41, which means it is probably the middle value. This is normal as
    40 is around half the distance between 5 and 90.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following formula shows how to normalize any value between 0 and 1 given
    a specific time window:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="x Subscript Normalized Baseline equals StartFraction x Subscript
    Original Baseline minus x Subscript Low Baseline Over x Subscript High Baseline
    minus x Subscript Low Baseline EndFraction"><mrow><msub><mi>x</mi> <mtext>Normalized</mtext></msub>
    <mo>=</mo> <mfrac><mrow><msub><mi>x</mi> <mtext>Original</mtext></msub> <mo>-</mo><msub><mi>x</mi>
    <mtext>Low</mtext></msub></mrow> <mrow><msub><mi>x</mi> <mtext>High</mtext></msub>
    <mo>-</mo><msub><mi>x</mi> <mtext>Low</mtext></msub></mrow></mfrac></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s try an example using the previous table. Take the value 10 and try to
    normalize it using the formula. You should have the following calculation:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="x Subscript Normalized Baseline equals StartFraction 10 minus
    5 Over 90 minus 5 EndFraction equals 0.06"><mrow><msub><mi>x</mi> <mtext>Normalized</mtext></msub>
    <mo>=</mo> <mfrac><mrow><mn>10</mn><mo>-</mo><mn>5</mn></mrow> <mrow><mn>90</mn><mo>-</mo><mn>5</mn></mrow></mfrac>
    <mo>=</mo> <mn>0</mn> <mo lspace="0%" rspace="0%">.</mo> <mn>06</mn></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'The stochastic oscillator normalizes the market price in a modified way by
    incorporating the highs and lows in the formula so that it becomes as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="Stochastic value Subscript i Baseline equals StartFraction Close
    Subscript i Baseline minus Low Subscript i minus n colon i Baseline Over High
    Subscript i minus n colon i Baseline minus Low Subscript i minus n colon i Baseline
    EndFraction"><mrow><mtext>Stochastic</mtext> <msub><mtext>value</mtext> <mi>i</mi></msub>
    <mo>=</mo> <mfrac><mrow><msub><mtext>Close</mtext> <mi>i</mi></msub> <mo>-</mo><msub><mtext>Low</mtext>
    <mrow><mi>i</mi><mo>-</mo><mi>n</mi><mo>:</mo><mi>i</mi></mrow></msub></mrow>
    <mrow><msub><mtext>High</mtext> <mrow><mi>i</mi><mo>-</mo><mi>n</mi><mo>:</mo><mi>i</mi></mrow></msub>
    <mo>-</mo><msub><mtext>Low</mtext> <mrow><mi>i</mi><mo>-</mo><mi>n</mi><mo>:</mo><mi>i</mi></mrow></msub></mrow></mfrac></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: The formula means that the current value of the stochastic is the difference
    between the current close price minus the lowest low price for a set lookback
    period divided by the difference between the highest high price and the lowest
    low price for the same lookback period.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: The difference between the simple normalization function and the stochastic
    oscillator’s function is the addition of the high price and low price to the latter.
  prefs: []
  type: TYPE_NORMAL
- en: 'The stochastic oscillator can be described as the smoothed version of the previous
    formula, and it is generally charted with a short-term moving average calculated
    on its value, called the *signal line*. To create the default stochastic oscillator,
    follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Normalize the values using the stochastic oscillator’s function using a rolling
    window of 14 periods.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Smooth out the result from the first step with a three-period moving average.
    This is the stochastic oscillator.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Calculate the signal line, which is another three-period moving average calculated
    on the values of the second step. This is the signal line.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: The first moving average calculated on the stochastic oscillator is referred
    to as *smoothing*, while the signal line is referred to as *slowing*.
  prefs: []
  type: TYPE_NORMAL
- en: Similar to the RSI, the stochastic oscillator is bounded between 0 and 100 and
    has an oversold zone below 20 and an overbought zone above 80\. Because of its
    formula, it is relatively more volatile than the RSI and tends to move from one
    extreme to another faster.
  prefs: []
  type: TYPE_NORMAL
- en: Many techniques are possible with the stochastic oscillator, but the one that
    interests us is the cross between it and its signal line. This is referred to
    as the *cross technique* and is famous in contrarian strategies. (However, I am
    using it with a trend-following candlestick pattern and therefore turning it into
    a trend-following technique.)
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: You must be careful with the stochastic oscillator as it tends to stick to the
    extremes from time to time due to the nature of the normalization function, thus
    providing false signals. The stickiness effect is manifested when the oscillator
    remains in the oversold and overbought zones for extended periods of time.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following snippet shows how to code the stochastic oscillator:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'The trading conditions of the strategy are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: A long signal is generated whenever a bullish Bottle pattern appears while the
    stochastic oscillator is above its signal line.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A short signal is generated whenever a bearish Bottle pattern appears while
    the stochastic oscillator is below its signal line.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following code snippet shows how to code the signal function of the strategy:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[Figure 10-3](#figure10-3) shows the signal chart on USDCHF.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/mfpr_1003.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10-3\. Signal chart of the strategy using the Bottle pattern and the
    stochastic oscillator
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Combining the Marubozu Pattern with K’s Volatility Bands
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let’s get to square one with the first candlestick pattern covered in this book.
    The Marubozu pattern can be considered the most powerful candlestick since it
    has no wicks, meaning that the market went straight from one point to another
    without hesitation.
  prefs: []
  type: TYPE_NORMAL
- en: This strategy uses a concept known as a *volatility band*, which is a framing
    technique that envelops the market price to deliver dynamic support and resistance
    levels.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: There are many types of volatility bands. The most well-known are Bollinger
    bands. The reliability of different types of volatility bands depends on the underlying
    markets and their parameters.
  prefs: []
  type: TYPE_NORMAL
- en: Before you can grasp K’s volatility bands, you have to understand the basics
    of Bollinger bands. Developed by John Bollinger, the bands are more statistical
    in nature than technical.
  prefs: []
  type: TYPE_NORMAL
- en: 'Consider the following list: {11, 4, 5, 20}. Given the four values, how would
    you describe the elements? Generally, the best measure that describes elements
    in a list is the mean. It is also the best estimate of the next expected value
    (if you were to add a new element chronologically). To calculate the mean of a
    list, follow this formula:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="chi equals StartFraction 1 Over n EndFraction left-parenthesis
    sigma-summation Underscript i equals 1 Overscript n Endscripts x Subscript i Baseline
    right-parenthesis equals StartFraction x 1 plus x 2 plus period period period
    plus x Subscript n Baseline Over n EndFraction"><mrow><mi>χ</mi> <mo>=</mo> <mfrac><mn>1</mn>
    <mi>n</mi></mfrac> <mrow><mo>(</mo> <msubsup><mo>∑</mo> <mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow>
    <mi>n</mi></msubsup> <msub><mi>x</mi> <mi>i</mi></msub> <mo>)</mo></mrow> <mo>=</mo>
    <mfrac><mrow><msub><mi>x</mi> <mn>1</mn></msub> <mo>+</mo><msub><mi>x</mi> <mn>2</mn></msub>
    <mo>+</mo><mo lspace="0%" rspace="0%">.</mo><mo lspace="0%" rspace="0%">.</mo><mo
    lspace="0%" rspace="0%">.</mo><mo>+</mo><msub><mi>x</mi> <mi>n</mi></msub></mrow>
    <mi>n</mi></mfrac></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'Therefore, according to the formula, you must sum them and divide the result
    by their quantity:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="chi equals StartFraction 11 plus 4 plus 5 plus 20 Over 4 EndFraction
    equals 10"><mrow><mi>χ</mi> <mo>=</mo> <mfrac><mrow><mn>11</mn><mo>+</mo><mn>4</mn><mo>+</mo><mn>5</mn><mo>+</mo><mn>20</mn></mrow>
    <mn>4</mn></mfrac> <mo>=</mo> <mn>10</mn></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: Hence, the mean of the list is 10. Remember the concept of volatility from previous
    chapters where you use the ATR to approximate the fluctuations of the price relative
    to a past period. The bands use another technique to calculate volatility, which
    is the one used in descriptive statistics, that is, standard deviation.
  prefs: []
  type: TYPE_NORMAL
- en: '*Standard deviation* is the square root of the squared deviations of each variable
    from the group’s mean. The concept may sound complicated, but let’s simplify it
    in a few steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Calculate the distance of each variable (the close price) from the mean of the
    lookback period at the same time step.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Square the distances so that you do not get negative values.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Calculate the mean of these squared distances. The result is called the *variance*.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Calculate the square root of the variance. The result is called the *standard
    deviation*.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Taking the square root in the last step allows you to compare apples to apples
    with the mean.
  prefs: []
  type: TYPE_NORMAL
- en: 'Mathematically speaking, the formula of the standard deviation is expressed
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="sigma equals StartRoot StartFraction 1 Over n EndFraction sigma-summation
    Underscript i equals 1 Overscript n Endscripts left-parenthesis x Subscript i
    Baseline minus chi right-parenthesis squared EndRoot"><mrow><mi>σ</mi> <mo>=</mo>
    <msqrt><mrow><mfrac><mn>1</mn> <mi>n</mi></mfrac> <msubsup><mo>∑</mo> <mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow>
    <mi>n</mi></msubsup> <msup><mrow><mo>(</mo><msub><mi>x</mi> <mi>i</mi></msub>
    <mo>-</mo><mi>χ</mi><mo>)</mo></mrow> <mn>2</mn></msup></mrow></msqrt></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'Now that you know how to calculate a moving average, you can simply apply a
    rolling standard deviation measure, which is the same as a moving average except
    you are calculating a rolling volatility. Bollinger bands are found as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: The upper Bollinger band is the sum of the current 20-period moving average
    and the current standard deviation multiplied by 2.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The lower Bollinger band is the difference between the current 20-period moving
    average and the current standard deviation multiplied by 2.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: The constant (2 by default) is multiplied by the standard deviation’s value,
    and then the product is summed or subtracted from the current value of the moving
    average.
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 10-4](#figure10-4) shows an example with Bollinger bands applied on
    USDCHF. Some traders like to keep the middle line (which is simply the 20-period
    moving average). However, with Bollinger bands, the line does not provide as much
    value as the bands themselves.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/mfpr_1004.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10-4\. An example of Bollinger bands applied on USDCHF
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Generally, when the market reaches the lower Bollinger band, it is believed
    to be oversold, and a bullish reacted is expected. Similarly, when the market
    reaches the upper Bollinger band, it is believed to be overbought, and a bearish
    reacted is expected.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s now look at K’s volatility bands, which are inspired by Bollinger bands.
    They follow these conditions:'
  prefs: []
  type: TYPE_NORMAL
- en: Calculate the mean between the highest highs and the lowest lows of the last
    20 periods.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Calculate the highest standard deviation measure of the last 20 periods.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The upper volatility band is the sum of the result from the first step and the
    second step multiplied by 2.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The lower volatility band is the difference between the result from the first
    step and the second step multiplied by 2.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Similarly, the constant (2 by default) is multiplied by the standard deviation’s
    maximum value, and then the product is summed or subtracted from the current value
    of the mean of the maximum highs and lows.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following code snippet shows the function to code K’s volatility bands:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Keeping the middle line is essential to the strategy as it is the main filter.
    Therefore, with K’s volatility bands, the middle line is present in the chart.
  prefs: []
  type: TYPE_NORMAL
- en: Note that the words *volatility *and *standard deviation* are used interchangeably.
    [Figure 10-5](#figure10-5) shows an example with K’s volatility bands applied
    on USDCHF.
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/mfpr_1005.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10-5\. An example of K’s volatility bands applied on USDCHF
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Let’s now discuss the strategy. The trading conditions are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: A long signal is generated whenever a bullish Marubozu pattern appears while
    the market price is below the middle line.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A short signal is generated whenever a bearish Marubozu pattern appears while
    the market price is above the middle line.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following code snippet shows how to code the signal function of the strategy:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[Figure 10-6](#figure10-6) shows the signal chart on AUDNZD.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/mfpr_1006.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10-6\. Signal chart of the strategy using the Marubozu pattern and K’s
    volatility bands
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Optionally, you can consider the following more restraining conditions (however,
    the signals will be less frequent):'
  prefs: []
  type: TYPE_NORMAL
- en: A long signal is generated whenever a bullish Marubozu pattern appears while
    the market price is below the lower volatility band.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A short signal is generated whenever a bearish Marubozu pattern appears while
    the market price is above the upper volatility band.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To sum up, the strategy can have fewer signals, but intuitively, it has a strong
    foundation pertaining to the most powerful candlestick (in terms of amplitude)
    and the statistical extreme.
  prefs: []
  type: TYPE_NORMAL
- en: Combining the H Pattern with the Trend Intensity Index
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The *trend intensity index* (TII) measures the strength of the trend. It is
    a simple calculation created out of a moving average and price deviations around
    it to show, in a bounded appearance, the intensity of the trend. To build the
    indicator, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Calculate a 20-period moving average on the market price.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Calculate the deviations of the market price from the moving average. This is
    done by doing so on two columns. If the close price is greater than its moving
    average, then the first column is filled by the difference between the two (up
    variable), and if the current market price is lower than its moving average, then
    the second column is filled by the difference between the two (down variable).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Count the values where the market was above its moving average and where it
    was below it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Counting the values with certain conditions can be accomplished with the `numpy`
    function `count_nonzero()`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Apply the following formula to find the TII (by default, a 20-period lookback):'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <math alttext="upper T upper I upper I Subscript i Baseline equals left-parenthesis
    StartFraction Number of up Over Number of up plus Number of down EndFraction right-parenthesis
    x Baseline 100"><mrow><mi>T</mi> <mi>I</mi> <msub><mi>I</mi> <mi>i</mi></msub>
    <mo>=</mo> <mrow><mo>(</mo> <mfrac><mrow><mtext>Number</mtext><mtext>of</mtext><mtext>up</mtext></mrow>
    <mrow><mtext>Number</mtext><mtext>of</mtext><mtext>up</mtext><mo>+</mo><mtext>Number</mtext><mtext>of</mtext><mtext>down</mtext></mrow></mfrac>
    <mo>)</mo></mrow> <mi>x</mi> <mn>100</mn></mrow></math>
  prefs: []
  type: TYPE_NORMAL
- en: 'To code the TII in Python, use the following function:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Typically, a strong bullish momentum is in progress when the TII is above 50,
    and a strong bearish momentum is in progress when the TII is below 50.
  prefs: []
  type: TYPE_NORMAL
- en: 'The trading conditions of the strategy are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: A long signal is generated whenever a bullish H pattern appears while the 20-period
    TII is above 50.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A short signal is generated whenever a bearish H pattern appears while the 20-period
    TII is below 50.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: It is preferable to tweak the lookback of the TII to find the right adjustment.
    The H pattern, being a reversal-invalidation pattern (thus, a trend confirmation
    pattern), could work well with an indicator that shows the strength of the underlying
    trend.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following code snippet shows how to code the signal function of the strategy:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '[Figure 10-7](#figure10-7) shows the signal chart on EURGBP.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/mfpr_1007.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10-7\. Signal chart of the strategy using the H pattern and the trend
    intensity index
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: The graph shows that there was one signal that coincided with the bullish conditions.
  prefs: []
  type: TYPE_NORMAL
- en: To sum up this chapter, it is important to combine the right patterns with the
    right indicators, and this is done through back-testing. Naturally, the combinations
    presented are merely examples, and more powerful combinations can be created by
    fusing other indicators with other patterns. It is also interesting to know that
    you can include multiple patterns in your strategies rather than combine just
    one pattern with one indicator.
  prefs: []
  type: TYPE_NORMAL
- en: ^([1](ch10.xhtml#idm46762853123120-marker)) The *invisible hand mechanism* involves
    using trades in tandem with the trend, for example, only taking buy signals in
    a bullish trend while disregarding any sell signals.
  prefs: []
  type: TYPE_NORMAL
- en: ^([2](ch10.xhtml#idm46762852840176-marker)) The Three Candles pattern comes
    from the field of pattern recognition, while moving averages come from the field
    of statistics and trend-following technical indicators.
  prefs: []
  type: TYPE_NORMAL
