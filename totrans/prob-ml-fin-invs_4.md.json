["```py\n# Import libraries and FRED datareader\nimport numpy as np\nimport pandas as pd\nimport pandas_datareader.data as pdr\nfrom datetime import datetime\nstart = datetime(1982, 1, 1)\nend = datetime(2022, 9, 30)\n# NBER business cycle classification\nrecession = pdr.DataReader('USREC', 'fred', start, end)\n# Percentage of time the US economy was in recession since 1982\nround(recession['USREC'].sum()/recession['USREC'].count()*100, 2)\n```", "```py\n# Install Yahoo finance package\n!pip install yfinance\n\n# Import relevant Python packages\nimport statsmodels.api as sm\nimport pandas as pd\nimport yfinance as yf\n\nimport matplotlib.pyplot as plt\nplt.style.use('seaborn')\nfrom datetime import datetime\n#Import financial data\nstart = datetime(2017, 8, 3)\nend = datetime(2022, 8, 6)\n\n# S&P 500 index is a proxy for the market\nmarket = yf.Ticker('SPY').history(start=start, end=end)\n# Ticker symbol for Apple, the most liquid stock in the world\nstock = yf.Ticker('AAPL').history(start=start, end=end)\n# 10 year US treasury note is the proxy for risk free rate\nriskfree_rate = yf.Ticker('^TNX').history(start=start, end=end)\n# Create dataframe to hold daily returns of securities\ndaily_returns = pd.DataFrame()\ndaily_returns['market'] = market['Close'].pct_change(1)*100\ndaily_returns['stock'] = stock['Close'].pct_change(1)*100\n# Compounded daily rate based on 360 days \n# for the calendar year used in the bond market\ndaily_returns['riskfree'] = (1 + riskfree_rate['Close']) ** (1/360) - 1\n# Plot and summarize the distribution of daily returns\nplt.hist(daily_returns['market']), plt.title('Distribution of Market (SPY) \nDaily Returns'), plt.xlabel('Daily Percentage Returns'), \nplt.ylabel('Frequency'), plt.show()\n# Analyze descriptive statistics\nprint(\"Descriptive Statistics of the Market's daily percentage returns:\\n{}\".\nformat(daily_returns['market'].describe()))\n\nplt.hist(daily_returns['stock']), \nplt.title('Distribution of Apple Inc. (AAPL) Daily Returns'), \nplt.xlabel('Daily Percentage Returns'), plt.ylabel('Frequency'), plt.show()\n# Analyze descriptive statistics\nprint(\"Descriptive Statistics of the Apple's daily percentage returns:\\n{}\"\n.format(daily_returns['stock'].describe()))\n\nplt.hist(daily_returns['riskfree']), plt.title('Distribution of the riskfree \nrate (TNX) Daily Returns'), plt.xlabel('Daily Percentage Returns'), \nplt.ylabel('Frequency'), plt.show()\n# Analyze descriptive statistics\nprint(\"Descriptive Statistics of the 10 year note daily percentage returns:\\n{}\"\n.format(daily_returns['riskfree'].describe()))\n# Examine missing rows in the dataframe\nmarket.index.difference(riskfree_rate.index)\n# Fill rows with previous day's risk-free rate since daily rates \n# are generally stable\ndaily_returns = daily_returns.ffill()\n# Drop NaNs in first row because of percentage calculations\ndaily_returns = daily_returns.dropna()\n# Check dataframe for null values\ndaily_returns.isnull().sum()\n# Check first five rows of dataframe\ndaily_returns.head()\n# AAPL's Market Model based on daily excess returns\n\n# Daily excess returns of AAPL\ny = daily_returns['stock'] - daily_returns['riskfree']\n# Daily excess returns of the market\nx = daily_returns['market'] - daily_returns['riskfree']\n\n# Plot the data\nplt.scatter(x,y)\n\n# Add the constant vector to obtain the intecept\nx = sm.add_constant(x)\n\n# Use ordinary least squares algorithm to find the line of best fit\nmarket_model = sm.OLS(y, x).fit()\n\n# Plot the line of best fit\nplt.plot(x, x*market_model.params[0]+market_model.params['const'])\nplt.title('Market Model of AAPL'), plt.xlabel('SPY Daily Excess Returns'), \nplt.ylabel('AAPL Daily Excess Returns'), plt.show();\n\n# Display the values of alpha and beta of AAPL's market model\nprint(\"According to AAPL's Market Model, the security had a realized Alpha of \n{0}% and Beta of {1}\".format(round(market_model.params['const'],2), \nround(market_model.params[0],2)))\n# Summarize and analyze the statistics of your linear regression\nprint(\"The Market Model of AAPL is summarized below:\\n{}\"\n.format(market_model.summary()));\n```", "```py\nThe Market Model of AAPL is summarized below:\nOLS Regression Results\n=========================================================================\nDep. Variable:      y                       R-squared:          0.624\nModel:              OLS                     Adj. R-squared:     0.624\nMethod:             Least Squares           F-statistic:        2087.\nDate:               Sun, 07 Aug 2022        Prob (F-statistic): 2.02e-269\nTime:               06:28:33                Log-Likelihood:     -2059.8\nNo. Observations:   1260                    AIC:                4124.\nDf Residuals:       1258                    BIC:                4134.\nDf Model:           1\nCovariance Type:    nonrobust \n========================================================================\n        coef        std err     t        P>|t|     [0.025      0.975]\nconst   0.0710      0.035     2.028      0.043     0.002       0.140\n0       1.2385      0.027     45.684     0.000     1.185       1.292\n========================================================================\nOmnibus:        202.982             Durbin-Watson:          1.848\nProb(Omnibus):  0.000               Jarque-Bera (JB):       1785.931\nSkew:           0.459               Prob(JB):               0.00\nKurtosis:       8.760               Cond. No.               1.30\n======================================================================\nWarnings:\n[1] Standard Errors assume that the covariance matrix of the errors \nis correctly specified.\n\n```", "```py\nThe Market Model of AAPL is summarized below:\nOLS Regression Results\n=========================================================================\nDep. Variable:      y                       R-squared:          0.270\nModel:              OLS                     Adj. R-squared:     0.270\nMethod:             Least Squares           F-statistic:        2331.\nDate:               Sun, 07 Aug 2022        Prob (F-statistic): 0.00\nTime:               07:03:34                Log-Likelihood:     -14187.\nNo. Observations:   6293                    AIC:                2.838e+04\nDf Residuals:       6291                    BIC:                2.839e+04\nDf Model:           1\nCovariance Type:    nonrobust \n========================================================================\n        coef        std err     t        P>|t|     [0.025      0.975]\nconst   0.1063      0.029     3.656      0.000     0.049       0.163\n0       1.1208      0.023     48.281     0.000     1.075       1.166\n========================================================================\nOmnibus:        2566.940             Durbin-Watson:          2.020\nProb(Omnibus):  0.000                Jarque-Bera (JB):       66298.825\nSkew:          -0.736                Prob(JB):               0.00\nKurtosis:       53.262               Cond. No.               1.25\n======================================================================\nWarnings:\n[1] Standard Errors assume that the covariance matrix of the errors \nis correctly specified.\n\n```"]