- en: Chapter 4\. Data-Driven Finance
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If artificial intelligence is the new electricity, big data is the oil that
    powers the generators.
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  id: totrans-2
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Kai-Fu Lee (2018)
  id: totrans-3
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Nowadays, analysts sift through non-traditional information such as satellite
    imagery and credit card data, or use artificial intelligence techniques such as
    machine learning and natural language processing to glean fresh insights from
    traditional sources such as economic data and earnings-call transcripts.
  id: totrans-4
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Robin Wigglesworth (2019)
  id: totrans-6
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This chapter discusses central aspects of data-driven finance. For the purposes
    of this book, *data-driven finance* is understood to be a financial context (theory,
    model, application, and so on) that is primarily driven by and based on insights
    gained from data.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: '[“Scientific Method”](#scientific_method) discusses the scientific method,
    which is about generally accepted principles that should guide scientific effort.
    [“Financial Econometrics and Regression”](#financial_econometrics) is about financial
    econometrics and related topics. [“Data Availability”](#data_availability) sheds
    light on which types of (financial) data are available today and in what quality
    and quantity via programmatic APIs. [“Normative Theories Revisited”](#norm_theories_revisited)
    revisits the normative theories of [Chapter 3](ch03.xhtml#normative_finance) and
    analyzes them based on real financial time series data. Also based on real financial
    data, [“Debunking Central Assumptions”](#debunking_assumptions) debunks two of
    the most commonly found assumptions in financial models and theories: *normality
    of returns* and *linear* *relationships*.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: Scientific Method
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The *scientific method* refers to a set of generally accepted principles that
    should guide any scientific project. [Wikipedia](https://oreil.ly/AX8jv) defines
    the scientific method as follows:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: The scientific method is an empirical method of acquiring knowledge that has
    characterized the development of science since at least the 17th century. It involves
    careful observation, applying rigorous skepticism about what is observed, given
    that cognitive assumptions can distort how one interprets the observation. It
    involves formulating hypotheses, via induction, based on such observations; experimental
    and measurement-based testing of deductions drawn from the hypotheses; and refinement
    (or elimination) of the hypotheses based on the experimental findings. These are
    principles of the scientific method, as distinguished from a definitive series
    of steps applicable to all scientific enterprises.
  id: totrans-11
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Given this definition, normative finance, as discussed in [Chapter 3](ch03.xhtml#normative_finance),
    is in stark contrast to the scientific method. Normative financial theories mostly
    rely on assumptions and axioms in combination with *deduction* as the major analytical
    method to arrive at their central results.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: Expected utility theory (EUT) *assumes* that agents have the same utility function
    no matter what state of the world unfolds and that they maximize expected utility
    under conditions of uncertainty.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mean-variance portfolio (MVP) theory describes how investors *should* invest
    under conditions of uncertainty *assuming* that only the expected return and the
    expected volatility of a portfolio over one period count.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The capital asset pricing model (CAPM) *assumes* that only the nondiversifiable
    market risk *explains* the expected return and the expected volatility of a stock
    over one period.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Arbitrage pricing theory (APT) *assumes* that a number of identifiable risk
    factors *explains* the expected return and the expected volatility of a stock
    over time; admittedly, compared to the other theories, the formulation of APT
    is rather broad and allows for wide-ranging interpretations.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What characterizes the aforementioned normative financial theories is that they
    were originally derived under certain assumptions and axioms using “pen and paper”
    only, without any recourse to real-world data or observations. From a historical
    point of view, many of these theories were rigorously tested against real-world
    data only long after their publication dates. This can be explained primarily
    with better data availability and increased computational capabilities over time.
    After all, data and computation are the main ingredients for the application of
    statistical methods in practice. The discipline at the intersection of mathematics,
    statistics, and finance that applies such methods to financial market data is
    typically called *financial econometrics*, the topic of the next section.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: Financial Econometrics and Regression
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Adapting the definition provided by [Investopedia](https://oreil.ly/QErpB)
    for *econometrics*, one can define *financial econometrics* as follows:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: '[Financial] econometrics is the quantitative application of statistical and
    mathematical models using [financial] data to develop financial theories or test
    existing hypotheses in finance and to forecast future trends from historical data.
    It subjects real-world [financial] data to statistical trials and then compares
    and contrasts the results against the [financial] theory or theories being tested.'
  id: totrans-20
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Alexander (2008b) provides a thorough and broad introduction to the field of
    financial econometrics. The second chapter of the book covers single- and multifactor
    models, such as the CAPM and APT. Alexander (2008b) is part of a series of four
    books called *Market Risk Analysis*. The first in the series, Alexander (2008a),
    covers theoretical background concepts, topics, and methods, such as MVP theory
    and the CAPM themselves. The book by Campbell (2018) is another comprehensive
    resource for financial theory and related econometric research.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: One of the major tools in financial econometrics is *regression*, in both its
    univariate and multivariate forms. Regression is also a central tool in *statistical
    learning* in general. What is the difference between traditional mathematics and
    statistical learning? Although there is no general answer to this question (after
    all, statistics is a sub-field of mathematics), a simple example should emphasize
    a major difference relevant to the context of this book.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 金融计量学中的一个主要工具是*回归*，无论是其一元还是多元形式。回归也是一般*统计学习*中的核心工具。传统数学和统计学习之间有什么区别？虽然对于这个问题没有普遍的答案（毕竟，统计学是数学的一个子领域），一个简单的例子应强调与本书内容相关的一个主要区别。
- en: 'First is the standard mathematical way. Assume a mathematical function is given
    as follows:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 首先是标准的数学方法。假设数学函数如下所示：
- en: <math alttext="f colon double-struck upper R right-arrow double-struck upper
    R Subscript plus Baseline comma x right-arrow from bar 2 plus one-half x" display="block"><mrow><mi>f</mi>
    <mo>:</mo> <mi>ℝ</mi> <mo>→</mo> <msub><mi>ℝ</mi> <mo>+</mo></msub> <mo>,</mo>
    <mi>x</mi> <mo>↦</mo> <mn>2</mn> <mo>+</mo> <mfrac><mn>1</mn> <mn>2</mn></mfrac>
    <mi>x</mi></mrow></math>
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="f colon double-struck upper R right-arrow double-struck upper
    R Subscript plus Baseline comma x right-arrow from bar 2 plus one-half x" display="block"><mrow><mi>f</mi>
    <mo>:</mo> <mi>ℝ</mi> <mo>→</mo> <msub><mi>ℝ</mi> <mo>+</mo></msub> <mo>,</mo>
    <mi>x</mi> <mo>↦</mo> <mn>2</mn> <mo>+</mo> <mfrac><mn>1</mn> <mn>2</mn></mfrac>
    <mi>x</mi></mrow></math>
- en: 'Given multiple values of <math alttext="x Subscript i Baseline comma i equals
    1 comma 2 comma ellipsis comma n"><mrow><msub><mi>x</mi> <mi>i</mi></msub> <mo>,</mo>
    <mi>i</mi> <mo>=</mo> <mn>1</mn> <mo>,</mo> <mn>2</mn> <mo>,</mo> <mo>...</mo>
    <mo>,</mo> <mi>n</mi></mrow></math> , one can derive function values for <math
    alttext="f"><mi>f</mi></math> by applying the above definition:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 给定多个值 <math alttext="x 下标 i"><msub><mi>x</mi> <mi>i</mi></msub></math> ，其中 <math
    alttext="i">i</math> 等于1、2、...、n，可以通过上述定义得到 <math alttext="f"><mi>f</mi></math>
    的函数值：
- en: <math alttext="y Subscript i Baseline equals f left-parenthesis x Subscript
    i Baseline right-parenthesis comma i equals 1 comma 2 comma ellipsis comma n"
    display="block"><mrow><msub><mi>y</mi> <mi>i</mi></msub> <mo>=</mo> <mi>f</mi>
    <mrow><mo>(</mo> <msub><mi>x</mi> <mi>i</mi></msub> <mo>)</mo></mrow> <mo>,</mo>
    <mi>i</mi> <mo>=</mo> <mn>1</mn> <mo>,</mo> <mn>2</mn> <mo>,</mo> <mo>...</mo>
    <mo>,</mo> <mi>n</mi></mrow></math>
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="y Subscript i Baseline equals f left-parenthesis x Subscript
    i Baseline right-parenthesis comma i equals 1 comma 2 comma ellipsis comma n"
    display="block"><mrow><msub><mi>y</mi> <mi>i</mi></msub> <mo>=</mo> <mi>f</mi>
    <mrow><mo>(</mo> <msub><mi>x</mi> <mi>i</mi></msub> <mo>)</mo></mrow> <mo>,</mo>
    <mi>i</mi> <mo>=</mo> <mn>1</mn> <mo>,</mo> <mn>2</mn> <mo>,</mo> <mo>...</mo>
    <mo>,</mo> <mi>n</mi></mrow></math>
- en: 'The following Python code illustrates this based on a simple numerical example:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的Python代码基于一个简单的数值例子说明了这一点：
- en: '[PRE0]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Second is the approach taken in statistical learning. Whereas in the preceding
    example, the function comes first and then the data is derived, this sequence
    is reversed in statistical learning. Here, the data is generally given and a functional
    relationship is to be found. In this context, <math alttext="x"><mi>x</mi></math>
    is often called the *independent* variable and <math alttext="y"><mi>y</mi></math>
    the *dependent* variable. Consequently, consider the following data:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 其次是统计学习中采用的方法。在前面的例子中，函数先给出，然后数据派生出来，而在统计学习中，这个顺序是颠倒的。在这里，通常给定数据，需要找到一个函数关系。在这个背景下，<math
    alttext="x"><mi>x</mi></math> 经常被称为*自变量*，而 <math alttext="y"><mi>y</mi></math>
    则被称为*因变量*。因此，请考虑以下数据：
- en: <math alttext="left-parenthesis x Subscript i Baseline comma y Subscript i Baseline
    right-parenthesis comma i equals 1 comma 2 comma ellipsis comma n" display="block"><mrow><mo>(</mo>
    <msub><mi>x</mi> <mi>i</mi></msub> <mo>,</mo> <msub><mi>y</mi> <mi>i</mi></msub>
    <mo>)</mo> <mo>,</mo> <mi>i</mi> <mo>=</mo> <mn>1</mn> <mo>,</mo> <mn>2</mn> <mo>,</mo>
    <mo>...</mo> <mo>,</mo> <mi>n</mi></mrow></math>
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="left-parenthesis x Subscript i Baseline comma y Subscript i Baseline
    right-parenthesis comma i equals 1 comma 2 comma ellipsis comma n" display="block"><mrow><mo>(</mo>
    <msub><mi>x</mi> <mi>i</mi></msub> <mo>,</mo> <msub><mi>y</mi> <mi>i</mi></msub>
    <mo>)</mo> <mo>,</mo> <mi>i</mi> <mo>=</mo> <mn>1</mn> <mo>,</mo> <mn>2</mn> <mo>,</mo>
    <mo>...</mo> <mo>,</mo> <mi>n</mi></mrow></math>
- en: 'The problem is to find, for example, parameters <math alttext="alpha comma
    beta"><mrow><mi>α</mi> <mo>,</mo> <mi>β</mi></mrow></math> such that:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 问题是找到例如参数 <math alttext="alpha comma beta"><mrow><mi>α</mi> <mo>,</mo> <mi>β</mi></mrow></math>
    ，使得：
- en: <math alttext="ModifyingAbove f With caret left-parenthesis x Subscript i Baseline
    right-parenthesis identical-to alpha plus beta x Subscript i Baseline equals ModifyingAbove
    y With caret Subscript i Baseline almost-equals y Subscript i Baseline comma i
    equals 1 comma 2 comma ellipsis comma n" display="block"><mrow><mover accent="true"><mi>f</mi>
    <mo>^</mo></mover> <mrow><mo>(</mo> <msub><mi>x</mi> <mi>i</mi></msub> <mo>)</mo></mrow>
    <mo>≡</mo> <mi>α</mi> <mo>+</mo> <mi>β</mi> <msub><mi>x</mi> <mi>i</mi></msub>
    <mo>=</mo> <msub><mover accent="true"><mi>y</mi> <mo>^</mo></mover> <mi>i</mi></msub>
    <mo>≈</mo> <msub><mi>y</mi> <mi>i</mi></msub> <mo>,</mo> <mi>i</mi> <mo>=</mo>
    <mn>1</mn> <mo>,</mo> <mn>2</mn> <mo>,</mo> <mo>...</mo> <mo>,</mo> <mi>n</mi></mrow></math>
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="ModifyingAbove f With caret left-parenthesis x Subscript i Baseline
    right-parenthesis identical-to alpha plus beta x Subscript i Baseline equals ModifyingAbove
    y With caret Subscript i Baseline almost-equals y Subscript i Baseline comma i
    equals 1 comma 2 comma ellipsis comma n" display="block"><mrow><mover accent="true"><mi>f</mi>
    <mo>^</mo></mover> <mrow><mo>(</mo> <msub><mi>x</mi> <mi>i</mi></msub> <mo>)</mo></mrow>
    <mo>≡</mo> <mi>α</mi> <mo>+</mo> <mi>β</mi> <msub><mi>x</mi> <mi>i</mi></msub>
    <mo>=</mo> <msub><mover accent="true"><mi>y</mi> <mo>^</mo></mover> <mi>i</mi></msub>
    <mo>≈</mo> <msub><mi>y</mi> <mi>i</mi></msub> <mo>,</mo> <mi>i</mi> <mo>=</mo>
    <mn>1</mn> <mo>,</mo> <mn>2</mn> <mo>,</mo> <mo>...</mo> <mo>,</mo> <mi>n</mi></mrow></math>
- en: 'Another way of writing this is by including residual values <math alttext="epsilon
    Subscript i Baseline comma i equals 1 comma 2 comma ellipsis comma n"><mrow><msub><mi>ϵ</mi>
    <mi>i</mi></msub> <mo>,</mo> <mi>i</mi> <mo>=</mo> <mn>1</mn> <mo>,</mo> <mn>2</mn>
    <mo>,</mo> <mo>...</mo> <mo>,</mo> <mi>n</mi></mrow></math> :'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种写法是包括残差值 <math alttext="epsilon 下标 i"><msub><mi>ϵ</mi> <mi>i</mi></msub></math>：
- en: <math alttext="alpha plus beta x Subscript i Baseline plus epsilon Subscript
    i Baseline equals y Subscript i Baseline comma i equals 1 comma 2 comma ellipsis
    comma n" display="block"><mrow><mi>α</mi> <mo>+</mo> <mi>β</mi> <msub><mi>x</mi>
    <mi>i</mi></msub> <mo>+</mo> <msub><mi>ϵ</mi> <mi>i</mi></msub> <mo>=</mo> <msub><mi>y</mi>
    <mi>i</mi></msub> <mo>,</mo> <mi>i</mi> <mo>=</mo> <mn>1</mn> <mo>,</mo> <mn>2</mn>
    <mo>,</mo> <mo>...</mo> <mo>,</mo> <mi>n</mi></mrow></math>
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="alpha plus beta x Subscript i Baseline plus epsilon Subscript
    i Baseline equals y Subscript i Baseline comma i equals 1 comma 2 comma ellipsis
    comma n" display="block"><mrow><mi>α</mi> <mo>+</mo> <mi>β</mi> <msub><mi>x</mi>
    <mi>i</mi></msub> <mo>+</mo> <msub><mi>ϵ</mi> <mi>i</mi></msub> <mo>=</mo> <msub><mi>y</mi>
    <mi>i</mi></msub> <mo>,</mo> <mi>i</mi> <mo>=</mo> <mn>1</mn> <mo>,</mo> <mn>2</mn>
    <mo>,</mo> <mo>...</mo> <mo>,</mo> <mi>n</mi></mrow></math>
- en: 'In the context of ordinary least-squares (OLS) regression, <math alttext="alpha
    comma beta"><mrow><mi>α</mi> <mo>,</mo> <mi>β</mi></mrow></math> are chosen to
    minimize the mean-squared error between the approximated values <math alttext="ModifyingAbove
    y With caret Subscript i"><msub><mover accent="true"><mi>y</mi> <mo>^</mo></mover>
    <mi>i</mi></msub></math> and the real values <math alttext="y Subscript i"><msub><mi>y</mi>
    <mi>i</mi></msub></math> . The minimization problem, then, is as follows:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在普通最小二乘（OLS）回归的背景下，选择 <math alttext="alpha comma beta"><mrow><mi>α</mi> <mo>,</mo>
    <mi>β</mi></mrow></math> 使得近似值 <math alttext="ModifyingAbove y With caret 下标 i"><msub><mover
    accent="true"><mi>y</mi> <mo>^</mo></mover> <mi>i</mi></msub></math> 与实际值 <math
    alttext="y 下标 i"><msub><mi>y</mi> <mi>i</mi></msub></math> 之间的均方误差最小化问题如下：
- en: <math alttext="min Underscript alpha comma beta Endscripts StartFraction 1 Over
    n EndFraction sigma-summation Underscript i Overscript n Endscripts left-parenthesis
    ModifyingAbove y With caret Subscript i Baseline minus y Subscript i Baseline
    right-parenthesis squared" display="block"><mrow><munder><mo movablelimits="true"
    form="prefix">min</mo> <mrow><mi>α</mi><mo>,</mo><mi>β</mi></mrow></munder> <mfrac><mn>1</mn>
    <mi>n</mi></mfrac> <munderover><mo>∑</mo> <mi>i</mi> <mi>n</mi></munderover> <msup><mrow><mo>(</mo><msub><mover
    accent="true"><mi>y</mi> <mo>^</mo></mover> <mi>i</mi></msub> <mo>-</mo><msub><mi>y</mi>
    <mi>i</mi></msub> <mo>)</mo></mrow> <mn>2</mn></msup></mrow></math>
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="min Underscript alpha comma beta Endscripts StartFraction 1 Over
    n EndFraction sigma-summation Underscript i Overscript n Endscripts left-parenthesis
    ModifyingAbove y With caret Subscript i Baseline minus y Subscript i Baseline
    right-parenthesis squared" display="block"><mrow><munder><mo movablelimits="true"
    form="prefix">min</mo> <mrow><mi>α</mi><mo>,</mo><mi>β</mi></mrow></munder> <mfrac><mn>1</mn>
    <mi>n</mi></mfrac> <munderover><mo>∑</mo> <mi>i</mi> <mi>n</mi></munderover> <msup><mrow><mo>(</mo><msub><mover
    accent="true"><mi>y</mi> <mo>^</mo></mover> <mi>i</mi></msub> <mo>-</mo><msub><mi>y</mi>
    <mi>i</mi></msub> <mo>)</mo></mrow> <mn>2</mn></msup></mrow></math>
- en: 'In the case of *simple OLS regression*, as described previously, the optimal
    solutions are known in closed form and are as follows:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在*简单的OLS回归*的情况下，如前所述，最优解以封闭形式已知，如下所示：
- en: <math alttext="StartLayout Enlarged left-brace 1st Row  beta equals StartFraction
    Cov left-parenthesis x comma y right-parenthesis Over Var left-parenthesis x right-parenthesis
    EndFraction 2nd Row  alpha equals y overbar minus beta x overbar EndLayout" display="block"><mfenced
    separators="" open="{" close=""><mtable><mtr><mtd columnalign="left"><mrow><mi>β</mi>
    <mo>=</mo> <mfrac><mrow><mtext>Cov</mtext><mo>(</mo><mi>x</mi><mo>,</mo><mi>y</mi><mo>)</mo></mrow>
    <mtext>Var(x)</mtext></mfrac></mrow></mtd></mtr> <mtr><mtd columnalign="left"><mrow><mi>α</mi>
    <mo>=</mo> <mover accent="true"><mi>y</mi> <mo>¯</mo></mover> <mo>-</mo> <mi>β</mi>
    <mover accent="true"><mi>x</mi> <mo>¯</mo></mover></mrow></mtd></mtr></mtable></mfenced></math>
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="StartLayout Enlarged left-brace 1st Row  beta equals StartFraction
    Cov left-parenthesis x comma y right-parenthesis Over Var left-parenthesis x right-parenthesis
    EndFraction 2nd Row  alpha equals y overbar minus beta x overbar EndLayout" display="block"><mfenced
    separators="" open="{" close=""><mtable><mtr><mtd columnalign="left"><mrow><mi>β</mi>
    <mo>=</mo> <mfrac><mrow><mtext>Cov</mtext><mo>(</mo><mi>x</mi><mo>,</mo><mi>y</mi><mo>)</mo></mrow>
    <mtext>Var(x)</mtext></mfrac></mrow></mtd></mtr> <mtr><mtd columnalign="left"><mrow><mi>α</mi>
    <mo>=</mo> <mover accent="true"><mi>y</mi> <mo>¯</mo></mover> <mo>-</mo> <mi>β</mi>
    <mover accent="true"><mi>x</mi> <mo>¯</mo></mover></mrow></mtd></mtr></mtable></mfenced></math>
- en: Here, <math alttext="Cov left-parenthesis right-parenthesis"><mrow><mtext>Cov</mtext>
    <mo>(</mo> <mo>)</mo></mrow></math> stands for the *covariance*, <math alttext="Var
    left-parenthesis right-parenthesis"><mrow><mtext>Var</mtext> <mo>(</mo> <mo>)</mo></mrow></math>
    for the *variance*, and <math alttext="x overbar comma y overbar"><mrow><mover
    accent="true"><mi>x</mi> <mo>¯</mo></mover> <mo>,</mo> <mover accent="true"><mi>y</mi>
    <mo>¯</mo></mover></mrow></math> for the *mean values* of <math alttext="x comma
    y"><mrow><mi>x</mi> <mo>,</mo> <mi>y</mi></mrow></math> .
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: 'Returning to the preceding numerical example, these insights can be used to
    derive optimal parameters <math alttext="alpha comma beta"><mrow><mi>α</mi> <mo>,</mo>
    <mi>β</mi></mrow></math> and, in this particular case, to recover the original
    definition of <math alttext="f left-parenthesis x right-parenthesis"><mrow><mi>f</mi>
    <mo>(</mo> <mi>x</mi> <mo>)</mo></mrow></math> :'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[![1](Images/1.png)](#co_data_driven_finance_CO1-1)'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="beta"><mi>β</mi></math> as derived from the covariance matrix
    and the variance
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](#co_data_driven_finance_CO1-3)'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="alpha"><mi>α</mi></math> as derived from <math alttext="beta"><mi>β</mi></math>
    and the mean values
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: '[![3](Images/3.png)](#co_data_driven_finance_CO1-5)'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: Estimated values <math alttext="ModifyingAbove y With caret Subscript i Baseline
    comma i equals 1 comma 2 comma ellipsis comma n"><mrow><msub><mover accent="true"><mi>y</mi>
    <mo>^</mo></mover> <mi>i</mi></msub> <mo>,</mo> <mi>i</mi> <mo>=</mo> <mn>1</mn>
    <mo>,</mo> <mn>2</mn> <mo>,</mo> <mo>...</mo> <mo>,</mo> <mi>n</mi></mrow></math>
    , given <math alttext="alpha comma beta"><mrow><mi>α</mi> <mo>,</mo> <mi>β</mi></mrow></math>
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: '[![4](Images/4.png)](#co_data_driven_finance_CO1-6)'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: Checks whether <math alttext="ModifyingAbove y With caret Subscript i Baseline
    comma y Subscript i Baseline"><mrow><msub><mover accent="true"><mi>y</mi> <mo>^</mo></mover>
    <mi>i</mi></msub> <mo>,</mo> <msub><mi>y</mi> <mi>i</mi></msub></mrow></math>
    values are numerically equal
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: 'The preceding example and those in [Chapter 1](ch01.xhtml#artificial_intelligence)
    illustrate that the application of OLS regression to a given data set is in general
    straightforward. There are more reasons why OLS regression has become one of the
    central tools in econometrics and financial econometrics. Among them are the following:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: Centuries old
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: The least-squares approach, particularly in combination with regression, has
    been used for more than 200 years.^([1](ch04.xhtml#idm45625324920136))
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: Simplicity
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: The mathematics behind OLS regression is easy to understand and easy to implement
    in programming.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: Scalability
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: There is basically no limit regarding the data size to which OLS regression
    can be applied.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: Flexibility
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: OLS regression can be applied to a wide range of problems and data sets.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: Speed
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: OLS regression is fast to evaluate, even on larger data sets.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: Availability
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: Efficient implementations in Python and many other programming languages are
    readily available.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: Python及许多其他编程语言中提供了高效的实现。
- en: However, as easy and straightforward as the application of OLS regression might
    be in general, the method rests on a number of assumptions—most of them related
    to the residuals—that are not always satisfied in practice.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，尽管OLS回归方法通常易于应用且直接，但该方法基于一些假设——大多数与残差有关——在实践中并不总是满足。
- en: Linearity
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 线性
- en: The model is linear in its parameters, with regard to both the coefficients
    and the residuals.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 该模型在其参数方面是线性的，包括系数和残差。
- en: Independence
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 独立性
- en: Independent variables are not perfectly (to a high degree) correlated with each
    other (no *multicollinearity*).
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 自变量之间不存在完全（高度）相关（无*多重共线性*）。
- en: Zero mean
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 零均值
- en: The mean value of the residuals is (close to) zero.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 残差的均值（接近）为零。
- en: No correlation
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 无相关性
- en: Residuals are not (strongly) correlated with the independent variables.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 残差与自变量没有（强烈）相关。
- en: Homoscedasticity
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 同方差性
- en: The standard deviation of the residuals is (almost) constant.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 残差的标准偏差（几乎）是恒定的。
- en: No autocorrelation
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 无自相关
- en: The residuals are not (strongly) correlated with each other.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 残差之间没有（强烈）相关性。
- en: In practice, it is in general quite simple to test for the validity of the assumptions
    given a specific data set.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在实践中，一般很容易测试特定数据集的假设有效性。
- en: Data Availability
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据可用性
- en: Financial econometrics is driven by statistical methods, such as regression,
    and the availability of financial data. From the 1950s to the 1990s, and even
    into the early 2000s, theoretical and empirical financial research was mainly
    driven by relatively small data sets compared to today’s standards, and was mostly
    comprised of end-of-day (EOD) data. Data availability is something that has changed
    dramatically over the last decade or so, with more and more types of financial
    and other data available in ever increasing granularity, quantity, and velocity.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 金融计量经济学受统计方法驱动，如回归分析，以及金融数据的可用性。从1950年代到1990年代，甚至到21世纪初，理论和实证金融研究主要依赖相对较小的数据集，主要由日终数据（EOD）组成。过去十年左右，数据的可用性发生了巨大变化，金融和其他数据的类型越来越多，粒度、数量和速度不断增加。
- en: Programmatic APIs
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编程API
- en: With regard to data-driven finance, what is important is not only what data
    is available but also how it can be accessed and processed. For quite a while
    now, finance professionals have relied on data terminals from companies such as
    Refinitiv (see [Eikon Terminal](https://oreil.ly/gcBey)) or Bloomberg (see [Bloomberg
    Terminal](https://oreil.ly/Y1dEC)), to mention just two of the leading providers.
    Newspapers, magazines, financial reports, and the like have long been replaced
    by such terminals as the primary source for financial information. However, the
    sheer volume and variety of data provided by such terminals cannot be consumed
    systematically by a single user or even large groups of finance professionals.
    Therefore, the major breakthrough in data-driven finance is to be seen in the
    *programmatic availability* of data via application programming interfaces (APIs)
    that allow the usage of computer code to select, retrieve, and process arbitrary
    data sets.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 关于数据驱动的金融，重要的不仅是数据的可用性，还包括如何访问和处理数据。长期以来，金融专业人士依赖于Refinitiv等公司的数据终端（见[Eikon
    Terminal](https://oreil.ly/gcBey)）或Bloomberg等公司的数据终端（见[Bloomberg Terminal](https://oreil.ly/Y1dEC)）。报纸、杂志、财务报告等已被此类终端替代为主要的金融信息来源。然而，这些终端提供的数据量和种类之多无法由单个用户或大批金融专业人士系统地消化。因此，数据驱动金融的主要突破在于通过允许使用计算机代码选择、检索和处理任意数据集的应用程序接口（API）*编程可用性*。
- en: The remainder of this section is devoted to the illustration of such APIs by
    which even academics and retail investors can retrieve a wealth of different data
    sets. Before such examples are provided, [Table 4-1](#ddf_data_types_table) offers
    an overview of categories of data that are in general relevant in a financial
    context, as well as typical examples. In the table, *structured* data refers to
    numerical data types that often come in tabular structures, while *unstructured*
    data refers to data in the form of standard text that often has no structure beyond
    headers or paragraphs, for example. *Alternative* data refers to data types that
    are typically *not* considered financial data.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: Table 4-1\. Relevant types of financial data
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: '| Time | Structured data | Unstructured data | Alternative data |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
- en: '| Historical | Prices, fundamentals | News, texts | Web, social media, satellites
    |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
- en: '| Streaming | Prices, volumes | News, filings | Web, social media, satellites,
    Internet of Things |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
- en: Structured Historical Data
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: First, structured historical data types will be retrieved programmatically.
    To this end, the following Python code uses the [Eikon Data API](https://oreil.ly/uDMSk).^([2](ch04.xhtml#idm45625324874120))
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: 'To access data via the Eikon Data API, a local application, such as [Refinitiv
    Workspace](https://oreil.ly/NPEav), must be running and the API access must be
    configured on the Python level:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'If these requirements are met, historical structured data can be retrieved
    via a single function call. For example, the following Python code retrieves EOD
    data for a set of symbols and a specified time interval:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[![1](Images/1.png)](#co_data_driven_finance_CO2-1)'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: Defines a list of `RICs` (symbols) to retrieve data for^([3](ch04.xhtml#idm45625324543064))
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](#co_data_driven_finance_CO2-2)'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: Retrieves EOD `Close` prices for the list of `RICs`
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
- en: '[![3](Images/3.png)](#co_data_driven_finance_CO2-3)'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: Shows the meta information for the returned `DataFrame` object
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
- en: '[![4](Images/4.png)](#co_data_driven_finance_CO2-4)'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: Shows the final rows of the `DataFrame` object
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: 'Similarly, one-minute bars with `OHLC` fields can be retrieved with appropriate
    adjustments of the parameters:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[![1](Images/1.png)](#co_data_driven_finance_CO3-1)'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: Retrieves one-minute bars with all available fields for a single `RIC`
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: 'One can retrieve more than structured financial time series data from the Eikon
    Data API. Fundamental data can also be retrieved for a number of `RICs` and a
    number of different data fields at the same time, as the following Python code
    illustrates:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[![1](Images/1.png)](#co_data_driven_finance_CO4-1)'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
- en: Retrieves data for multiple `RICs` and multiple data fields
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: Programmatic Data Availability
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Basically all structured financial data is available nowadays in programmatic
    fashion. Financial time series data, in this context, is the paramount example.
    However, other structured data types such as fundamental data are available in
    the same way, simplifying the work of quantitative analysts, traders, portfolio
    managers, and the like significantly.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: Structured Streaming Data
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Many applications in finance require real-time structured data, such as in
    algorithmic trading or market risk management. The following Python code makes
    use of the API of the [Oanda Trading Platform](http://oanda.com) and streams in
    real time a number of time stamps, bid quotes, and ask quotes for the Bitcoin
    price in USD:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[![1](Images/1.png)](#co_data_driven_finance_CO5-1)'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: Connects to the Oanda API
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](#co_data_driven_finance_CO5-2)'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
- en: Streams a fixed number of ticks for a given symbol
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
- en: Printing out the streamed data fields is, of course, only for illustration.
    Certain financial applications might require sophisticated processing of the retrieved
    data and the generation of signals or statistics, for instance. Particularly during
    weekdays and trading hours, the number of price ticks streamed for financial instruments
    increases steadily, demanding powerful data processing capabilities on the end
    of financial institutions that need to process such data in real time or at least
    in near-real time (“near time”).
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: 'The significance of this observation becomes clear when looking at Apple Inc.
    stock prices. One can calculate that there are roughly <math alttext="252 dot
    40 equals 10 comma 080"><mrow><mn>252</mn> <mo>·</mo> <mn>40</mn> <mo>=</mo> <mn>10</mn>
    <mo>,</mo> <mn>080</mn></mrow></math> EOD closing quotes for the Apple stock over
    a period of 40 years. (Apple Inc. went public on December 12, 1980.) The following
    code retrieves *tick data* for the Apple stock price for one hour only. The retrieved
    data set, which might not even be complete for the given time interval, has 50,000
    data rows, or five times as many tick quotes as the EOD quotes accumulated over
    40 years of trading:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[![1](Images/1.png)](#co_data_driven_finance_CO6-1)'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: Retrieves tick data for the Apple stock price
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: EOD Versus Tick Data
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Most of the financial theories still applied today have their origin in when
    EOD data was basically the only type of financial data available. Today, financial
    institutions, and even retail traders and investors, are confronted with never-ending
    streams of real-time data. The example of Apple stock illustrates that for a single
    stock during one trading hour, there might be four times as many ticks coming
    in as the amount of EOD data accumulated over a period of 40 years. This not only
    challenges actors in financial markets, but also puts into question whether existing
    financial theories can be applied to such an environment at all.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
- en: Unstructured Historical Data
  id: totrans-125
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Many important data sources in finance provide unstructured data only, such
    as financial news or company filings. Undoubtedly, machines are much better and
    faster than humans at crunching large amounts of structured, numerical data. However,
    recent advances in *natural language processing* (NLP) make machines better and
    faster at processing financial news too, for example. In 2020, data service providers
    ingest roughly 1.5 million news articles on a daily basis. It is clear that this
    vast amount of text-based data cannot be processed properly by human beings.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
- en: 'Fortunately, unstructured data is also to a large extent available these days
    via programmatic APIs. The following Python code retrieves a number of news articles
    from the Eikon Data API related to the company Tesla, Inc. and its production.
    One article is selected and shown in full:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[![1](Images/1.png)](#co_data_driven_finance_CO7-1)'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
- en: Retrieves metadata for a number of news articles that fall in the parameter
    range
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](#co_data_driven_finance_CO7-2)'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
- en: Selects one `storyId` for which to retrieve the full text
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
- en: '[![3](Images/3.png)](#co_data_driven_finance_CO7-3)'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
- en: Retrieves the full text for the selected article and shows it
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
- en: Unstructured Streaming Data
  id: totrans-136
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In the same way that historical unstructured data is retrieved, programmatic
    APIs can be used to stream unstructured news data, for example, in real time or
    at least near time. One such API is available for [DNA](https://oreil.ly/kVm18):
    the Data, News, Analytics platform from Dow Jones. [Figure 4-1](#figure_ddf_dna_01)
    shows the screenshot of a web application that streams “Commodity and Financial
    News” articles and processes these with NLP techniques in real time.'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
- en: '![aiif 0401](Images/aiif_0401.png)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
- en: Figure 4-1\. News-streaming application based on DNA (Dow Jones)
  id: totrans-139
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'The news-streaming application has the following main features:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
- en: Full text
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
- en: The full text of each article is available by clicking on the article header.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
- en: Keyword summary
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: A keyword summary is created and printed on the screen.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
- en: Sentiment analysis
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
- en: Sentiment scores are calculated and visualized as colored arrows. Details become
    visible through a click on the arrows.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
- en: Word cloud
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
- en: A word cloud summary bitmap is created, shown as a thumbnail and visible after
    a click on the thumbnail (see [Figure 4-2](#figure_ddf_dna_02)).
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
- en: '![aiif 0402](Images/aiif_0402.png)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
- en: Figure 4-2\. Word cloud bitmap shown in news-streaming application
  id: totrans-150
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Alternative Data
  id: totrans-151
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Nowadays, financial institutions, and in particular hedge funds, systematically
    mine a number of alternative data sources to gain an edge in trading and investing.
    A recent article by [Bloomberg](http://bit.ly/aiif_alt_data) lists, among others,
    the following alternative data sources:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: Web-scraped data
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Crowd-sourced data
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Credit cards and point-of-sales (POS) systems
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Social media sentiment
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Search trends
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Web traffic
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Supply chain data
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Energy production data
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Consumer profiles
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Satellite imagery/geospacial data
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: App installs
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ocean vessel tracking
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wearables, drones, Internet of Things (IoT) sensors
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'In the following, the usage of alternative data is illustrated by two examples.
    The first retrieves and processes Apple Inc. press releases in the form of HTML
    pages. The following Python code makes use of a set of helper functions as shown
    in [“Python Code”](#nlp_functions). In the code, a list of URLs is defined, each
    representing an HTML page with a press release from Apple Inc. The raw HTML code
    is then retrieved for each press release. Then the raw code is cleaned up, and
    an excerpt for one press release is printed:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[![1](Images/1.png)](#co_data_driven_finance_CO8-1)'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
- en: Imports the NLP helper functions
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](#co_data_driven_finance_CO8-2)'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
- en: Defines the URLs for the three press releases
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
- en: '[![3](Images/3.png)](#co_data_driven_finance_CO8-3)'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
- en: Retrieves the raw HTML codes for the three press releases
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
- en: '[![4](Images/4.png)](#co_data_driven_finance_CO8-4)'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
- en: Cleans up the raw HTML codes (for example, HTML tags are removed)
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
- en: '[![5](Images/5.png)](#co_data_driven_finance_CO8-5)'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
- en: Prints an excerpt from one press release
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
- en: Of course, defining alternative data as broadly as is done in this section implies
    that there is a limitless amount of data that one can retrieve and process for
    financial purposes. At its core, this is the business of search engines such as
    the one from Google LLC. In a financial context, it would be of paramount importance
    to specify exactly what unstructured alternative data sources to tap into.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
- en: 'The second example is about the retrieval of data from the social network Twitter,
    Inc. To this end, Twitter provides API access to tweets on its platform, provided
    one has set up a Twitter account appropriately. The following Python code connects
    to the Twitter API and retrieves and prints the five most recent tweets from my
    home timeline and user timeline, respectively:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[![1](Images/1.png)](#co_data_driven_finance_CO9-1)'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
- en: Connects to the Twitter API
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](#co_data_driven_finance_CO9-2)'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
- en: Retrieves and prints five (most recent) tweets from home timeline
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
- en: '[![3](Images/3.png)](#co_data_driven_finance_CO9-4)'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
- en: Retrieves and prints five (most recent) tweets from user timeline
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
- en: 'The Twitter API allows also for searches, based on which most recent tweets
    can be retrieved and processed:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[![1](Images/1.png)](#co_data_driven_finance_CO10-1)'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
- en: Searches for tweets with hashtag “Python” and prints the five most recent ones
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
- en: 'One can also collect a larger number of tweets from a Twitter user and create
    a summary in the form of a word cloud (see [Figure 4-3](#figure_ddf_wc)). The
    following Python code again makes use of the NLP helper functions as shown in
    [“Python Code”](#nlp_functions):'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[![1](Images/1.png)](#co_data_driven_finance_CO11-1)'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
- en: Retrieves the 50 most recent tweets for the user `elonmusk`
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](#co_data_driven_finance_CO11-2)'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
- en: Collects the texts in a `list` object
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
- en: '[![3](Images/3.png)](#co_data_driven_finance_CO11-3)'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
- en: Shows excerpts for the final five tweets
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
- en: '[![4](Images/4.png)](#co_data_driven_finance_CO11-4)'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
- en: Generates a word cloud summary and shows it
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
- en: '![aiif 0403](Images/aiif_0403.png)'
  id: totrans-201
  prefs: []
  type: TYPE_IMG
- en: Figure 4-3\. Word cloud as summary for larger number of tweets
  id: totrans-202
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Once a financial practitioner defines the “relevant financial data” to go beyond
    structured financial time series data, the data sources seem limitless in terms
    of volume, variety, and velocity. The way the tweets are retrieved from the Twitter
    API is almost in near time since the most recent tweets are accessed in the examples.
    These and similar API-based data sources therefore provide a never-ending stream
    of alternative data for which, as previously pointed out, it is important to specify
    exactly what one is looking for. Otherwise, any financial data science effort
    might easily drown in too much data and/or too noisy data.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
- en: Normative Theories Revisited
  id: totrans-204
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 3](ch03.xhtml#normative_finance) introduces normative financial theories
    such as the MVP theory or the CAPM. For quite a long time, students and academics
    learning and studying such theories were more or less constrained to the theory
    itself. With all the available financial data, as discussed and illustrated in
    the previous section, in combination with powerful open source software for data
    analysis—such as Python, `NumPy`, `pandas`, and so on—it has become pretty easy
    and straightforward to put financial theories to real-world tests. It does not
    require small teams and larger studies anymore to do so. A typical notebook, internet
    access, and a standard Python environment suffice. This is what this section is
    about. However, before diving into data-driven finance, the following sub-section
    discusses briefly some famous paradoxes in the context of EUT and how corporations
    model and predict the behavior of individuals in practice.'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
- en: Expected Utility and Reality
  id: totrans-206
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In economics, *risk* describes a situation in which possible future states and
    probabilities for those states to unfold are known in advance to the decision
    maker. This is the standard assumption in finance and the context of EUT. On the
    other hand, *ambiguity* describes situations in economics in which probabilities,
    or even possible future states, are not known in advance to a decision maker.
    *Uncertainty* subsumes the two different decision-making situations.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
- en: There is a long tradition of analyzing the concrete decision-making behavior
    of individuals (“agents”) under uncertainty. Innumerable studies and experiments
    have been conducted to observe and analyze how agents behave when faced with uncertainty
    as compared to what theories such as EUT predict. For centuries, *paradoxa* have
    played an important role in decision-making theory and research.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
- en: One such paradox, the *St. Petersburg paradox*, gave rise to the invention of
    utility functions and EUT in the first place. Daniel Bernoulli presented the paradox—and
    a solution to it—in 1738\. The paradox is based on the following coin tossing
    game <math alttext="upper G"><mi>G</mi></math> . An agent is faced with a game
    during which a (perfect) coin is tossed potentially infinitely many times. If
    after the first toss heads prevails, the agent receives a payoff of 1 (currency
    unit). As long as heads is observed, the coin is tossed again. Otherwise the game
    ends. If heads prevails a second time, the agent receives an additional payoff
    of 2\. If it does a third time, the additional payoff is 4\. For the fourth time
    it is 8, and so on. This is a situation of risk since all possible future states,
    as well as their associated probabilities, are known in advance.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
- en: 'The expected payoff of this game is *infinite*. This can be seen from the following
    infinite sum of which every element is strictly positive:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="bold upper E left-parenthesis upper G right-parenthesis equals
    one-half dot 1 plus one-fourth dot 2 plus one-eighth dot 4 plus one-sixteenth
    dot 8 plus ellipsis equals sigma-summation Underscript k equals 1 Overscript normal
    infinity Endscripts StartFraction 1 Over 2 Superscript k Baseline EndFraction
    2 Superscript k minus 1 Baseline equals sigma-summation Underscript k equals 1
    Overscript normal infinity Endscripts one-half equals normal infinity" display="block"><mrow><mi>𝐄</mi>
    <mrow><mo>(</mo> <mi>G</mi> <mo>)</mo></mrow> <mo>=</mo> <mfrac><mn>1</mn> <mn>2</mn></mfrac>
    <mo>·</mo> <mn>1</mn> <mo>+</mo> <mfrac><mn>1</mn> <mn>4</mn></mfrac> <mo>·</mo>
    <mn>2</mn> <mo>+</mo> <mfrac><mn>1</mn> <mn>8</mn></mfrac> <mo>·</mo> <mn>4</mn>
    <mo>+</mo> <mfrac><mn>1</mn> <mn>16</mn></mfrac> <mo>·</mo> <mn>8</mn> <mo>+</mo>
    <mo>...</mo> <mo>=</mo> <munderover><mo>∑</mo> <mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow>
    <mi>∞</mi></munderover> <mfrac><mn>1</mn> <msup><mn>2</mn> <mi>k</mi></msup></mfrac>
    <msup><mn>2</mn> <mrow><mi>k</mi><mo>-</mo><mn>1</mn></mrow></msup> <mo>=</mo>
    <munderover><mo>∑</mo> <mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow> <mi>∞</mi></munderover>
    <mfrac><mn>1</mn> <mn>2</mn></mfrac> <mo>=</mo> <mi>∞</mi></mrow></math>
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="bold upper E left-parenthesis upper G right-parenthesis equals
    one-half dot 1 plus one-fourth dot 2 plus one-eighth dot 4 plus one-sixteenth
    dot 8 plus ellipsis equals sigma-summation Underscript k equals 1 Overscript normal
    infinity Endscripts StartFraction 1 Over 2 Superscript k Baseline EndFraction
    2 Superscript k minus 1 Baseline equals sigma-summation Underscript k equals 1
    Overscript normal infinity Endscripts one-half equals normal infinity" display="block"><mrow><mi>𝐄</mi>
    <mrow><mo>(</mo> <mi>G</mi> <mo>)</mo></mrow> <mo>=</mo> <mfrac><mn>1</mn> <mn>2</mn></mfrac>
    <mo>·</mo> <mn>1</mn> <mo>+</mo> <mfrac><mn>1</mn> <mn>4</mn></mfrac> <mo>·</mo>
    <mn>2</mn> <mo>+</mo> <mfrac><mn>1</mn> <mn>8</mn></mfrac> <mo>·</mo> <mn>4</mn>
    <mo>+</mo> <mfrac><mn>1</mn> <mn>16</mn></mfrac> <mo>·</mo> <mn>8</mn> <mo>+</mo>
    <mo>...</mo> <mo>=</mo> <munderover><mo>∑</mo> <mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow>
    <mi>∞</mi></munderover> <mfrac><mn>1</mn> <msup><mn>2</mn> <mi>k</mi></msup></mfrac>
    <msup><mn>2</mn> <mrow><mi>k</mi><mo>-</mo><mn>1</mn></mrow></msup> <mo>=</mo>
    <munderover><mo>∑</mo> <mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow> <mi>∞</mi></munderover>
    <mfrac><mn>1</mn> <mn>2</mn></mfrac> <mo>=</mo> <mi>∞</mi></mrow></math>
- en: 'However, faced with such a game, a decision maker in general would be willing
    to pay a *finite* sum only to play the game. A major reason for this is the fact
    that relatively large payoffs only happen with a relatively small probability.
    Consider the potential payoff <math alttext="upper W equals 511"><mrow><mi>W</mi>
    <mo>=</mo> <mn>511</mn></mrow></math> :'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="upper W equals 1 plus 2 plus 4 plus 8 plus 16 plus 32 plus 64
    plus 128 plus 256 equals 511" display="block"><mrow><mi>W</mi> <mo>=</mo> <mn>1</mn>
    <mo>+</mo> <mn>2</mn> <mo>+</mo> <mn>4</mn> <mo>+</mo> <mn>8</mn> <mo>+</mo> <mn>16</mn>
    <mo>+</mo> <mn>32</mn> <mo>+</mo> <mn>64</mn> <mo>+</mo> <mn>128</mn> <mo>+</mo>
    <mn>256</mn> <mo>=</mo> <mn>511</mn></mrow></math>
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="upper W equals 1 plus 2 plus 4 plus 8 plus 16 plus 32 plus 64
    plus 128 plus 256 equals 511" display="block"><mrow><mi>W</mi> <mo>=</mo> <mn>1</mn>
    <mo>+</mo> <mn>2</mn> <mo>+</mo> <mn>4</mn> <mo>+</mo> <mn>8</mn> <mo>+</mo> <mn>16</mn>
    <mo>+</mo> <mn>32</mn> <mo>+</mo> <mn>64</mn> <mo>+</mo> <mn>128</mn> <mo>+</mo>
    <mn>256</mn> <mo>=</mo> <mn>511</mn></mrow></math>
- en: 'The probability of winning such a payoff is pretty low. To be exact, it is
    only <math alttext="upper P left-parenthesis x equals upper W right-parenthesis
    equals StartFraction 1 Over 512 EndFraction equals"><mrow><mi>P</mi> <mrow><mo>(</mo>
    <mi>x</mi> <mo>=</mo> <mi>W</mi> <mo>)</mo></mrow> <mo>=</mo> <mfrac><mn>1</mn>
    <mn>512</mn></mfrac> <mo>=</mo></mrow></math> 0.001953125\. The probability for
    such a payoff or a smaller one, on the other hand, is pretty high:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="upper P left-parenthesis x less-than-or-equal-to upper W right-parenthesis
    equals sigma-summation Underscript k equals 1 Overscript 9 Endscripts StartFraction
    1 Over 2 Superscript k Baseline EndFraction equals 0.998046875" display="block"><mrow><mi>P</mi>
    <mrow><mo>(</mo> <mi>x</mi> <mo>≤</mo> <mi>W</mi> <mo>)</mo></mrow> <mo>=</mo>
    <munderover><mo>∑</mo> <mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow> <mn>9</mn></munderover>
    <mfrac><mn>1</mn> <msup><mn>2</mn> <mi>k</mi></msup></mfrac> <mo>=</mo> <mn>0</mn>
    <mo>.</mo> <mn>998046875</mn></mrow></math>
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="upper P left-parenthesis x less-than-or-equal-to upper W right-parenthesis
    equals sigma-summation Underscript k equals 1 Overscript 9 Endscripts StartFraction
    1 Over 2 Superscript k Baseline EndFraction equals 0.998046875" display="block"><mrow><mi>P</mi>
    <mrow><mo>(</mo> <mi>x</mi> <mo>≤</mo> <mi>W</mi> <mo>)</mo></mrow> <mo>=</mo>
    <munderover><mo>∑</mo> <mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow> <mn>9</mn></munderover>
    <mfrac><mn>1</mn> <msup><mn>2</mn> <mi>k</mi></msup></mfrac> <mo>=</mo> <mn>0</mn>
    <mo>.</mo> <mn>998046875</mn></mrow></math>
- en: 'In other words, in 998 out of 1,000 games the payoff is 511 or smaller. Therefore,
    an agent would probably not wager much more than 511 to play this game. The way
    out of this paradox is the introduction of a utility function with *positive but
    decreasing marginal utility*. In the context of the St. Petersburg paradox, this
    means that there is a function <math alttext="u colon double-struck upper R Subscript
    plus Baseline right-arrow double-struck upper R"><mrow><mi>u</mi> <mo>:</mo> <msub><mi>ℝ</mi>
    <mo>+</mo></msub> <mo>→</mo> <mi>ℝ</mi></mrow></math> that assigns to every positive
    payoff <math alttext="x"><mi>x</mi></math> a real value <math alttext="u left-parenthesis
    x right-parenthesis"><mrow><mi>u</mi> <mo>(</mo> <mi>x</mi> <mo>)</mo></mrow></math>
    . Positive but decreasing marginal utility then formally translates into the following:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="StartLayout 1st Row 1st Column StartFraction normal partial-differential
    u Over normal partial-differential x EndFraction 2nd Column greater-than 3rd Column
    0 2nd Row 1st Column StartFraction normal partial-differential squared u Over
    normal partial-differential x squared EndFraction 2nd Column less-than 3rd Column
    0 EndLayout" display="block"><mtable><mtr><mtd><mfrac><mrow><mi>∂</mi><mi>u</mi></mrow>
    <mrow><mi>∂</mi><mi>x</mi></mrow></mfrac></mtd> <mtd><mo>></mo></mtd> <mtd><mn>0</mn></mtd></mtr>
    <mtr><mtd><mfrac><mrow><msup><mi>∂</mi> <mn>2</mn></msup> <mi>u</mi></mrow> <mrow><mi>∂</mi><msup><mi>x</mi>
    <mn>2</mn></msup></mrow></mfrac></mtd> <mtd><mo><</mo></mtd> <mtd><mn>0</mn></mtd></mtr></mtable></math>
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="StartLayout 1st Row 1st Column StartFraction normal partial-differential
    u Over normal partial-differential x EndFraction 2nd Column greater-than 3rd Column
    0 2nd Row 1st Column StartFraction normal partial-differential squared u Over
    normal partial-differential x squared EndFraction 2nd Column less-than 3rd Column
    0 EndLayout" display="block"><mtable><mtr><mtd><mfrac><mrow><mi>∂</mi><mi>u</mi></mrow>
    <mrow><mi>∂</mi><mi>x</mi></mrow></mfrac></mtd> <mtd><mo>></mo></mtd> <mtd><mn>0</mn></mtd></mtr>
    <mtr><mtd><mfrac><mrow><msup><mi>∂</mi> <mn>2</mn></msup> <mi>u</mi></mrow> <mrow><mi>∂</mi><msup><mi>x</mi>
    <mn>2</mn></msup></mrow></mfrac></mtd> <mtd><mo><</mo></mtd> <mtd><mn>0</mn></mtd></mtr></mtable></math>
- en: 'As seen in [Chapter 3](ch03.xhtml#normative_finance), one such candidate function
    is <math alttext="u left-parenthesis x right-parenthesis equals ln left-parenthesis
    x right-parenthesis"><mrow><mi>u</mi> <mo>(</mo> <mi>x</mi> <mo>)</mo> <mo>=</mo>
    <mo form="prefix">ln</mo> <mo>(</mo> <mi>x</mi> <mo>)</mo></mrow></math> with:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="StartLayout 1st Row 1st Column StartFraction normal partial-differential
    u Over normal partial-differential x EndFraction 2nd Column equals 3rd Column
    StartFraction 1 Over x EndFraction 2nd Row 1st Column StartFraction normal partial-differential
    squared u Over normal partial-differential x squared EndFraction 2nd Column equals
    3rd Column minus StartFraction 1 Over x squared EndFraction EndLayout" display="block"><mtable><mtr><mtd><mfrac><mrow><mi>∂</mi><mi>u</mi></mrow>
    <mrow><mi>∂</mi><mi>x</mi></mrow></mfrac></mtd> <mtd><mo>=</mo></mtd> <mtd><mfrac><mn>1</mn>
    <mi>x</mi></mfrac></mtd></mtr> <mtr><mtd><mfrac><mrow><msup><mi>∂</mi> <mn>2</mn></msup>
    <mi>u</mi></mrow> <mrow><mi>∂</mi><msup><mi>x</mi> <mn>2</mn></msup></mrow></mfrac></mtd>
    <mtd><mo>=</mo></mtd> <mtd><mrow><mo>-</mo> <mfrac><mn>1</mn> <msup><mi>x</mi>
    <mn>2</mn></msup></mfrac></mrow></mtd></mtr></mtable></math>
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="StartLayout 1st Row 1st Column StartFraction normal partial-differential
    u Over normal partial-differential x EndFraction 2nd Column equals 3rd Column
    StartFraction 1 Over x EndFraction 2nd Row 1st Column StartFraction normal partial-differential
    squared u Over normal partial-differential x squared EndFraction 2nd Column equals
    3rd Column minus StartFraction 1 Over x squared EndFraction EndLayout" display="block"><mtable><mtr><mtd><mfrac><mrow><mi>∂</mi><mi>u</mi></mrow>
    <mrow><mi>∂</mi><mi>x</mi></mrow></mfrac></mtd> <mtd><mo>=</mo></mtd> <mtd><mfrac><mn>1</mn>
    <mi>x</mi></mfrac></mtd></mtr> <mtr><mtd><mfrac><mrow><msup><mi>∂</mi> <mn>2</mn></msup>
    <mi>u</mi></mrow> <mrow><mi>∂</mi><msup><mi>x</mi> <mn>2</mn></msup></mrow></mfrac></mtd>
    <mtd><mo>=</mo></mtd> <mtd><mrow><mo>-</mo> <mfrac><mn>1</mn> <msup><mi>x</mi>
    <mn>2</mn></msup></mfrac></mrow></mtd></mtr></mtable></math>
- en: 'The expected utility then is *finite*, as the calculation of the following
    infinite sum illustrates:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="bold upper E left-parenthesis u left-parenthesis upper G right-parenthesis
    right-parenthesis equals sigma-summation Underscript k equals 1 Overscript normal
    infinity Endscripts StartFraction 1 Over 2 Superscript k Baseline EndFraction
    u left-parenthesis 2 Superscript k minus 1 Baseline right-parenthesis equals sigma-summation
    Underscript k equals 1 Overscript normal infinity Endscripts StartFraction ln
    left-parenthesis 2 Superscript k minus 1 Baseline right-parenthesis Over 2 Superscript
    k Baseline EndFraction equals left-parenthesis sigma-summation Underscript k equals
    1 Overscript normal infinity Endscripts StartFraction left-parenthesis k minus
    1 right-parenthesis Over 2 Superscript k Baseline EndFraction right-parenthesis
    dot ln left-parenthesis 2 right-parenthesis equals ln left-parenthesis 2 right-parenthesis
    less-than normal infinity" display="block"><mrow><mi>𝐄</mi> <mfenced separators=""
    open="(" close=")"><mi>u</mi> <mo>(</mo> <mi>G</mi> <mo>)</mo></mfenced> <mo>=</mo>
    <munderover><mo>∑</mo> <mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow> <mi>∞</mi></munderover>
    <mfrac><mn>1</mn> <msup><mn>2</mn> <mi>k</mi></msup></mfrac> <mi>u</mi> <mfenced
    separators="" open="(" close=")"><msup><mn>2</mn> <mrow><mi>k</mi><mo>-</mo><mn>1</mn></mrow></msup></mfenced>
    <mo>=</mo> <munderover><mo>∑</mo> <mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow>
    <mi>∞</mi></munderover> <mfrac><mrow><mo form="prefix">ln</mo><mfenced separators=""
    open="(" close=")"><msup><mn>2</mn> <mrow><mi>k</mi><mo>-</mo><mn>1</mn></mrow></msup></mfenced></mrow>
    <msup><mn>2</mn> <mi>k</mi></msup></mfrac> <mo>=</mo> <mfenced separators="" open="("
    close=")"><munderover><mo>∑</mo> <mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow> <mi>∞</mi></munderover>
    <mfrac><mrow><mo>(</mo><mi>k</mi><mo>-</mo><mn>1</mn><mo>)</mo></mrow> <msup><mn>2</mn>
    <mi>k</mi></msup></mfrac></mfenced> <mo>·</mo> <mo form="prefix">ln</mo> <mrow><mo>(</mo>
    <mn>2</mn> <mo>)</mo></mrow> <mo>=</mo> <mo form="prefix">ln</mo> <mrow><mo>(</mo>
    <mn>2</mn> <mo>)</mo></mrow> <mo><</mo> <mi>∞</mi></mrow></math>
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="bold upper E left-parenthesis u left-parenthesis upper G right-parenthesis
    right-parenthesis equals sigma-summation Underscript k equals 1 Overscript normal
    infinity Endscripts StartFraction 1 Over 2 Superscript k Baseline EndFraction
    u left-parenthesis 2 Superscript k minus 1 Baseline right-parenthesis equals sigma-summation
    Underscript k equals 1 Overscript normal infinity Endscripts StartFraction ln
    left-parenthesis 2 Superscript k minus 1 Baseline right-parenthesis Over 2 Superscript
    k Baseline EndFraction equals left-parenthesis sigma-summation Underscript k equals
    1 Overscript normal infinity Endscripts StartFraction left-parenthesis k minus
    1 right-parenthesis Over 2 Superscript k Baseline EndFraction right-parenthesis
    dot ln left-parenthesis 2 right-parenthesis equals ln left-parenthesis 2 right-parenthesis
    less-than normal infinity" display="block"><mrow><mi>𝐄</mi> <mfenced separators=""
    open="(" close=")"><mi>u</mi> <mo>(</mo> <mi>G</mi> <mo>)</mo></mfenced> <mo>=</mo>
    <munderover><mo>∑</mo> <mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow> <mi>∞</mi></munderover>
    <mfrac><mn>1</mn> <msup><mn>2</mn> <mi>k</mi></msup></mfrac> <mi>u</mi> <mfenced
    separators="" open="(" close=")"><msup><mn>2</mn> <mrow><mi>k</mi><mo>-</mo><mn>1</mn></mrow></msup></mfenced>
    <mo>=</mo> <munderover><mo>∑</mo> <mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow>
    <mi>∞</mi></munderover> <mfrac><mrow><mo form="prefix">ln</mo><mfenced separators=""
    open="(" close=")"><msup><mn>2</mn> <mrow><mi>k</mi><mo>-</mo><mn>1</mn></mrow></msup></mfenced></mrow>
    <msup><mn>2</mn> <mi>k</mi></msup></mfrac> <mo>=</mo> <mfenced separators="" open="("
    close=")"><munderover><mo>∑</mo> <mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow> <mi>∞</mi></munderover>
    <mfrac><mrow><mo>(</mo><mi>k</mi><mo>-</mo><mn>1</mn><mo>)</mo></mrow> <msup><mn>2</mn>
    <mi>k</mi></msup></mfrac></mfenced> <mo>·</mo> <mo form="prefix">ln</mo> <mrow><mo>(</mo>
    <mn>2</mn> <mo>)</mo></mrow> <mo>=</mo> <mo form="prefix">ln</mo> <mrow><mo>(</mo>
    <mn>2</mn> <mo>)</mo></mrow> <mo><</mo> <mi>∞</mi></mrow></math>
- en: The expected utility of <math alttext="ln left-parenthesis 2 right-parenthesis"><mrow><mo
    form="prefix">ln</mo> <mo>(</mo> <mn>2</mn> <mo>)</mo></mrow></math> = 0.693147
    is obviously a pretty small number in comparison to the expected payoff of infinity.
    Bernoulli utility functions and EUT resolve the St. Petersburg paradox.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
- en: Other paradoxa, such as the *Allais paradox* published in Allais (1953), address
    the EUT itself. This paradox is based on an experiment with four different games
    that test subjects should rank. [Table 4-2](#ddf_allais_table) shows the four
    games <math alttext="left-parenthesis upper A comma upper B comma upper A prime
    comma upper B prime right-parenthesis"><mrow><mo>(</mo> <mi>A</mi> <mo>,</mo>
    <mi>B</mi> <mo>,</mo> <msup><mi>A</mi> <mo>'</mo></msup> <mo>,</mo> <msup><mi>B</mi>
    <mo>'</mo></msup> <mo>)</mo></mrow></math> . The ranking is to be done for the
    two pairs <math alttext="left-parenthesis upper A comma upper B right-parenthesis"><mrow><mo>(</mo>
    <mi>A</mi> <mo>,</mo> <mi>B</mi> <mo>)</mo></mrow></math> and <math alttext="left-parenthesis
    upper A prime comma upper B prime right-parenthesis"><mrow><mo>(</mo> <msup><mi>A</mi>
    <mo>'</mo></msup> <mo>,</mo> <msup><mi>B</mi> <mo>'</mo></msup> <mo>)</mo></mrow></math>
    . The *independence axiom* postulates that the first row in the table should not
    have any influence on the ordering of <math alttext="left-parenthesis upper A
    prime comma upper B prime right-parenthesis"><mrow><mo>(</mo> <msup><mi>A</mi>
    <mo>'</mo></msup> <mo>,</mo> <msup><mi>B</mi> <mo>'</mo></msup> <mo>)</mo></mrow></math>
    since the payoff is the same for both games.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
- en: Table 4-2\. Games in Allais paradox
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
- en: '| Probability | Game A | Game B | Game A’ | Game B’ |'
  id: totrans-225
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- |'
  id: totrans-226
  prefs: []
  type: TYPE_TB
- en: '| 0.66 | 2,400 | 2,400 | 0 | 0 |'
  id: totrans-227
  prefs: []
  type: TYPE_TB
- en: '| 0.33 | 2,500 | 2,400 | 2,500 | 2,400 |'
  id: totrans-228
  prefs: []
  type: TYPE_TB
- en: '| 0.01 | 0 | 2,400 | 0 | 2,400 |'
  id: totrans-229
  prefs: []
  type: TYPE_TB
- en: 'In experiments, the majority of decision makers rank the games as follows:
    <math alttext="upper B succeeds upper A"><mrow><mi>B</mi> <mo>≻</mo> <mi>A</mi></mrow></math>
    and <math alttext="upper A prime upper B prime"><mrow><mi>A</mi> <mo>''</mo> <mo>≻</mo>
    <msup><mi>B</mi> <mo>''</mo></msup></mrow></math> . The ranking <math alttext="upper
    B succeeds upper A"><mrow><mi>B</mi> <mo>≻</mo> <mi>A</mi></mrow></math> leads
    to the following inequalities, where <math alttext="u 1 identical-to u left-parenthesis
    2400 right-parenthesis comma u 2 identical-to u left-parenthesis 2500 right-parenthesis
    comma u 3 identical-to u left-parenthesis 0 right-parenthesis"><mrow><msub><mi>u</mi>
    <mn>1</mn></msub> <mo>≡</mo> <mi>u</mi> <mrow><mo>(</mo> <mn>2400</mn> <mo>)</mo></mrow>
    <mo>,</mo> <msub><mi>u</mi> <mn>2</mn></msub> <mo>≡</mo> <mi>u</mi> <mrow><mo>(</mo>
    <mn>2500</mn> <mo>)</mo></mrow> <mo>,</mo> <msub><mi>u</mi> <mn>3</mn></msub>
    <mo>≡</mo> <mi>u</mi> <mrow><mo>(</mo> <mn>0</mn> <mo>)</mo></mrow></mrow></math>
    :'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="StartLayout 1st Row 1st Column u 1 2nd Column greater-than 3rd
    Column 0.66 dot u 1 plus 0.33 dot u 2 plus 0.01 dot u 3 2nd Row 1st Column 0.34
    dot u 1 2nd Column greater-than 3rd Column 0.33 dot u 2 plus 0.01 dot u 3 EndLayout"
    display="block"><mtable><mtr><mtd><msub><mi>u</mi> <mn>1</mn></msub></mtd> <mtd><mo>></mo></mtd>
    <mtd><mrow><mn>0</mn> <mo>.</mo> <mn>66</mn> <mo>·</mo> <msub><mi>u</mi> <mn>1</mn></msub>
    <mo>+</mo> <mn>0</mn> <mo>.</mo> <mn>33</mn> <mo>·</mo> <msub><mi>u</mi> <mn>2</mn></msub>
    <mo>+</mo> <mn>0</mn> <mo>.</mo> <mn>01</mn> <mo>·</mo> <msub><mi>u</mi> <mn>3</mn></msub></mrow></mtd></mtr>
    <mtr><mtd><mrow><mn>0</mn> <mo>.</mo> <mn>34</mn> <mo>·</mo> <msub><mi>u</mi>
    <mn>1</mn></msub></mrow></mtd> <mtd><mo>></mo></mtd> <mtd><mrow><mn>0</mn> <mo>.</mo>
    <mn>33</mn> <mo>·</mo> <msub><mi>u</mi> <mn>2</mn></msub> <mo>+</mo> <mn>0</mn>
    <mo>.</mo> <mn>01</mn> <mo>·</mo> <msub><mi>u</mi> <mn>3</mn></msub></mrow></mtd></mtr></mtable></math>
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="StartLayout 1st Row 1st Column u 1 2nd Column greater-than 3rd
    Column 0.66 dot u 1 plus 0.33 dot u 2 plus 0.01 dot u 3 2nd Row 1st Column 0.34
    dot u 1 2nd Column greater-than 3rd Column 0.33 dot u 2 plus 0.01 dot u 3 EndLayout"
    display="block"><mtable><mtr><mtd><msub><mi>u</mi> <mn>1</mn></msub></mtd> <mtd><mo>></mo></mtd>
    <mtd><mrow><mn>0</mn> <mo>.</mo> <mn>66</mn> <mo>·</mo> <msub><mi>u</mi> <mn>1</mn></msub>
    <mo>+</mo> <mn>0</mn> <mo>.</mo> <mn>33</mn> <mo>·</mo> <msub><mi>u</mi> <mn>2</mn></msub>
    <mo>+</mo> <mn>0</mn> <mo>.</mo> <mn>01</mn> <mo>·</mo> <msub><mi>u</mi> <mn>3</mn></msub></mrow></mtd></mtr>
    <mtr><mtd><mrow><mn>0</mn> <mo>.</mo> <mn>34</mn> <mo>·</mo> <msub><mi>u</mi>
    <mn>1</mn></msub></mrow></mtd> <mtd><mo>></mo></mtd> <mtd><mrow><mn>0</mn> <mo>.</mo>
    <mn>33</mn> <mo>·</mo> <msub><mi>u</mi> <mn>2</mn></msub> <mo>+</mo> <mn>0</mn>
    <mo>.</mo> <mn>01</mn> <mo>·</mo> <msub><mi>u</mi> <mn>3</mn></msub></mrow></mtd></mtr></mtable></math>
- en: 'The ranking <math alttext="upper A prime upper B prime"><mrow><mi>A</mi> <mo>''</mo>
    <mo>≻</mo> <msup><mi>B</mi> <mo>''</mo></msup></mrow></math> in turn leads to
    the following inequalities:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
- en: <math alttext="StartLayout 1st Row 1st Column 0.33 dot u 2 plus 0.01 dot u 3
    2nd Column greater-than 3rd Column 0.33 dot u 1 plus 0.01 dot u 1 2nd Row 1st
    Column 0.34 dot u 1 2nd Column less-than 3rd Column 0.33 dot u 2 plus 0.01 dot
    u 3 EndLayout" display="block"><mtable><mtr><mtd><mrow><mn>0</mn> <mo>.</mo> <mn>33</mn>
    <mo>·</mo> <msub><mi>u</mi> <mn>2</mn></msub> <mo>+</mo> <mn>0</mn> <mo>.</mo>
    <mn>01</mn> <mo>·</mo> <msub><mi>u</mi> <mn>3</mn></msub></mrow></mtd> <mtd><mo>></mo></mtd>
    <mtd><mrow><mn>0</mn> <mo>.</mo> <mn>33</mn> <mo>·</mo> <msub><mi>u</mi> <mn>1</mn></msub>
    <mo>+</mo> <mn>0</mn> <mo>.</mo> <mn>01</mn> <mo>·</mo> <msub><mi>u</mi> <mn>1</mn></msub></mrow></mtd></mtr>
    <mtr><mtd><mrow><mn>0</mn> <mo>.</mo> <mn>34</mn> <mo>·</mo> <msub><mi>u</mi>
    <mn>1</mn></msub></mrow></mtd> <mtd><mo><</mo></mtd> <mtd><mrow><mn>0</mn> <mo>.</mo>
    <mn>33</mn> <mo>·</mo> <msub><mi>u</mi> <mn>2</mn></msub> <mo>+</mo> <mn>0</mn>
    <mo>.</mo> <mn>01</mn> <mo>·</mo> <msub><mi>u</mi> <mn>3</mn></msub></mrow></mtd></mtr></mtable></math>
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="StartLayout 1st Row 1st Column 0.33 dot u 2 plus 0.01 dot u 3
    2nd Column greater-than 3rd Column 0.33 dot u 1 plus 0.01 dot u 1 2nd Row 1st
    Column 0.34 dot u 1 2nd Column less-than 3rd Column 0.33 dot u 2 plus 0.01 dot
    u 3 EndLayout" display="block"><mtable><mtr><mtd><mrow><mn>0</mn> <mo>.</mo> <mn>33</mn>
    <mo>·</mo> <msub><mi>u</mi> <mn>2</mn></msub> <mo>+</mo> <mn>0</mn> <mo>.</mo>
    <mn>01</mn> <mo>·</mo> <msub><mi>u</mi> <mn>3</mn></msub></mrow></mtd> <mtd><mo>></mo></mtd>
    <mtd><mrow><mn>0</mn> <mo>.</mo> <mn>33</mn> <mo>·</mo> <msub><mi>u</mi> <mn>1</mn></msub>
    <mo>+</mo> <mn>0</mn> <mo>.</mo> <mn>01</mn> <mo>·</mo> <msub><mi>u</mi> <mn>1</mn></msub></mrow></mtd></mtr>
    <mtr><mtd><mrow><mn>0</mn> <mo>.</mo> <mn>34</mn> <mo>·</mo> <msub><mi>u</mi>
    <mn>1</mn></msub></mrow></mtd> <mtd><mo><</mo></mtd> <mtd><mrow><mn>0</mn> <mo>.</mo>
    <mn>33</mn> <mo>·</mo> <msub><mi>u</mi> <mn>2</mn></msub> <mo>+</mo> <mn>0</mn>
    <mo>.</mo> <mn>01</mn> <mo>·</mo> <msub><mi>u</mi> <mn>3</mn></msub></mrow></mtd></mtr></mtable></math>
- en: These inequalities obviously contradict each other and lead to the Allais paradox.
    One possible explanation is that decision makers in general value certainty higher
    than the typical models, such as EUT, predict. Most people would probably rather
    choose to receive $1 million with certainty than play a game in which they can
    win $100 million with a probability of 5%, although there are a number of suitable
    utility functions available that under EUT would have the decision maker choose
    the game instead of the certain amount.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
- en: Another explanation lies in *framing* decisions and the psychology of decision
    makers. It is well known that more people would accept a surgery if it has a “95%
    chance of success” than a “5% chance of death.” Simply changing the wording might
    lead to behavior that is inconsistent with decision-making theories such as EUT.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
- en: Another famous paradox addressing shortcomings of EUT in its subjective form,
    according to Savage (1954, 1972), is the *Ellsberg paradox*, which dates back
    to the seminal paper by Ellsberg (1961). It addresses the importance of ambiguity
    in many real-world decision situations. A standard setting for this paradox comprises
    two different urns, both of which contain exactly 100 balls. For urn 1, it is
    known that it contains exactly 50 black and 50 red balls. For urn 2, it is only
    known that it contains black and red balls but not in which proportion.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
- en: 'Test subjects can choose among the following game options:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
- en: 'Game 1: red 1, black 1, or indifferent'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Game 2: red 2, black 2, or indifferent'
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Game 3: red 1, red 2, or indifferent'
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Game 4: black 1, black 2, or indifferent'
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Here, “red 1,” for example, means that a red ball is drawn from urn 1\. Typically,
    a test subject would answer as follows:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
- en: 'Game 1: indifferent'
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Game 2: indifferent'
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Game 3: red 1'
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Game 4: black 1'
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This set of decisions—which is not the only one to be observed but is a common
    one—exemplifies what is called *ambiguity aversion*. Since the probabilities for
    black and red balls, respectively, are not known for urn 2, decision makers prefer
    a situation of *risk* instead of *ambiguity*.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
- en: The two paradoxa of Allais and Ellsberg show that real test subjects quite often
    behave contrary to what well-established decision theories in economics predict.
    In other words, human beings as decision makers can in general not be compared
    to machines that carefully collect data and then crunch the numbers to make a
    decision under uncertainty, be it in the form of risk or ambiguity. Human behavior
    is more complex than most, if not all, theories currently suggest. How difficult
    and complex it can be to explain human behavior is clear after reading, for example,
    the 800-page book *Behave* by Sapolsky (2018). It covers multiple facets of this
    topic, ranging from biochemical processes to genetics, human evolution, tribes,
    language, religion, and more, in an integrative manner.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
- en: If standard economic decision paradigms such as EUT do not explain real-world
    decision making too well, what alternatives are available? Economic experiments
    that build the basis for the Allais and Ellsberg paradoxa are a good starting
    point in learning how decision makers behave in specific, controlled situations.
    Such experiments and their sometimes surprising and paradoxical results have indeed
    motivated a great number of researchers to come up with alternative theories and
    models that resolve the paradoxa. The book *The Experiment in the History of Economics*
    by Fontaine and Leonard (2005) is about the historical role of experiments in
    economics. There is, for example, a whole string of literature that addresses
    issues arising from the Ellsberg paradox. This literature deals with, among other
    topics, nonadditive probabilities, Choquet integrals, and decision heuristics
    such as *maximizing the minimum payoff* (“max-min”) or *minimizing the maximum
    loss* (“min-max”). These alternative approaches have proven superior to EUT, at
    least in certain decision-making scenarios. But they are far from being mainstream
    in finance.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
- en: What, after all, has proven to be useful in practice? Not too surprisingly,
    the answer lies in *data and machine learning algorithms*. The internet, with
    its billions of users, generates a treasure trove of data describing real-world
    human behavior, or what is sometimes called *revealed preferences*. The big data
    generated on the web has a scale that is multiple orders of magnitude larger than
    what single experiments can generate. Companies such as Amazon, Facebook, Google,
    and Twitter are able to make billions of dollars by recording user behavior (that
    is, their revealed preferences) and capitalizing on the insights generated by
    ML algorithms trained on this data.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
- en: The default ML approach taken in this context is supervised learning. The algorithms
    themselves are in general *theory- and model-free*; variants of neural networks
    are often applied. Therefore, when companies today predict the behavior of their
    users or customers, more often than not a model-free ML algorithm is deployed.
    Traditional decision theories like EUT or one of its successors generally do not
    play a role at all. This makes it somewhat surprising that such theories still,
    at the beginning of the 2020s, are a cornerstone of most economic and financial
    theories applied in practice. And this is not even to mention the large number
    of financial textbooks that cover traditional decision theories in detail. If
    one of the most fundamental building blocks of financial theory seems to lack
    meaningful empirical support or practical benefits, what about the financial models
    that build on top of it? More on this appears in subsequent sections and chapters.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
- en: Data-Driven Predictions of Behavior
  id: totrans-252
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Standard economic decision theories are intellectually appealing to many, even
    to those who, faced with a concrete decision under uncertainty, would behave in
    contrast to the theories’ predictions. On the other hand, big data and model-free,
    supervised learning approaches prove useful and successful in practice for predicting
    user and customer behavior. In a financial context, this might imply that one
    should not really worry about why and how financial agents decide the way they
    decide. One should rather focus on their indirectly revealed preferences based
    on features data (new information) that describes the state of a financial market
    and labels data (outcomes) that reflects the impact of the decisions made by financial
    agents. This leads to a data-driven instead of a theory- or model-driven view
    of decision making in financial markets. Financial agents become data-processing
    organisms that can be much better modeled, for example, by complex neural networks
    than, say, a simple utility function in combination with an assumed probability
    distribution.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
- en: Mean-Variance Portfolio Theory
  id: totrans-254
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Assume a data-driven investor wants to apply MVP theory to invest in a portfolio
    of technology stocks and wants to add a gold-related exchange-traded fund (ETF)
    for diversification. Probably, the investor would access relevant historical price
    data via an API to a trading platform or a data provider. To make the following
    analysis reproducible, it relies on a CSV data file stored in a remote location.
    The following Python code retrieves the data file, selects a number of symbols
    given the investor’s goal, and calculates log returns from the price time series
    data. [Figure 4-4](#figure_ddf_01) compares the normalized price time series for
    the selected symbols:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[![1](Images/1.png)](#co_data_driven_finance_CO12-1)'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
- en: Retrieves historical EOD data from a remote location
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](#co_data_driven_finance_CO12-4)'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
- en: Specifies the symbols (`RICs`) to be invested in
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
- en: '[![3](Images/3.png)](#co_data_driven_finance_CO12-5)'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
- en: Calculates the log returns for all time series
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
- en: '[![4](Images/4.png)](#co_data_driven_finance_CO12-6)'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
- en: Plots the normalized financial time series for the selected symbols
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
- en: '![aiif 0404](Images/aiif_0404.png)'
  id: totrans-265
  prefs: []
  type: TYPE_IMG
- en: Figure 4-4\. Normalized financial time series data
  id: totrans-266
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'The data-driven investor wants to first set a baseline for performance as given
    by an equally weighted portfolio over the whole period of the available data.
    To this end, the following Python code defines functions to calculate the portfolio
    return, the portfolio volatility, and the portfolio Sharpe ratio given a set of
    weights for the selected symbols:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[![1](Images/1.png)](#co_data_driven_finance_CO13-1)'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
- en: Equally weighted portfolio
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](#co_data_driven_finance_CO13-2)'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
- en: Portfolio return
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
- en: '[![3](Images/3.png)](#co_data_driven_finance_CO13-4)'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
- en: Portfolio volatility
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
- en: '[![4](Images/4.png)](#co_data_driven_finance_CO13-6)'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
- en: Portfolio Sharpe ratio (with zero short rate)
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
- en: 'The investor also wants to analyze which combinations of portfolio risk and
    return—and consequently Sharpe ratio—are roughly possible by applying Monte Carlo
    simulation to randomize the portfolio weights. Short sales are excluded, and the
    portfolio weights are assumed to add up to 100%. The following Python code implements
    the simulation and visualizes the results (see [Figure 4-5](#figure_ddf_02)):'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  id: totrans-278
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[![1](Images/1.png)](#co_data_driven_finance_CO14-1)'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
- en: Simulates portfolio weights adding up to 100%
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](#co_data_driven_finance_CO14-4)'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
- en: Derives the resulting portfolio volatilities and returns
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
- en: '[![3](Images/3.png)](#co_data_driven_finance_CO14-6)'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
- en: Calculates the resulting Sharpe ratios
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
- en: '![aiif 0405](Images/aiif_0405.png)'
  id: totrans-285
  prefs: []
  type: TYPE_IMG
- en: Figure 4-5\. Simulated portfolio volatilities, returns, and Sharpe ratios
  id: totrans-286
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'The data-driven investor now wants to backtest the performance of a portfolio
    that was set up at the beginning of 2011\. The optimal portfolio composition was
    derived from the financial time series data available from 2010\. At the beginning
    of 2012, the portfolio composition was adjusted given the available data from
    2011, and so on. To this end, the following Python code derives the *portfolio
    weights* for every relevant year that *maximizes the Sharpe ratio*:'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  id: totrans-288
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[![1](Images/1.png)](#co_data_driven_finance_CO15-1)'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
- en: Specifies the bounds for the single asset weights
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](#co_data_driven_finance_CO15-3)'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
- en: Specifies that all weights need to add up to 100%
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
- en: '[![3](Images/3.png)](#co_data_driven_finance_CO15-4)'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
- en: Selects the relevant data set for the given year
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
- en: '[![4](Images/4.png)](#co_data_driven_finance_CO15-5)'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
- en: Derives the portfolio weights that maximize the Sharpe ratio
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
- en: '[![5](Images/5.png)](#co_data_driven_finance_CO15-6)'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
- en: Stores these weights in a `dict` object
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
- en: The optimal portfolio compositions as derived for the relevant years illustrate
    that MVP theory in its original form quite often leads to (relative) extreme situations
    in the sense that one or more assets are not included at all or that even a single
    asset makes up 100% of the portfolio. Of course, this can be actively avoided
    by setting, for example, a minimum weight for every asset considered. The results
    also indicate that this approach leads to significant rebalancings in the portfolio,
    driven by the previous year’s realized statistics and correlations.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
- en: 'To complete the backtest, the following code compares the expected portfolio
    statistics (from the optimal composition of the previous year applied to the previous
    year’s data) with the realized portfolio statistics for the current year (from
    the optimal composition from the previous year applied to the current year’s data):'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  id: totrans-301
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '[![1](Images/1.png)](#co_data_driven_finance_CO16-1)'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
- en: Expected portfolio statistics
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](#co_data_driven_finance_CO16-4)'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
- en: Realized portfolio statistics
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 4-6](#figure_ddf_03) compares the expected and realized portfolio volatilities
    for the single years. MVP theory does quite a good job in predicting the portfolio
    volatility. This is also supported by a relatively high correlation between the
    two time series:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  id: totrans-307
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '![aiif 0406](Images/aiif_0406.png)'
  id: totrans-308
  prefs: []
  type: TYPE_IMG
- en: Figure 4-6\. Expected versus realized portfolio volatilities
  id: totrans-309
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'However, the conclusions are the opposite when comparing the expected with
    the realized portfolio returns (see [Figure 4-7](#figure_ddf_04)). MVP theory
    obviously fails in predicting the portfolio returns, as is confirmed by the negative
    correlation between the two time series:'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  id: totrans-311
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '![aiif 0407](Images/aiif_0407.png)'
  id: totrans-312
  prefs: []
  type: TYPE_IMG
- en: Figure 4-7\. Expected versus realized portfolio returns
  id: totrans-313
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Similar, or even worse, conclusions need to be drawn with regard to the Sharpe
    ratio (see [Figure 4-8](#figure_ddf_05)). For the data-driven investor who aims
    at maximizing the Sharpe ratio of the portfolio, the theory’s predictions are
    generally significantly off from the realized values. The correlation between
    the two time series is even lower than for the returns:'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  id: totrans-315
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '![aiif 0408](Images/aiif_0408.png)'
  id: totrans-316
  prefs: []
  type: TYPE_IMG
- en: Figure 4-8\. Expected versus realized portfolio Sharpe ratios
  id: totrans-317
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Predictive Power of MVP Theory
  id: totrans-318
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: MVP theory applied to real-world data reveals its practical shortcomings. Without
    additional constraints, optimal portfolio compositions and rebalancings can be
    extreme. The predictive power with regard to portfolio return and Sharpe ratio
    is pretty bad in the numerical example, whereas the predictive power with regard
    to portfolio risk seems acceptable. However, investors generally are interested
    in risk-adjusted performance measures, such as the Sharpe ratio, and this is the
    statistic for which MVP theory fails worst in the example.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
- en: Capital Asset Pricing Model
  id: totrans-320
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'A similar approach can be applied to put the CAPM to a real-world test. Assume
    that the data-driven technology investor from before wants to apply the CAPM to
    derive expected returns for the four technology stocks from before. The following
    Python code first derives the beta for every stock for a given year, and then
    calculates the expected return for the stock in the next year, given its beta
    and the performance of the market portfolio. The market portfolio is approximated
    by the S&P 500 stock index:'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  id: totrans-322
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[![1](Images/1.png)](#co_data_driven_finance_CO17-1)'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
- en: Specifies the risk-less short rate
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](#co_data_driven_finance_CO17-2)'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
- en: Defines the market portfolio
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
- en: '[![3](Images/3.png)](#co_data_driven_finance_CO17-3)'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
- en: Derives the beta of the stock
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
- en: '[![4](Images/4.png)](#co_data_driven_finance_CO17-6)'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
- en: Calculates the expected return given previous year’s beta and current year market
    portfolio performance
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
- en: '[![5](Images/5.png)](#co_data_driven_finance_CO17-7)'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
- en: Calculates the realized performance of the stock for the current year
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
- en: '[![6](Images/6.png)](#co_data_driven_finance_CO17-8)'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
- en: Collects and prints all results
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
- en: 'The preceding code provides the following output:'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  id: totrans-336
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '[Figure 4-9](#figure_ddf_06) compares the predicted (expected) return for a
    single stock, given the beta from the previous year and market portfolio performance
    of the current year, with the realized return of the stock for the current year.
    Obviously, the CAPM in its original form does not prove really useful in predicting
    a stock’s performance based on beta only:'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  id: totrans-338
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '![aiif 0409](Images/aiif_0409.png)'
  id: totrans-339
  prefs: []
  type: TYPE_IMG
- en: Figure 4-9\. CAPM-predicted versus realized stock returns for a single stock
  id: totrans-340
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: '[Figure 4-10](#figure_ddf_07) compares the averages of the CAPM-predicted stock
    returns with the averages of the realized returns. Also here, the CAPM does not
    do a good job.'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
- en: 'What is easy to see is that the CAPM predictions do not vary that much on average
    for the stocks analyzed; they are between 12.2% and 14.4%. However, the realized
    average returns of the stocks show a high variability; these are between 9.4%
    and 29.2%. Market portfolio performance and beta alone obviously cannot account
    for the observed returns of the (technology) stocks:'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  id: totrans-343
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '![aiif 0410](Images/aiif_0410.png)'
  id: totrans-344
  prefs: []
  type: TYPE_IMG
- en: Figure 4-10\. Average CAPM-predicted versus average realized stock returns for
    multiple stocks
  id: totrans-345
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Predictive Power of the CAPM
  id: totrans-346
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The predictive power of the CAPM with regard to the future performance of stocks,
    relative to the market portfolio, is pretty low or even nonexistent for certain
    stocks. One of the reasons is probably the fact that the CAPM rests on the same
    central assumptions as MVP theory, namely that investors care about only the (expected)
    return and (expected) volatility of a portfolio and/or stock. From a modeling
    point of view, one can ask whether the single risk factor is enough to explain
    variability in stock returns or whether there might be a nonlinear relationship
    between a stock’s return and the market portfolio performance.
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
- en: Arbitrage Pricing Theory
  id: totrans-348
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The predictive power of the CAPM seems quite limited given the results from
    the previous numerical example. A valid question is whether the market portfolio
    performance alone is enough to explain variability in stock returns. The answer
    of the APT is *no*—there can be more (even many more) factors that together explain
    variability in stock returns. [“Arbitrage Pricing Theory”](ch03.xhtml#ap_theory)
    formally describes the framework of APT that also relies on a linear relationship
    between the factors and a stock’s return.
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
- en: 'The data-driven investor recognizes that the CAPM is not sufficient to reliably
    predict a stock’s performance relative to the market portfolio performance. Therefore,
    the investor decides to add to the market portfolio three additional factors that
    might drive a stock’s performance:'
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
- en: Market volatility (as represented by the VIX index, `.VIX`)
  id: totrans-351
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exchange rates (as represented by the EUR/USD rate, `EUR=`)
  id: totrans-352
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Commodity prices (as represented by the gold price, `XAU=`)
  id: totrans-353
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following Python code implements a simple APT approach by using the four
    factors in combination with multivariate regression to explain a stock’s future
    performance in relation to the factors:'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  id: totrans-355
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[![1](Images/1.png)](#co_data_driven_finance_CO18-1)'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
- en: The four factors
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](#co_data_driven_finance_CO18-2)'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
- en: The multivariate regression
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
- en: '[![3](Images/3.png)](#co_data_driven_finance_CO18-3)'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
- en: The APT-predicted return of the stock
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
- en: '[![4](Images/4.png)](#co_data_driven_finance_CO18-4)'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
- en: The realized return of the stock
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
- en: 'The preceding code provides the following output:'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  id: totrans-365
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '[Figure 4-11](#figure_ddf_08) compares the APT-predicted returns for a stock
    and its realized stock returns over time. Compared to the single-factor CAPM,
    there seems to be hardly any improvement:'
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  id: totrans-367
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '![aiif 0411](Images/aiif_0411.png)'
  id: totrans-368
  prefs: []
  type: TYPE_IMG
- en: Figure 4-11\. APT-predicted versus realized stock returns for a stock
  id: totrans-369
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'The same picture arises in [Figure 4-12](#figure_ddf_09), produced by the following
    snippet, which compares the averages for multiple stocks. Because there is hardly
    any variation in the average APT predictions, there are large average differences
    to the realized returns:'
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  id: totrans-371
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Of course, the selection of the risk factors is of paramount importance in this
    context. The data-driven investor decides to find out what risk factors are typically
    considered relevant ones for stocks. After studying the paper by Bender et al.
    (2013), the investor replaces the original risk factors with a new set. In particular,
    the investor chooses the set as presented in [Table 4-3](#ddf_factors_table).
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
- en: '![aiif 0412](Images/aiif_0412.png)'
  id: totrans-373
  prefs: []
  type: TYPE_IMG
- en: Figure 4-12\. Average APT-predicted versus average realized stock returns for
    multiple stocks
  id: totrans-374
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Table 4-3\. Risk factors for APT
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
- en: '| Factor | Description | `RIC` |'
  id: totrans-376
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  id: totrans-377
  prefs: []
  type: TYPE_TB
- en: '| Market | MSCI World Gross Return Daily USD (PUS = Price Return) | `.dMIWO00000GUS`
    |'
  id: totrans-378
  prefs: []
  type: TYPE_TB
- en: '| Size | MSCI World Equal Weight Price Net Index EOD | `.dMIWO0000ENUS` |'
  id: totrans-379
  prefs: []
  type: TYPE_TB
- en: '| Volatility | MSCI World Minimum Volatility Net Return | `.dMIWO0000YNUS`
    |'
  id: totrans-380
  prefs: []
  type: TYPE_TB
- en: '| Value | MSCI World Value Weighted Gross (NUS for Net) | `.dMIWO000PkGUS`
    |'
  id: totrans-381
  prefs: []
  type: TYPE_TB
- en: '| Risk | MSCI World Risk Weighted Gross USD EOD | `.dMIWO000PlGUS` |'
  id: totrans-382
  prefs: []
  type: TYPE_TB
- en: '| Growth | MSCI World Quality Net Return USD | `.MIWO0000vNUS` |'
  id: totrans-383
  prefs: []
  type: TYPE_TB
- en: '| Momentum | MSCI World Momentum Gross Index USD EOD | `.dMIWO0000NGUS` |'
  id: totrans-384
  prefs: []
  type: TYPE_TB
- en: 'The following Python code retrieves a respective data set from a remote location
    and visualizes the normalized time series data (see [Figure 4-13](#figure_ddf_10)).
    Already a brief look reveals that the time series seem to be highly positively
    correlated:'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  id: totrans-386
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '[![1](Images/1.png)](#co_data_driven_finance_CO19-1)'
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
- en: Retrieves factors time series data
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](#co_data_driven_finance_CO19-2)'
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
- en: Normalizes and plots the data
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
- en: '![aiif 0413](Images/aiif_0413.png)'
  id: totrans-391
  prefs: []
  type: TYPE_IMG
- en: Figure 4-13\. Normalized factors time series data
  id: totrans-392
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'This impression is confirmed by the following calculation and the resulting
    correlation matrix for the factor returns. All correlation factors are about 0.75
    or higher:'
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  id: totrans-394
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '[![1](Images/1.png)](#co_data_driven_finance_CO20-1)'
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
- en: Defines start and end dates for data selection
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](#co_data_driven_finance_CO20-3)'
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
- en: Selects the relevant returns data sub-set
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
- en: '[![3](Images/3.png)](#co_data_driven_finance_CO20-5)'
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
- en: Calculates and processes the log returns for the factors
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
- en: '[![4](Images/4.png)](#co_data_driven_finance_CO20-9)'
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
- en: Shows the correlation matrix for the factors
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
- en: 'The following Python code derives factor loadings for the original stocks but
    with the new factors. They are derived from the first half of the data set and
    applied to predict the stock return for the second half given the performance
    of the single factors. The realized return is also calculated. Both time series
    are compared in [Figure 4-14](#figure_ddf_11). As to be expected given the high
    correlation of the factors, the explanatory power of the APT approach is not much
    higher compared to the CAPM:'
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  id: totrans-404
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '![aiif 0414](Images/aiif_0414.png)'
  id: totrans-405
  prefs: []
  type: TYPE_IMG
- en: Figure 4-14\. APT-predicted returns based on typical factors compared to realized
    returns
  id: totrans-406
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'The data-driven investor is not willing to dismiss the APT completely. Therefore,
    an additional test might shed some more light on the explanatory power of APT.
    To this end, the factor loadings are used to test whether APT can explain movements
    of the stock price over time (correctly). And indeed, although APT does not predict
    the absolute performance correctly (it is off by 10+ percentage points), it predicts
    the direction of the stock price movement correctly in the majority of cases (see
    [Figure 4-15](#figure_ddf_12)). The correlation between the predicted and realized
    returns is also pretty high at around 85%. However, the analysis uses realized
    factor returns to generate the APT predictions—something, of course, not available
    in practice a day before the relevant trading day:'
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  id: totrans-408
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '[![1](Images/1.png)](#co_data_driven_finance_CO21-1)'
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
- en: Predicts the daily stock price returns given the realized factor returns
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](#co_data_driven_finance_CO21-2)'
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
- en: Stores the results in a `DataFrame` object and adds column and index data
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
- en: '[![3](Images/3.png)](#co_data_driven_finance_CO21-3)'
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
- en: Adds the realized stock price returns to the `DataFrame` object
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
- en: '[![4](Images/4.png)](#co_data_driven_finance_CO21-4)'
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
- en: Calculates the annualized returns
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
- en: '[![5](Images/5.png)](#co_data_driven_finance_CO21-5)'
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
- en: Calculates the annualized volatility
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
- en: '[![6](Images/6.png)](#co_data_driven_finance_CO21-6)'
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
- en: Calculates the correlation factor
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
- en: '![aiif 0415](Images/aiif_0415.png)'
  id: totrans-421
  prefs: []
  type: TYPE_IMG
- en: Figure 4-15\. APT-predicted performance and real performance over time (gross)
  id: totrans-422
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'How accurately does APT predict the direction of the stock price movement given
    the realized factor returns? The following Python code shows that the accuracy
    score is a bit better than 75%:'
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  id: totrans-424
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Debunking Central Assumptions
  id: totrans-425
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The previous section provides a number of numerical, real-world examples showing
    how popular normative financial theories might fail in practice. This section
    argues that one of the major reasons is that central assumptions of these popular
    financial theories are invalid; that is, they simply do not describe the reality
    of financial markets. The two assumptions analyzed are *normally distributed returns*
    and *linear* *relationships*.
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
- en: Normally Distributed Returns
  id: totrans-427
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As a matter of fact, only a normal distribution is completely specified through
    its first (expectation) and second moment (standard deviation).
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
- en: Sample data sets
  id: totrans-429
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'For illustration, consider a randomly generated set of standard normally distributed
    numbers as generated by the following Python code.^([4](ch04.xhtml#idm45625313161960))
    [Figure 4-16](#figure_ddf_13) shows the typical bell shape of the resulting histogram:'
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  id: totrans-431
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '[![1](Images/1.png)](#co_data_driven_finance_CO22-1)'
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
- en: Draws standard normally distributed random numbers
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](#co_data_driven_finance_CO22-2)'
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
- en: Corrects the first moment (expectation) to 0.0
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
- en: '[![3](Images/3.png)](#co_data_driven_finance_CO22-3)'
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
- en: Corrects the second moment (standard deviation) to 1.0
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
- en: '![aiif 0416](Images/aiif_0416.png)'
  id: totrans-438
  prefs: []
  type: TYPE_IMG
- en: Figure 4-16\. Standard normally distributed random numbers
  id: totrans-439
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Now consider a set of random numbers that share the same first and second moment
    values but have a completely different distribution than [Figure 4-17](#figure_ddf_14)
    illustrates. Although the moments are the same, this distribution only consists
    of three discrete values:'
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  id: totrans-441
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '[![1](Images/1.png)](#co_data_driven_finance_CO23-1)'
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
- en: A set of numbers with three discrete values only
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](#co_data_driven_finance_CO23-5)'
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
- en: Corrects the first moment (expectation) to 0.0
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
- en: '[![3](Images/3.png)](#co_data_driven_finance_CO23-6)'
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
- en: Corrects the second moment (standard deviation) to 1.0
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
- en: '![aiif 0417](Images/aiif_0417.png)'
  id: totrans-448
  prefs: []
  type: TYPE_IMG
- en: Figure 4-17\. Distribution with first and second moment of 0.0 and 1.0, respectively
  id: totrans-449
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: First and Second Moment
  id: totrans-450
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The first and second moment of a probability distribution only describe a normal
    distribution completely. There are infinitely many other distributions that might
    share the first two moments with a normal distribution while being completely
    different.
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
- en: 'In preparation for a test of real financial returns, consider the following
    Python functions that allow one to visualize data as a histogram and to add a
    probability density function (PDF) of a normal distribution with the first two
    moments of the data:'
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  id: totrans-453
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '[![1](Images/1.png)](#co_data_driven_finance_CO24-1)'
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
- en: Plots the histogram of the data
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
- en: '[![2](Images/2.png)](#co_data_driven_finance_CO24-2)'
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
- en: Plots the PDF of the corresponding normal distribution
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 4-18](#figure_ddf_15) shows how well the histogram approximates the
    PDF for the standard normally distributed random numbers:'
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  id: totrans-459
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: '![aiif 0418](Images/aiif_0418.png)'
  id: totrans-460
  prefs: []
  type: TYPE_IMG
- en: Figure 4-18\. Histogram and PDF for standard normally distributed numbers
  id: totrans-461
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'By contrast, [Figure 4-19](#figure_ddf_16) illustrates that the PDF of the
    normal distribution has nothing to do with the data shown as a histogram:'
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  id: totrans-463
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '![aiif 0419](Images/aiif_0419.png)'
  id: totrans-464
  prefs: []
  type: TYPE_IMG
- en: Figure 4-19\. Histogram and normal PDF for discrete numbers
  id: totrans-465
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Another way of comparing a normal distribution to data is the Quantile-Quantile
    (Q-Q) plot. As [Figure 4-20](#figure_ddf_17) shows, for normally distributed numbers,
    the numbers themselves lie (mostly) on a straight line in the Q-Q plane:'
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  id: totrans-467
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '![aiif 0420](Images/aiif_0420.png)'
  id: totrans-468
  prefs: []
  type: TYPE_IMG
- en: Figure 4-20\. Q-Q plot for standard normally distributed numbers
  id: totrans-469
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Again, the Q-Q plot as shown in [Figure 4-21](#figure_ddf_18) for the discrete
    numbers looks completely different to the one in [Figure 4-20](#figure_ddf_17):'
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  id: totrans-471
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '![aiif 0421](Images/aiif_0421.png)'
  id: totrans-472
  prefs: []
  type: TYPE_IMG
- en: Figure 4-21\. Q-Q plot for discrete numbers
  id: totrans-473
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Finally, one can also use statistical tests to check whether a set of numbers
    is normally distributed or not.
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
- en: 'The following Python function implements three tests:'
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
- en: Test for normal skew.
  id: totrans-476
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Test for normal kurtosis.
  id: totrans-477
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Test for normal skew and kurtosis combined.
  id: totrans-478
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'A p-value below 0.05 is generally considered to be a counter-indicator for
    normality; that is, the hypothesis that the numbers are normally distributed is
    rejected. In that sense, as in the preceding figures, the p-values for the two
    data sets speak for themselves:'
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  id: totrans-480
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Real financial returns
  id: totrans-481
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The following Python code retrieves EOD data from a remote source, as done
    earlier in the chapter, and calculates the log returns for all financial time
    series contained in the data set. [Figure 4-22](#figure_ddf_19) shows that the
    log returns of the S&P 500 stock index represented as a histogram show a much
    higher peak and fatter tails when compared to the normal PDF with the sample expectation
    and standard deviation. These two insights are *stylized facts* because they can
    be consistently observed for different financial instruments:'
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  id: totrans-483
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '![aiif 0422](Images/aiif_0422.png)'
  id: totrans-484
  prefs: []
  type: TYPE_IMG
- en: Figure 4-22\. Frequency distribution and normal PDF for S&P 500 log returns
  id: totrans-485
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Similar insights can be gained when considering the Q-Q plot for the S&P 500
    log returns in [Figure 4-23](#figure_ddf_20). In particular, the Q-Q plot visualizes
    the fat tails pretty well (points below the straight line to the left and above
    the straight line to the right):'
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  id: totrans-487
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: '![aiif 0423](Images/aiif_0423.png)'
  id: totrans-488
  prefs: []
  type: TYPE_IMG
- en: Figure 4-23\. Q-Q for S&P 500 log returns
  id: totrans-489
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'The Python code that follows conducts the statistical tests regarding the normality
    of the real financial returns for a selection of the financial time series from
    the data set. Real financial returns regularly fail such tests. Therefore, it
    is safe to conclude that the normality assumption about financial returns hardly,
    if at all, describes financial reality:'
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  id: totrans-491
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Normality Assumption
  id: totrans-492
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Although the normality assumption is a good approximation for many real-world
    phenomena, such as in physics, it is not appropriate and can even be dangerous
    when it comes to financial returns. Almost no financial return sample data set
    passes statistical normality tests. Beyond the fact that it has proven useful
    in other domains, a major reason why this assumption is found in so many financial
    models is that it leads to elegant and relatively simple mathematical models,
    calculations, and proofs.
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
- en: Linear Relationships
  id: totrans-494
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Similar to the “omnipresence” of the normality assumption in financial models
    and theories, *linear relationships* between variables seem to be another widespread
    benchmark. This sub-section considers an important one, namely the assumed linear
    relationship in the CAPM between the beta of a stock and its expected (realized)
    return. Generally speaking, the higher the beta is, the higher the expected return
    given a positive market performance will be—in a fixed proportional way as given
    by the beta value itself.
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
- en: Recall the calculation of the betas, the CAPM expected returns, and the realized
    returns for a selection of technology stocks from the previous section, which
    is repeated in the following Python code for convenience. This time, the beta
    values are added to the results’ `DataFrame` object as well.
  id: totrans-496
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  id: totrans-497
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'The following analysis calculates the <math alttext="upper R squared"><msup><mi>R</mi>
    <mn>2</mn></msup></math> score for a linear regression for which the beta is the
    independent variable and the *expected CAPM return*, given the market portfolio
    performance, is the dependent variable. <math alttext="upper R squared"><msup><mi>R</mi>
    <mn>2</mn></msup></math> refers to the *coefficient of determination* and measures
    how well a model performs compared to a baseline predictor in the form of a simple
    mean value. The linear regression can only explain around 10% of the variability
    in the expected CAPM return, a pretty low value, which is also confirmed through
    [Figure 4-24](#figure_ddf_21):'
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  id: totrans-499
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '![aiif 0424](Images/aiif_0424.png)'
  id: totrans-500
  prefs: []
  type: TYPE_IMG
- en: Figure 4-24\. Expected CAPM return versus beta (including linear regression)
  id: totrans-501
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'For the *realized return*, the explanatory power of the linear regression is
    even lower, with about 4.5% (see [Figure 4-25](#figure_ddf_22)). The linear regressions
    recover the positive relationship between beta and stock returns—“the higher the
    beta, the higher the return given the (positive) market portfolio performance”—as
    indicated by the positive slope of the regression lines. However, they only explain
    a small part of the observed overall variability in the stock returns:'
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  id: totrans-503
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: '![aiif 0425](Images/aiif_0425.png)'
  id: totrans-504
  prefs: []
  type: TYPE_IMG
- en: Figure 4-25\. Expected CAPM return versus beta (including linear regression)
  id: totrans-505
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Linear Relationships
  id: totrans-506
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As with the normality assumptions, linear relationships can often be observed
    in the physical world. However, in finance there are hardly any cases in which
    variables depend on each other in a clearly linear way. From a modeling point
    of view, linear relationships lead, as does the normality assumption, to elegant
    and relatively simple mathematical models, calculations, and proofs. In addition,
    the standard tool in financial econometrics, OLS regression, is well suited to
    dealing with linear relationships in data. These are major reasons why normality
    and linearity are often deliberately chosen as convenient building blocks of financial
    models and theories.
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
- en: Conclusions
  id: totrans-508
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Science has been driven for centuries by the rigorous generation and analysis
    of data. However, finance used to be characterized by normative theories based
    on simplified mathematical models of the financial markets, relying on assumptions
    such as normality of returns and linear relationships. The almost universal and
    comprehensive availability of (financial) data has led to a shift in focus from
    a *theory-first* approach to *data-driven* finance. Several examples based on
    real financial data illustrate that many popular financial models and theories
    cannot survive a confrontation with financial market realities. Although elegant,
    they might be too simplistic to capture the complexities, changing nature, and
    nonlinearities of financial markets.
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
- en: References
  id: totrans-510
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Books and papers cited in this chapter:'
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
- en: 'Allais, M. 1953\. “Le Comportement de l’Homme Rationnel devant le Risque: Critique
    des Postulats et Axiomes de l’Ecole Americaine.” *Econometrica* 21 (4): 503-546.'
  id: totrans-512
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Alexander, Carol. 2008a. *Quantitative Methods in Finance*. Market Risk Analysis
    I, West Sussex: John Wiley & Sons.'
  id: totrans-513
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '⸻. 2008b. *Practical Financial Econometrics*. Market Risk Analysis II, West
    Sussex: John Wiley & Sons.'
  id: totrans-514
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bender, Jennifer et al. 2013\. “Foundations of Factor Investing.” *MSCI Research
    Insight*. [*http://bit.ly/aiif_factor_invest*](http://bit.ly/aiif_factor_invest).
  id: totrans-515
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Campbell, John Y. 2018\. *Financial Decisions and Markets: A Course in Asset
    Pricing.* Princeton and Oxford: Princeton University Press.'
  id: totrans-516
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Ellsberg, Daniel. 1961\. “Risk, Ambiguity, and the Savage Axioms.” *Quarterly
    Journal of Economics* 75 (4): 643-669.'
  id: totrans-517
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Fontaine, Philippe and Robert Leonard. 2005\. *The Experiment in the History
    of Economics*. London and New York: Routledge.'
  id: totrans-518
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kopf, Dan. 2015\. “The Discovery of Statistical Regression.” *Priceonomics*,
    November 6, 2015\. [*http://bit.ly/aiif_ols*](http://bit.ly/aiif_ols).
  id: totrans-519
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Lee, Kai-Fu. 2018\. *AI Superpowers: China, Silicon Valley, and the New World
    Order.* Boston and New York: Houghton Mifflin Harcourt.'
  id: totrans-520
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Sapolsky, Robert M. 2018\. *Behave: The Biology of Humans at Our Best and Worst.*
    New York: Penguin Books.'
  id: totrans-521
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Savage, Leonard J. (1954) 1972\. *The Foundations of Statistics.* 2nd ed. New
    York: Dover Publications.'
  id: totrans-522
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wigglesworth, Robin. 2019\. “How Investment Analysts Became Data Miners.” *Financial
    Times*, November 28, 2019\. [*https://oreil.ly/QJGtd*](https://oreil.ly/QJGtd).
  id: totrans-523
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Python Code
  id: totrans-524
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following Python file contains a number of helper functions to simplify
    certain tasks in NLP:'
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  id: totrans-526
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: ^([1](ch04.xhtml#idm45625324920136-marker)) See, for example, Kopf (2015).
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
- en: ^([2](ch04.xhtml#idm45625324874120-marker)) This data service is only available
    via a paid subscription.
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
- en: ^([3](ch04.xhtml#idm45625324543064-marker)) `RIC` stands for *Reuters Instrument
    Code*.
  id: totrans-529
  prefs: []
  type: TYPE_NORMAL
- en: ^([4](ch04.xhtml#idm45625313161960-marker)) Numbers generated by the random
    number generator of `NumPy` are *pseudorandom numbers*, although they are referenced
    throughout the book as *random numbers*.
  id: totrans-530
  prefs: []
  type: TYPE_NORMAL
