- en: Part IV. Algorithmic Trading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Success means making profits and avoiding losses.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Martin Zweig
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[Part III](part03.xhtml#part_statistical_inefficiencies) is concerned with
    the discovery of *statistical* inefficiencies in financial markets by the use
    of deep learning and reinforcement learning techniques. This part, by contrast,
    is concerned with identifying and exploiting *economic* inefficiencies for which
    statistical inefficiencies are a prerequisite in general. The tool of choice for
    exploiting economic inefficiencies is *algorithmic trading*, that is, the automated
    execution of trading strategies based on predictions generated by a trading bot.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Table IV-1](#ei_comparison) compares in a simplified manner the problem of
    training and deploying a trading bot with the one of building and deploying a
    self-driving car.'
  prefs: []
  type: TYPE_NORMAL
- en: Table IV-1\. Self-driving cars compared to trading bots
  prefs: []
  type: TYPE_NORMAL
- en: '| Step | Self-Driving Car | Trading Bot |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Training | Training AI in virtual and recorded environments | Training AI
    with simulated and real historical data |'
  prefs: []
  type: TYPE_TB
- en: '| Risk management | Adding rules to avoid collisions, crashes, and so on |
    Adding rules to avoid large losses, to take profits early, and so on |'
  prefs: []
  type: TYPE_TB
- en: '| Deployment | Combining AI with car hardware, deploying the car on the street,
    and monitoring | Combining AI with trading platform, deploying the trading bot
    for real trading, and monitoring |'
  prefs: []
  type: TYPE_TB
- en: 'This part consists of three chapters that are structured along the three steps,
    as illustrated in [Table IV-1](#ei_comparison), to exploit economic inefficiencies
    through a trading bot—starting with the vectorized backtesting of trading strategies,
    covering the analysis of risk management measures through event-based backtesting,
    and discussing technical details in the context of strategy execution and deployment:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](ch10.xhtml#vectorized_backtesting) is about the *vectorized backtesting*
    of algorithmic trading strategies, such as those based on a DNN for market prediction.
    This approach is both efficient and insightful with regard to a first judgment
    of the economic potential of a trading strategy. It also allows one to assess
    the impact of transaction costs on economic performance.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 11](ch11.xhtml#risk_management) covers central aspects of managing
    the risk of algorithmic trading strategies, such as the use of stop loss orders
    or take profit orders. In addition to vectorized backtesting, this chapter introduces
    event-based backtesting as a more flexible approach to judge the economic potential
    of a trading strategy.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 12](ch12.xhtml#execution_deployment) is primarily about the execution
    of trading strategies. Topics are the retrieval of historical data, the training
    of a trading bot based on this data, the streaming of real-time data, and the
    placement of orders. It introduces [Oanda](http://oanda.com) and its API as a
    trading platform well suited to algorithmic trading. It also covers fundamental
    aspects of deploying AI-powered algorithmic trading strategies in automatic fashion.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Algorithmic Trading Strategies
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Algorithmic trading is a vast field and encompasses different types of trading
    strategies. Some, for example, try to minimize the market impact during the execution
    of large orders (liquidity algorithms). Others try to replicate the payoff of
    derivatives instruments as closely as possible (dynamic hedging/replication).
    These examples illustrate that not all algorithmic trading strategies have the
    goal of exploiting economic inefficiencies. For the purposes of this book, the
    focus on algorithmic trading strategies that result from predictions made by a
    trading bot (for example, in the form of a DNN agent or an RL agent) seems appropriate
    and useful.
  prefs: []
  type: TYPE_NORMAL
