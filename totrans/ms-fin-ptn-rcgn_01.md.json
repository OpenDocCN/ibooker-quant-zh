["```py\nimport datetime\nimport pytz\nimport pandas as pd\nimport MetaTrader5 as mt5\nimport numpy as np \n```", "```py\nframe_M15 = mt5.TIMEFRAME_M15 `# 15-minute time`\nframeframe_M30 = mt5.TIMEFRAME_M30 `# 30-minute time frame`\nframe_H1 = mt5.TIMEFRAME_H1 `# Hourly time frame`\nframe_H4 = mt5.TIMEFRAME_H4 `# 4-hour time frame`\nframe_D1 = mt5.TIMEFRAME_D1 `# Daily time frame`\nframe_W1 = mt5.TIMEFRAME_W1 `# Weekly time frame`\nframe_M1 = mt5.TIMEFRAME_MN1 `# Monthly time frame`\n\n```", "```py\nnow = datetime.datetime.now()\n```", "```py\nassets = ['EURUSD', 'USDCHF', 'GBPUSD', 'USDCAD', 'BTCUSD', \n          'ETHUSD', 'XAUUSD', 'XAGUSD', 'SP500m', 'UK100']\n```", "```py\ndef get_quotes(time_frame, year = 2005, month = 1, day = 1, \n               asset = \"EURUSD\"):\n\n    if not mt5.initialize():\n\n        print(\"initialize() failed, error code =\", mt5.last_error())\n\n        quit()\n\n    timezone = pytz.timezone(\"Europe/Paris\")\n\n    time_from = datetime.datetime(year, month, day, tzinfo = timezone)\n\n    time_to = datetime.datetime.now(timezone) + datetime.timedelta(days=1)\n\n    rates = mt5.copy_rates_range(asset, time_frame, time_from, time_to)\n\n    rates_frame = pd.DataFrame(rates)\n\n    return rates_frame\n\n```", "```py\nAmerica/New_York\nEurope/London\nEurope/Paris\nAsia/Tokyo\nAustralia/Sydney\n\n```", "```py\ndef mass_import(asset, time_frame):\n\n    if time_frame == 'H1':\n        data = get_quotes(frame_H1, 2013, 1, 1, asset = assets[asset])\n        data = data.iloc[:, 1:5].values\n        data = data.round(decimals = 5)        \n\n    if time_frame == 'D1':\n        data = get_quotes(frame_D1, 2000, 1, 1, asset = assets[asset])\n        data = data.iloc[:, 1:5].values\n        data = data.round(decimals = 5)        \n\n    return data \n\n```", "```py\nmy_data = mass_import(5, 'D1')\n```", "```py\nmy_data = mass_import(2, 'H1')\n```", "```py\n`# Importing the excel file into the Python interpreter`\nmy_data = pd.read_excel('my_data.xlsx')\n\n```", "```py\n`# Importing the library`\nimport numpy as np\n\n`# Converting from data frame to array`\nmy_data = np.array(my_data)\n\n```"]