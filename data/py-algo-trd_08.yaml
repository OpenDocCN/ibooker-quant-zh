- en: Chapter 8\. CFD Trading with Oanda
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章。使用Oanda进行CFD交易
- en: Today, even small entities that trade complex instruments or are granted sufficient
    leverage can threaten the global financial system.
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 今天，即使是交易复杂工具或获得足够杠杆的小实体也可能威胁全球金融系统。
- en: ''
  id: totrans-2
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Paul Singer
  id: totrans-3
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 保罗·辛格
- en: 'Today, it is easier than ever to get started with trading in the financial
    markets. There is a large number of online trading platforms (brokers) available
    from which an algorithmic trader can choose. The choice of a platform might be
    influenced by multiple factors:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 今天，开始在金融市场进行交易比以往任何时候都更容易。有大量在线交易平台（经纪商）可供算法交易者选择。选择平台可能受多种因素影响：
- en: Instruments
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 工具
- en: The first criterion that comes to mind is the type of instrument one is interested
    in to trade. For example, one might be interested in trading stocks, exchange
    traded funds (ETFs), bonds, currencies, commodities, options, or futures.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个想到的标准是所感兴趣的交易工具类型。例如，一个人可能有兴趣交易股票、交易所交易基金（ETFs）、债券、货币、大宗商品、期权或期货。
- en: Strategies
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 策略
- en: Some traders are interested in long-only strategies, while others require short
    selling as well. Some focus on single-instrument strategies, while others focus
    on those involving multiple instruments at the same time.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 一些交易者对仅限多头策略感兴趣，而其他人则需要做空。一些人专注于单一工具策略，而其他人则专注于同时涉及多种工具的策略。
- en: Costs
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 成本
- en: Fixed and variable transaction costs are an important factor for many traders.
    They might even decide whether a certain strategy is profitable or not (see, for
    instance, Chapters [4](ch04.html#vectorized_backtesting) and [6](ch06.html#event_based_backtesting)).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 固定和变动交易成本对许多交易者来说是一个重要因素。它们甚至可能决定某种策略是否盈利（例如，参见第[4](ch04.html#vectorized_backtesting)章和第[6](ch06.html#event_based_backtesting)章）。
- en: Technology
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 技术
- en: Technology has become an important factor in the selection of trading platforms.
    First, there are the tools that the platforms offer to traders. Trading tools
    are available, in general, for desktop/notebook computers, tablets, and smart
    phones. Second, there are the application programming interfaces (APIs) that can
    be accessed programmatically by traders.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 技术已经成为选择交易平台的重要因素。首先是平台为交易者提供的工具。通常，交易工具可用于桌面/笔记本电脑、平板电脑和智能手机。其次是交易者可以以编程方式访问的应用程序编程接口（APIs）。
- en: Jurisdiction
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 管辖权
- en: Financial trading is a heavily regulated field with different legal frameworks
    in place for different countries or regions. This might prohibit certain traders
    from using certain platforms and/or financial instruments depending on their residence.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 金融交易是一个受严格监管的领域，不同国家或地区有不同的法律框架。这可能会根据其居住地禁止某些交易者使用某些平台和/或金融工具。
- en: 'This chapter focuses on [Oanda](http://oanda.com), an online trading platform
    that is well suited to deploy automated, algorithmic trading strategies, even
    for retail traders. The following is a brief description of Oanda along the criteria
    as outlined previously:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 本章重点介绍[Oanda](http://oanda.com)，这是一个在线交易平台，非常适合部署自动化、算法交易策略，即使是零售交易者也能轻松应用。以下是对Oanda的简要描述，根据之前概述的标准：
- en: Instruments
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 工具
- en: Oanda offers a wide range of so-called *contracts for difference* (CFD) products
    (see also [“Contracts for Difference (CFDs)”](#cfds) and [“Disclaimer”](ch09.html#disclaimer)).
    Main characteristics of CFDs are that they are leveraged (for example, 10:1 or
    50:1) and traded on margin such that losses might exceed the initial capital.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Oanda提供各种所谓的*差价合约*（CFD）产品（参见[“差价合约 (CFDs)”](#cfds)和[“免责声明”](ch09.html#disclaimer)）。CFD的主要特点是可以使用杠杆（例如10:1或50:1），并且交易保证金化，因此亏损可能超过初始资本。
- en: Strategies
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 策略
- en: Oanda allows both to go long (buy) and to go short (sell) CFDs. Different order
    types are available, such as market or limit orders, with or without profit targets
    and/or (trailing) stop losses.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: Oanda允许同时买入和卖出CFD。提供不同类型的订单，如市价或限价订单，带有或不带有利润目标和/或（追踪）止损。
- en: Costs
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 成本
- en: There are no fixed transaction costs associated with the trading of CFDs at
    Oanda. However, there is a bid-ask spread that leads to variable transaction costs
    when trading CFDs.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在Oanda交易CFD时，没有固定的交易成本。然而，存在买卖价差，导致交易CFD时的变动交易成本。
- en: Technology
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 技术
- en: Oanda provides the trading application fxTrade (Practice), which retrieves data
    in real time and allows the (manual, discretionary) trading of all instruments
    (see [Figure 8-1](#oanda_01_a)). There is also a browser-based trading application
    available (see [Figure 8-2](#oanda_01_b)). A major strength of the platform are
    the RESTful and streaming APIs (see [Oanda v20 API](https://oreil.ly/_AHHI)) via
    which traders can programmatically access historical and streaming data, place
    buy and sell orders, or retrieve account information. A Python wrapper package
    is available (see [v20 on PyPi](https://oreil.ly/iZuuV)). Oanda offers free paper
    trading accounts that provide full access to all technological capabilities, which
    is really helpful in getting started on the platform. This also simplifies the
    transitioning from paper to live trading.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Oanda 提供了交易应用程序 fxTrade（Practice），可以实时检索数据并允许（手动、自主）交易所有工具（见 [图 8-1](#oanda_01_a)）。此外，还提供了基于浏览器的交易应用程序（见
    [图 8-2](#oanda_01_b)）。该平台的主要优势在于其 RESTful 和流式 API（参见 [Oanda v20 API](https://oreil.ly/_AHHI)），通过这些
    API，交易员可以编程访问历史数据和实时数据，下买卖订单或检索账户信息。还提供了一个 Python 封装包（见 [v20 on PyPi](https://oreil.ly/iZuuV)）。Oanda
    提供了免费的模拟交易账户，可以完全使用所有技术功能，这在平台入门时非常有帮助。这也简化了从模拟交易到真实交易的过渡。
- en: Jurisdiction
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 司法管辖区
- en: Depending on the residence of the account holder, the selection of CFDs that
    can be traded changes. FX-related CFDs are available basically everywhere Oanda
    is active. CFDs on stock indices, for instance, might not be available in certain
    jurisdictions.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 根据账户持有人的居住地，可以交易的 CFD 选择会有所不同。例如，与外汇相关的 CFD 在 Oanda 活跃的地方基本上都可以交易。而例如股指的 CFD，在某些司法管辖区可能不可用。
- en: '![pfat 0801](assets/pfat_0801.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![pfat 0801](assets/pfat_0801.png)'
- en: Figure 8-1\. Oanda trading application fxTrade Practice
  id: totrans-27
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 8-1\. Oanda 交易应用 fxTrade Practice
- en: '![pfat 0802](assets/pfat_0802.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![pfat 0802](assets/pfat_0802.png)'
- en: Figure 8-2\. Oanda browser-based trading application
  id: totrans-29
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 8-2\. Oanda 基于浏览器的交易应用程序
- en: The chapter is organized as follows. [“Setting Up an Account”](#oanda_setup)
    briefly discusses how to set up an account. [“The Oanda API”](#oanda_api) illustrates
    the necessary steps to access the API. Based on the API access, [“Retrieving Historical
    Data”](#oanda_historical) retrieves and works with historical data for a certain
    CFD. [“Working with Streaming Data”](#oanda_streaming) introduces the streaming
    API of Oanda for data retrieval and visualization. [“Implementing Trading Strategies
    in Real Time”](#oanda_trading) implements an automated, algorithmic trading strategy
    in real time. Finally, [“Retrieving Account Information”](#oanda_account) deals
    with retrieving data about the account itself, such as the current balance or
    recent trades. Throughout, the code makes use of a Python wrapper class called
    `tpqoa` (see [GitHub repository](https://oreil.ly/E95UV)).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 本章内容安排如下。[“设置账户”](#oanda_setup) 简要介绍了如何设置账户。[“Oanda API”](#oanda_api) 说明了访问
    API 的必要步骤。基于 API 访问，[“检索历史数据”](#oanda_historical) 获取并处理特定 CFD 的历史数据。[“处理流数据”](#oanda_streaming)
    介绍了 Oanda 的流式 API，用于数据检索和可视化。[“实时实施交易策略”](#oanda_trading) 实现了实时自动化算法交易策略。最后，[“检索账户信息”](#oanda_account)
    处理有关账户本身的数据，例如当前余额或最近的交易。整个过程中，代码使用了名为 `tpqoa` 的 Python 封装类（见 [GitHub 仓库](https://oreil.ly/E95UV)）。
- en: The goal of this chapter is to make use of the approaches and technologies as
    introduced in previous chapters to automatically trade on the Oanda platform.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的目标是利用前几章介绍的方法和技术，自动在 Oanda 平台上进行交易。
- en: Setting Up an Account
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置账户
- en: The process for setting up an account with Oanda is simple and efficient. You
    can choose between a real account and a free demo (“practice”) account, which
    absolutely suffices to implement what follows (see Figures [8-3](#oanda_02) and
    [8-4](#oanda_03)).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Oanda 注册账户的过程简单而高效。你可以选择实盘账户或免费的模拟（“练习”）账户，后者完全足以实施后续内容（见图 [8-3](#oanda_02)
    和 [8-4](#oanda_03)）。
- en: '![pfat 0803](assets/pfat_0803.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![pfat 0803](assets/pfat_0803.png)'
- en: Figure 8-3\. Oanda account registration (account types)
  id: totrans-35
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 8-3\. Oanda 账户注册（账户类型）
- en: If the registration is successful and you are logged in to the account on the
    platform, you should see a starting page, as shown in [Figure 8-5](#oanda_04).
    In the middle, you will find a download link for the `fxTrade Practice for Desktop`
    application, which you should install. Once it is running, it looks similar to
    the screenshot shown in [Figure 8-1](#oanda_01_a).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如果注册成功并且在平台上登录到帐户，您应该会看到一个起始页面，如[图 8-5](#oanda_04)所示。在中间，您会找到一个下载链接，用于安装`fxTrade
    Practice for Desktop`应用程序。一旦运行起来，它看起来类似于[图 8-1](#oanda_01_a)中显示的屏幕截图。
- en: '![pfat 0804](assets/pfat_0804.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![pfat 0804](assets/pfat_0804.png)'
- en: Figure 8-4\. Oanda account registration (registration form)
  id: totrans-38
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 8-4\. Oanda帐户注册（注册表单）
- en: '![pfat 0805](assets/pfat_0805.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![pfat 0805](assets/pfat_0805.png)'
- en: Figure 8-5\. Oanda account starting page
  id: totrans-40
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 8-5\. Oanda帐户起始页面
- en: The Oanda API
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Oanda API
- en: After registration, getting access to the APIs of Oanda is an easy affair. The
    major ingredients needed are the account number and the access token (API key).
    You will find the account number, for instance, in the area `Manage Funds`. The
    access token can be generated in the area `Manage API Access` (see [Figure 8-6](#oanda_05)).^([1](ch08.html#idm45785354036712))
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 注册后，轻松获取Oanda的API访问权限。所需的主要要素是帐号和访问令牌（API密钥）。例如，您可以在“管理资金”区域找到帐号号码。访问令牌可以在“管理API访问”区域生成（见[图 8-6](#oanda_05)）。^([1](ch08.html#idm45785354036712))
- en: 'From now on, the [`configparser`](https://oreil.ly/UaQyo) module is used to
    manage account credentials. The module expects a text file—with a filename, say,
    of *pyalgo.cfg*—in the following format for use with an Oanda practice account:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 从现在开始，使用[`configparser`](https://oreil.ly/UaQyo)模块来管理帐户凭证。该模块期望一个文本文件——例如命名为*pyalgo.cfg*——的以下格式，以便与Oanda实践帐户一起使用：
- en: '[PRE0]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![pfat 0806](assets/pfat_0806.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![pfat 0806](assets/pfat_0806.png)'
- en: Figure 8-6\. Oanda API access managing page
  id: totrans-46
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 8-6\. Oanda API访问管理页面
- en: To access the API via Python, it is recommended to use the Python wrapper package
    `tpqoa` (see [GitHub repository](http://github.com/yhilpisch/tpqoa)) that in turn
    relies on the `v20` package from Oanda (see [GitHub repository](https://oreil.ly/F_cB2)).
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 要通过Python访问API，建议使用Python封装包`tpqoa`（参见[GitHub代码库](http://github.com/yhilpisch/tpqoa)），它依赖于Oanda的`v20`包（参见[GitHub代码库](https://oreil.ly/F_cB2)）。
- en: 'It is installed with the following command:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 安装它的命令如下：
- en: '[PRE1]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'With these prerequisites, you can connect to the API with a single line of
    code:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这些先决条件，您可以通过一行代码连接到API：
- en: '[PRE2]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[![1](assets/1.png)](#co_cfd_trading_with_oanda_CO1-1)'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_cfd_trading_with_oanda_CO1-1)'
- en: Adjust the path and filename if required.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 如有需要，请调整路径和文件名。
- en: 'This is a major milestone: being connected to the Oanda API allows for the
    retrieval of historical data, the programmatic placement of orders, and more.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个重要的里程碑：连接到Oanda API允许检索历史数据、程序化下单等功能。
- en: The upside of using the `configparser` module is that it simplifies the storage
    and management of account credentials. In algorithmic trading, the number of accounts
    needed can quickly grow. Examples are a cloud instance or server, data service
    provider, online trading platform, and so on.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`configparser`模块的好处在于它简化了帐户凭证的存储和管理。在算法交易中，所需的账户数量可能会迅速增加。例如，云实例或服务器、数据服务提供商、在线交易平台等。
- en: The downside is that the account information is stored in the form of plain
    text, which represents a considerable security risk, particularly since the information
    about multiple accounts is stored in a single file. When moving to production,
    you should therefore apply, for example, file encryption methods to keep the credentials
    safe.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 缺点是帐户信息以纯文本形式存储，这代表着一个相当大的安全风险，特别是因为关于多个账户的信息存储在一个文件中。因此，在投入生产之前，您应该应用文件加密方法来确保凭证的安全性。
- en: Retrieving Historical Data
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检索历史数据
- en: A major benefit of working with the Oanda platform is that the complete price
    history of all Oanda instruments is accessible via the RESTful API. In this context,
    *complete history* refers to the different CFDs themselves, not the underlying
    instruments they are defined on.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Oanda平台的一个主要好处是，可以通过RESTful API访问所有Oanda工具的完整价格历史。在这个上下文中，*完整历史*指的是CFD本身的不同，而不是它们所定义的基础工具。
- en: Looking Up Instruments Available for Trading
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 查找可交易的工具
- en: 'For an overview of what instruments can be traded for a given account, use
    the `.get_instruments()` method. It only retrieves the display names and technical
    instruments, names from the API. More details are available via the API, such
    as minimum position size:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看特定账户可交易的工具概览，请使用`.get_instruments()`方法。它仅检索API中的显示名称和技术工具名称。更多详细信息可以通过API获取，例如最小持仓大小：
- en: '[PRE3]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Backtesting a Momentum Strategy on Minute Bars
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在分钟K线上回测动量策略
- en: 'The example that follows uses the instrument `EUR_USD` based on the EUR/USD
    currency pair. The goal is to backtest *momentum-based strategies on one-minute
    bars*. The data used is for two days in May 2020\. The first step is to *retrieve
    the raw data* from Oanda:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例使用基于EUR/USD货币对的工具`EUR_USD`。目标是在一分钟K线上回测*基于动量的策略*。使用的数据为2020年5月的两天。第一步是从Oanda
    *检索原始数据*：
- en: '[PRE4]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[![1](assets/1.png)](#co_cfd_trading_with_oanda_CO2-1)'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_cfd_trading_with_oanda_CO2-1)'
- en: Shows the docstring (help text) for the `.get_history()` method.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 显示`.get_history()`方法的文档字符串（帮助文本）。
- en: '[![2](assets/2.png)](#co_cfd_trading_with_oanda_CO2-2)'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_cfd_trading_with_oanda_CO2-2)'
- en: Defines the parameter values.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 定义参数值。
- en: '[![3](assets/3.png)](#co_cfd_trading_with_oanda_CO2-7)'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_cfd_trading_with_oanda_CO2-7)'
- en: Retrieves the raw data from the API.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 从API中检索原始数据。
- en: '[![4](assets/4.png)](#co_cfd_trading_with_oanda_CO2-8)'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_cfd_trading_with_oanda_CO2-8)'
- en: Shows the meta information for the retrieved data set.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 显示检索到的数据集的元信息。
- en: '[![5](assets/5.png)](#co_cfd_trading_with_oanda_CO2-9)'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '[![5](assets/5.png)](#co_cfd_trading_with_oanda_CO2-9)'
- en: Shows the first five data rows for two columns.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 显示两列的前五行数据。
- en: The second step is to *implement the vectorized backtesting*. The idea is to
    simultaneously backtest a couple of momentum strategies. The code is straightforward
    and concise (see also [Chapter 4](ch04.html#vectorized_backtesting)).
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 第二步是*实施向量化回测*。其想法是同时回测几种动量策略。代码简单而简洁（另见[第4章](ch04.html#vectorized_backtesting)）。
- en: For simplicity, the following code uses close (`c`) values of mid prices only:^([2](ch08.html#idm45785352515432))
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 为简单起见，以下代码仅使用中间价格的收盘（`c`）值：^([2](ch08.html#idm45785352515432))
- en: '[PRE5]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[![1](assets/1.png)](#co_cfd_trading_with_oanda_CO3-1)'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_cfd_trading_with_oanda_CO3-1)'
- en: Calculates the log returns based on the `close` values of the mid prices.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 基于中间价格的`close`值计算对数收益。
- en: '[![2](assets/2.png)](#co_cfd_trading_with_oanda_CO3-2)'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_cfd_trading_with_oanda_CO3-2)'
- en: Instantiates an empty `list` object to collect column names.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 实例化一个空`list`对象来收集列名。
- en: '[![3](assets/3.png)](#co_cfd_trading_with_oanda_CO3-3)'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_cfd_trading_with_oanda_CO3-3)'
- en: Defines the time interval in minute bars for the momentum strategy.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 定义动量策略的分钟K线时间间隔。
- en: '[![4](assets/4.png)](#co_cfd_trading_with_oanda_CO3-4)'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_cfd_trading_with_oanda_CO3-4)'
- en: Defines the name of the column to be used for storage in the `DataFrame` object.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 定义要在`DataFrame`对象中存储的列名。
- en: '[![5](assets/5.png)](#co_cfd_trading_with_oanda_CO3-5)'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '[![5](assets/5.png)](#co_cfd_trading_with_oanda_CO3-5)'
- en: Adds the strategy positionings as a new column.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 将策略定位添加为新列。
- en: '[![6](assets/6.png)](#co_cfd_trading_with_oanda_CO3-6)'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '[![6](assets/6.png)](#co_cfd_trading_with_oanda_CO3-6)'
- en: Appends the name of the column to the `list` object.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 向`list`对象附加列名。
- en: 'The final step is the *derivation and plotting of the absolute performance*
    of the different momentum strategies. The plot [Figure 8-7](#oanda_plot_1) shows
    the performances of the momentum-based strategies graphically and compares them
    to the performance of the base instrument itself:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步是*推导和绘制不同动量策略的绝对表现*。图[图8-7](#oanda_plot_1)以图形方式显示了基于动量的策略的表现，并将其与基础工具的表现进行比较：
- en: '[PRE6]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[![1](assets/1.png)](#co_cfd_trading_with_oanda_CO4-1)'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_cfd_trading_with_oanda_CO4-1)'
- en: Defines another `list` object to store the column names to be plotted later
    on.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 定义另一个`list`对象以存储稍后绘制的列名。
- en: '[![2](assets/2.png)](#co_cfd_trading_with_oanda_CO4-2)'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_cfd_trading_with_oanda_CO4-2)'
- en: Iterates over columns with the positionings for the different strategies.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 遍历具有不同策略定位的列。
- en: '[![3](assets/3.png)](#co_cfd_trading_with_oanda_CO4-3)'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_cfd_trading_with_oanda_CO4-3)'
- en: Derives the name for the new column in which the strategy performance is stored.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 推导策略表现存储的新列名称。
- en: '[![4](assets/4.png)](#co_cfd_trading_with_oanda_CO4-4)'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_cfd_trading_with_oanda_CO4-4)'
- en: Calculates the log returns for the different strategies and stores them as new
    columns.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 为不同策略计算对数收益并将其存储为新列。
- en: '[![5](assets/5.png)](#co_cfd_trading_with_oanda_CO4-5)'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '[![5](assets/5.png)](#co_cfd_trading_with_oanda_CO4-5)'
- en: Appends the column names to the `list` object for later plotting.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 将列名附加到`list`对象，以备后续绘图使用。
- en: '[![6](assets/6.png)](#co_cfd_trading_with_oanda_CO4-6)'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '[![6](assets/6.png)](#co_cfd_trading_with_oanda_CO4-6)'
- en: Plots the cumulative performances for the instrument and the strategies.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制工具和策略的累积表现。
- en: '![pfat 0807](assets/pfat_0807.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![pfat 0807](assets/pfat_0807.png)'
- en: Figure 8-7\. Gross performance of different momentum strategies for `EUR_USD`
    instrument (minute bars)
  id: totrans-105
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 8-7 显示了`EUR_USD`工具（分钟柱）不同动量策略的总体表现。
- en: Factoring In Leverage and Margin
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 考虑杠杆和保证金因素
- en: 'In general, when you buy a share of a stock for, say, 100 USD, the profit and
    loss (P&L) calculations are straightforward: if the stock price rises by 1 USD,
    you earn 1 USD (unrealized profit); if the stock price falls by 1 USD, you lose
    1 USD (unrealized loss). If you buy 10 shares, just multiply the results by 10.'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 一般而言，当你购买一支股票，例如100美元时，盈亏（P&L）计算非常直观：如果股票价格上涨1美元，你赚取1美元（未实现盈利）；如果股票价格下跌1美元，你亏损1美元（未实现损失）。如果你购买了10股，只需将结果乘以10。
- en: Trading CFDs on the Oanda platform involves leverage and margin. This significantly
    influences the P&L calculation. For an introduction to and overview of this topic
    refer to [Oanda fxTrade Margin Rules](https://oreil.ly/8I5Eg). A simple example
    can illustrate the major aspects in this context.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在Oanda平台上交易差价合约（CFD）涉及杠杆和保证金，这对P&L计算有显著影响。有关此主题的介绍和概述，请参阅[Oanda fxTrade Margin
    Rules](https://oreil.ly/8I5Eg)。一个简单的例子可以在这个背景下阐明主要方面。
- en: Consider that a EUR-based algorithmic trader wants to trade the `EUR_USD` instrument
    on the Oanda platform and wants to get a long exposure of 10,000 EUR at an ask
    price of 1.1\. Without leverage and margin, the trader (or Python program) would
    buy 10,000 units of the CFD.^([3](ch08.html#idm45785353211096)) If the price of
    the instrument (exchange rate) rises to 1.105 (as the midpoint rate between bid
    and ask prices), the absolute profit is 10,000 x 0.005 = 50 or 0.5%.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 假设一位以欧元为基础的算法交易员希望在Oanda平台上交易`EUR_USD`工具，并且希望以1.1的卖出价格获得10,000欧元的多头敞口。如果没有杠杆和保证金，交易员（或Python程序）将购买10,000单位的CFD。^([3](ch08.html#idm45785353211096))如果工具（汇率）价格上涨至1.105（作为买卖价格间的中间率），绝对利润为10,000
    x 0.005 = 50或0.5%。
- en: What impact do leverage and margining have? Suppose the algorithmic trader chooses
    a leverage ratio of 20:1, which translates into a 5% margin (= 100% / 20). This
    in turn implies that the trader only needs to put up a margin upfront of 10,000
    EUR x 5% = 500 EUR to get the same exposure. If the price of the instrument then
    rises to 1.105, the absolute profit stays the same at 50 EUR, but the relative
    profit rises to 50 EUR / 500 EUR = 10%. The return is considerably amplified by
    a factor of 20; this is the benefit of leverage when things go as desired.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 杠杆和保证金会带来什么影响？假设算法交易员选择20:1的杠杆比率，这意味着5%的保证金（= 100% / 20）。这意味着交易员只需提前支付10,000欧元
    x 5% = 500欧元的保证金，即可获得相同的敞口。如果随后工具价格上涨至1.105，绝对利润保持在50欧元不变，但相对利润却提高到50欧元 / 500欧元
    = 10%。收益因杠杆而显著放大，这是当事情如期望般进行时的好处。
- en: What happens if things go south? Assume the instrument price drops to 1.08 (as
    the midpoint rate between bid and ask prices), leading to a loss of 10,000 x (1.08
    - 1.1) = -200 EUR. The relative loss now is -200 EUR / 500 EUR = -40%. If the
    account the algorithmic trader is trading with has less than 200 EUR left in equity/cash,
    the position needs to be closed out since the (regulatory) margin requirements
    cannot be met anymore. If losses eat up the margin completely, additional funds
    need to be allocated as margin to keep the trade alive.^([4](ch08.html#idm45785353206904))
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 如果情况变糟，会发生什么？假设工具价格跌至1.08（作为买卖价格间的中间率），导致损失为10,000 x (1.08 - 1.1) = -200欧元。现在的相对损失为-200欧元
    / 500欧元 = -40%。如果算法交易员所用账户的权益/现金少于200欧元，那么由于无法满足（监管）保证金要求，必须平仓。如果损失完全吞噬了保证金，需要额外的资金作为保证金来维持交易的持续。
- en: '[Figure 8-8](#oanda_plot_2) shows the amplifying effect on the performance
    of the momentum strategies for a leverage ratio of 20:1\. The initial margin of
    5% suffices to cover potential losses since it is not eaten up even in the worst
    case depicted:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8-8 展示了杠杆比率为20:1时动量策略对绩效的放大效应。5%的初始保证金足以覆盖潜在的损失，即使在最坏的情况下也未被耗尽：
- en: '[PRE7]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[![1](assets/1.png)](#co_cfd_trading_with_oanda_CO5-1)'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_cfd_trading_with_oanda_CO5-1)'
- en: Multiplies the log returns by a factor of 20 according to the leverage ratio
    assumed.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 根据假设的杠杆比率，将对数收益率乘以20的因子。
- en: Leveraged trading does not only amplify potentials profits, but it also amplifies
    potential losses. With leveraged trading based on a 10:1 factor (10% margin),
    a 10% adverse move in the base instrument already wipes out the complete margin.
    In other words, a 10% move leads to a 100% loss. Therefore, you should make sure
    to fully understand all risks involved in leveraged trading. You should also make
    sure to apply appropriate risk measures, such as stop loss orders, that are in
    line with your risk profile and appetite.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 杠杆交易不仅放大了潜在的利润，也放大了潜在的损失。基于 10:1 的杠杆交易（10% 保证金），基础工具的10% 不利变动已经会清空整个保证金。换句话说，10%
    的变动导致100% 的损失。因此，您应该确保充分理解杠杆交易涉及的所有风险。您还应该确保采取适当的风险措施，例如符合您风险偏好和风险配置的止损订单。
- en: '![pfat 0808](assets/pfat_0808.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![pfat 0808](assets/pfat_0808.png)'
- en: Figure 8-8\. Gross performance of momentum strategies for `EUR_USD` instrument
    with 20:1 leverage (minute bars)
  id: totrans-118
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 8-8\. `EUR_USD` 工具动量策略的总体表现，使用 20:1 杠杆（分钟柱状图）
- en: Working with Streaming Data
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理流数据
- en: 'Working with streaming data is again made simple and straightforward by the
    Python wrapper package `tpqoa`. The package, in combination with the `v20` package,
    takes care of the socket communication such that the algorithmic trader only needs
    to decide what to do with the streaming data:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Python 封装包 `tpqoa` 再次简化和直接处理流数据。该包与 `v20` 包结合使用，处理套接字通信，使算法交易员只需决定如何处理流数据：
- en: '[PRE8]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[![1](assets/1.png)](#co_cfd_trading_with_oanda_CO6-1)'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_cfd_trading_with_oanda_CO6-1)'
- en: The `stop` parameter stops the streaming after a certain number of ticks retrieved.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '`stop` 参数在检索到一定数量的 ticks 后停止流式传输。'
- en: Placing Market Orders
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下达市场订单
- en: 'Similarly, it is straightforward to place market buy or sell orders with the
    `create_order()` method:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，使用 `create_order()` 方法可以简单地下市场买入或卖出订单：
- en: '[PRE9]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[![1](assets/1.png)](#co_cfd_trading_with_oanda_CO7-1)'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_cfd_trading_with_oanda_CO7-1)'
- en: Shows all options for placing market, limit, and market-if-touched orders.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 显示了下市场、限价和市场如果触及订单的所有选项。
- en: '[![2](assets/2.png)](#co_cfd_trading_with_oanda_CO7-2)'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_cfd_trading_with_oanda_CO7-2)'
- en: Opens a long position via market order.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 通过市场订单开设多头头寸。
- en: '[![3](assets/3.png)](#co_cfd_trading_with_oanda_CO7-3)'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_cfd_trading_with_oanda_CO7-3)'
- en: Goes short after closing the long position via market order.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在通过市场订单平仓多头头寸后进行空头操作。
- en: '[![4](assets/4.png)](#co_cfd_trading_with_oanda_CO7-4)'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_cfd_trading_with_oanda_CO7-4)'
- en: Closes the short position via market order.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 通过市场订单平仓空头头寸。
- en: Although the Oanda API allows the placement of different order types, this chapter
    and the following chapter mainly focus on *market orders* to instantly go long
    or short whenever a new signal appears.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 Oanda API 允许下达不同类型的订单，但本章和接下来的章节主要关注*市场订单*，以便在出现新信号时立即开多或开空。
- en: Implementing Trading Strategies in Real Time
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实时实现交易策略
- en: "This section presents a custom class that automatically trades the `EUR_USD`\
    \ instrument on the Oanda platform based on a momentum strategy. It is called\
    \ `MomentumTrader` and is presented in [“Python Script”](#oanda_momentum_trader).\
    \ The following walks through the class line by line, beginning with the `\x96\
    0\x97` method. The class itself inherits from the `tpqoa` class:"
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: "本节介绍了一个自定义类，根据动量策略在 Oanda 平台上自动交易 `EUR_USD` 工具。它被称为 `MomentumTrader`，在 [“Python\
    \ Script”](#oanda_momentum_trader) 中展示。以下逐行讲解该类，从 `\x960\x97` 方法开始。该类本身继承自 `tpqoa`\
    \ 类："
- en: '[PRE10]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[![1](assets/1.png)](#co_cfd_trading_with_oanda_CO8-1)'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_cfd_trading_with_oanda_CO8-1)'
- en: Initial position value (market neutral).
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 初始位置值（市场中性）。
- en: '[![2](assets/2.png)](#co_cfd_trading_with_oanda_CO8-2)'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_cfd_trading_with_oanda_CO8-2)'
- en: Instrument to be traded.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 要交易的工具。
- en: '[![3](assets/3.png)](#co_cfd_trading_with_oanda_CO8-3)'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_cfd_trading_with_oanda_CO8-3)'
- en: Length of the bar for the resampling of the tick data.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 重新采样 tick 数据的条的长度。
- en: '[![4](assets/4.png)](#co_cfd_trading_with_oanda_CO8-4)'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_cfd_trading_with_oanda_CO8-4)'
- en: Number of intervals for momentum calculation.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 动量计算的区间数。
- en: '[![5](assets/5.png)](#co_cfd_trading_with_oanda_CO8-5)'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '[![5](assets/5.png)](#co_cfd_trading_with_oanda_CO8-5)'
- en: Number of units to be traded.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 要交易的单位数。
- en: '[![6](assets/6.png)](#co_cfd_trading_with_oanda_CO8-6)'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '[![6](assets/6.png)](#co_cfd_trading_with_oanda_CO8-6)'
- en: An empty `DataFrame` object to be filled with tick data.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 一个空的 `DataFrame` 对象，将用 tick 数据填充。
- en: '[![7](assets/7.png)](#co_cfd_trading_with_oanda_CO8-7)'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '[![7](assets/7.png)](#co_cfd_trading_with_oanda_CO8-7)'
- en: The initial minimum bar length for the start of the trading itself.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 开始交易本身的初始最小 bar 长度。
- en: 'The major method is the `.on_success()` method, which implements the trading
    logic for the momentum strategy:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 主要方法是 `.on_success()` 方法，用于实现动量策略的交易逻辑：
- en: '[PRE11]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[![1](assets/1.png)](#co_cfd_trading_with_oanda_CO9-1)'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_cfd_trading_with_oanda_CO9-1)'
- en: This method is called whenever new tick data arrives.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 当新的 tick 数据到达时调用此方法。
- en: '[![2](assets/2.png)](#co_cfd_trading_with_oanda_CO9-2)'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_cfd_trading_with_oanda_CO9-2)'
- en: The number of ticks retrieved is printed.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 打印检索到的 ticks 数量。
- en: '[![3](assets/3.png)](#co_cfd_trading_with_oanda_CO9-3)'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_cfd_trading_with_oanda_CO9-3)'
- en: The tick data is collected and stored.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 收集并存储 tick 数据。
- en: '[![4](assets/4.png)](#co_cfd_trading_with_oanda_CO9-4)'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_cfd_trading_with_oanda_CO9-4)'
- en: The tick data is then resampled to the appropriate bar length.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 然后将 tick 数据重新采样为适当的 bar 长度。
- en: '[![5](assets/5.png)](#co_cfd_trading_with_oanda_CO9-5)'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '[![5](assets/5.png)](#co_cfd_trading_with_oanda_CO9-5)'
- en: The mid prices are calculated…
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 计算中间价格…
- en: '[![6](assets/6.png)](#co_cfd_trading_with_oanda_CO9-6)'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '[![6](assets/6.png)](#co_cfd_trading_with_oanda_CO9-6)'
- en: …based on which the log returns are derived.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: …基于此推导对数收益率。
- en: '[![7](assets/7.png)](#co_cfd_trading_with_oanda_CO9-7)'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '[![7](assets/7.png)](#co_cfd_trading_with_oanda_CO9-7)'
- en: The signal (positioning) is derived based on the `momentum` parameter/attribute
    (via an online algorithm).
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 基于 `momentum` 参数/属性（通过在线算法）推导信号（定位）。
- en: '[![8](assets/8.png)](#co_cfd_trading_with_oanda_CO9-8)'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '[![8](assets/8.png)](#co_cfd_trading_with_oanda_CO9-8)'
- en: When there is enough or new data, the trading logic is applied and the minimum
    length is increased by one every time.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 当有足够或新数据时，应用交易逻辑并每次增加最小长度一次。
- en: '[![9](assets/9.png)](#co_cfd_trading_with_oanda_CO9-10)'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '[![9](assets/9.png)](#co_cfd_trading_with_oanda_CO9-10)'
- en: Checks whether the latest positioning (“signal”) is `1` (long).
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 检查最新定位（“信号”）是否为 `1`（多头）。
- en: '[![10](assets/10.png)](#co_cfd_trading_with_oanda_CO9-11)'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '[![10](assets/10.png)](#co_cfd_trading_with_oanda_CO9-11)'
- en: If the current market position is `0` (neutral)…
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 如果当前市场位置为 `0`（中性）…
- en: '[![11](assets/11.png)](#co_cfd_trading_with_oanda_CO9-12)'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '[![11](assets/11.png)](#co_cfd_trading_with_oanda_CO9-12)'
- en: …a buy order for `self.units` is initiated.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: …以 `self.units` 进行买入订单。
- en: '[![12](assets/12.png)](#co_cfd_trading_with_oanda_CO9-13)'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '[![12](assets/12.png)](#co_cfd_trading_with_oanda_CO9-13)'
- en: If it is `-1` (short)…
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 如果是 `-1`（空头）…
- en: '[![13](assets/13.png)](#co_cfd_trading_with_oanda_CO9-14)'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '[![13](assets/13.png)](#co_cfd_trading_with_oanda_CO9-14)'
- en: "…a buy order for `\x960\x97` is initiated."
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: "…以 `\x960\x97` 进行买入订单。"
- en: '[![14](assets/14.png)](#co_cfd_trading_with_oanda_CO9-15)'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '[![14](assets/14.png)](#co_cfd_trading_with_oanda_CO9-15)'
- en: The market position `self.position` is set to `+1` (long).
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 市场位置 `self.position` 设置为 `+1`（多头）。
- en: '[![15](assets/15.png)](#co_cfd_trading_with_oanda_CO9-16)'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '[![15](assets/15.png)](#co_cfd_trading_with_oanda_CO9-16)'
- en: Checks whether the latest positioning (“signal”) is `-1` (short).
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 检查最新定位（“信号”）是否为 `-1`（空头）。
- en: '[![16](assets/16.png)](#co_cfd_trading_with_oanda_CO9-17)'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '[![16](assets/16.png)](#co_cfd_trading_with_oanda_CO9-17)'
- en: If the current market position is `0` (neutral)…
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 如果当前市场位置为 `0`（中性）…
- en: '[![17](assets/17.png)](#co_cfd_trading_with_oanda_CO9-18)'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '[![17](assets/17.png)](#co_cfd_trading_with_oanda_CO9-18)'
- en: …a sell order for `-self.units` is initiated.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: …以 `-self.units` 进行卖出订单。
- en: '[![18](assets/18.png)](#co_cfd_trading_with_oanda_CO9-19)'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: '[![18](assets/18.png)](#co_cfd_trading_with_oanda_CO9-19)'
- en: If it is `+1` (long)…
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 如果是 `+1`（多头）…
- en: '[![19](assets/19.png)](#co_cfd_trading_with_oanda_CO9-20)'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '[![19](assets/19.png)](#co_cfd_trading_with_oanda_CO9-20)'
- en: "…a sell order for `\x960\x97` is initiated."
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: "…以 `\x960\x97` 进行卖出订单。"
- en: '[![20](assets/20.png)](#co_cfd_trading_with_oanda_CO9-21)'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '[![20](assets/20.png)](#co_cfd_trading_with_oanda_CO9-21)'
- en: The market position `self.position` is set to -1 (short).
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 市场位置 `self.position` 设置为 -1（空头）。
- en: 'Based on this class, getting started with automated, algorithmic trading is
    just four lines of code. The Python code that follows initiates an automated trading
    session:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 根据这个类，开始自动化算法交易仅需四行代码。随后的 Python 代码启动了一个自动化交易会话：
- en: '[PRE12]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[![1](assets/1.png)](#co_cfd_trading_with_oanda_CO10-1)'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_cfd_trading_with_oanda_CO10-1)'
- en: The configuration file with the credentials.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 使用凭据的配置文件。
- en: '[![2](assets/2.png)](#co_cfd_trading_with_oanda_CO10-2)'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_cfd_trading_with_oanda_CO10-2)'
- en: The `instrument` parameter is specified.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 指定 `instrument` 参数。
- en: '[![3](assets/3.png)](#co_cfd_trading_with_oanda_CO10-3)'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_cfd_trading_with_oanda_CO10-3)'
- en: The `bar_length` parameter for the resampling is provided.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 为重新采样提供的 `bar_length` 参数。
- en: '[![4](assets/4.png)](#co_cfd_trading_with_oanda_CO10-4)'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_cfd_trading_with_oanda_CO10-4)'
- en: The `momentum` parameter is defined, which is applied to the resampled data
    intervals.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 已定义`momentum`参数，应用于重新采样的数据间隔。
- en: '[![5](assets/5.png)](#co_cfd_trading_with_oanda_CO10-5)'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: '[![5](assets/5.png)](#co_cfd_trading_with_oanda_CO10-5)'
- en: The `units` parameter is set, which specifies the position size for long and
    short positions.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '`units`参数已设置，指定了多头和空头仓位的位置大小。'
- en: '[![6](assets/6.png)](#co_cfd_trading_with_oanda_CO10-6)'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '[![6](assets/6.png)](#co_cfd_trading_with_oanda_CO10-6)'
- en: This starts the streaming and therewith the trading; it stops after 100 ticks.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 这将启动流式处理和交易；在100个点之后停止。
- en: 'The preceding code provides the following output:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 前述代码提供以下输出：
- en: '[PRE13]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Finally, close out the final position:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，关闭最后的持仓：
- en: '[PRE14]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[![1](assets/1.png)](#co_cfd_trading_with_oanda_CO11-1)'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_cfd_trading_with_oanda_CO11-1)'
- en: Closes out the final position.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 结束最后的持仓。
- en: Retrieving Account Information
  id: totrans-215
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检索账户信息
- en: 'With regard to account information, transaction history, and the like, the
    Oanda RESTful API is also convenient to work with. For example, after the execution
    of the momentum strategy in the previous section, the algorithmic trader might
    want to inspect the current balance of the trading account. This is possible via
    the `.get_account_summary()` method:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 关于账户信息、交易历史等方面，Oanda的RESTful API也很方便。例如，在前一节执行动量策略后，算法交易员可能想要查看交易账户的当前余额。这可以通过`.get_account_summary()`方法实现：
- en: '[PRE15]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Information about the last few trades is received with the `.get_transactions()`
    method:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`.get_transactions()`方法接收关于最近几笔交易的信息：
- en: '[PRE16]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'For a concise overview, there is also the `.print_transactions()` method available:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简明地概述，还有`.print_transactions()`方法可用：
- en: '[PRE17]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Conclusions
  id: totrans-222
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: The Oanda platform allows for an easy and straightforward entry into the world
    of automated, algorithmic trading. Oanda specializes in so-called contracts for
    difference (CFDs). Depending on the country of residence of the trader, there
    is a great variety of instruments that can be traded.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: Oanda平台允许轻松直接地进入自动化、算法交易的世界。Oanda专注于所谓的差价合约（CFD）。根据交易者的居住国家，可以交易多种多样的工具。
- en: A major advantage of Oanda from a technological point of view is the modern,
    powerful APIs that can be easily accessed via a dedicated Python wrapper package
    (`v20`). This chapter shows how to set up an account, how to connect to the APIs
    with Python, how to retrieve historical data (one minute bars) for backtesting
    purposes, how to retrieve streaming data in real time, how to automatically trade
    a CFD based on a momentum strategy, and how to retrieve account information and
    the detailed transaction history.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 从技术角度来看，Oanda的一个主要优势是现代、强大的API，可以通过专用的Python包（`v20`）轻松访问。本章介绍了如何设置账户，如何使用Python连接API，如何检索历史数据（一分钟K线）进行回测，如何实时检索流式数据，如何基于动量策略自动交易CFD，以及如何检索账户信息和详细的交易历史。
- en: References and Further Resources
  id: totrans-225
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考和进一步资源
- en: Visit the help and support pages of Oanda under [Help and Support](https://oreil.ly/-CMwk)
    to learn more about the Oanda platform and important aspects of CFD trading.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 访问Oanda的帮助和支持页面[帮助和支持](https://oreil.ly/-CMwk)以了解有关Oanda平台和CFD交易的重要方面的更多信息。
- en: The developer portal of Oanda [Getting Started](https://oreil.ly/oO_eV) provides
    a detailed description of the APIs.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: Oanda的开发者门户[入门指南](https://oreil.ly/oO_eV)提供了API的详细描述。
- en: Python Script
  id: totrans-228
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python脚本
- en: 'The following Python script contains an Oanda custom streaming class that automatically
    trades a momentum strategy:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 以下Python脚本包含一个Oanda自定义流式处理类，可自动执行动量策略交易：
- en: '[PRE18]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: ^([1](ch08.html#idm45785354036712-marker)) The naming of certain objects is
    not completely consistent in the context of the Oanda APIs. For example, *API
    key* and *access token* are used interchangeably. Also, *account ID* and *account
    number* refer to the same number.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: ^([1](ch08.html#idm45785354036712-marker)) 在Oanda API的上下文中，某些对象的命名并不完全一致。例如，*API密钥*和*访问令牌*可以互换使用。此外，*账户ID*和*账户号码*指的是同一个数字。
- en: ^([2](ch08.html#idm45785352515432-marker)) This implicitely neglects transaction
    costs in the form of bid-ask spreads when selling and buying units of the instrument,
    respectively.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: ^([2](ch08.html#idm45785352515432-marker)) 这隐含地忽略了卖出和买入工具单位时的交易成本，即买卖价差。
- en: ^([3](ch08.html#idm45785353211096-marker)) Note that for some instruments, *one
    unit* means 1 USD, like for currency-related CFDs. For others, like for index-related
    CFDs (for example, `DE30_EUR`), *one unit* means a currency exposure at the (bid/ask)
    price of the CFD (for example, 11,750 EUR).
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: ^([3](ch08.html#idm45785353211096-marker)) 请注意，对于某些工具，*一个单位*表示1美元，例如与货币相关的差价合约。对于其他工具，例如与指数相关的差价合约（例如，`DE30_EUR`），*一个单位*表示以差价合约的（买入/卖出）价格进行的货币敞口（例如，11,750欧元）。
- en: ^([4](ch08.html#idm45785353206904-marker)) The simplified calculations neglect,
    for example, *financing costs* that might become due for leveraged trading.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: ^([4](ch08.html#idm45785353206904-marker)) 简化的计算忽略了例如可能因杠杆交易而产生的*融资成本*。
