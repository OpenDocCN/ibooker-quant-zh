- en: Chapter 2\. Developing a Machine Learning Model in Python
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In terms of the platforms used for machine learning, there are many algorithms
    and programming languages. However, the Python ecosystem is one of the most dominant
    and fastest-growing programming languages for machine learning.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: Given the popularity and high adoption rate of Python, we will use it as the
    main programming language throughout the book. This chapter provides an overview
    of a Python-based machine learning framework. First, we will review the details
    of Python-based packages used for machine learning, followed by the model development
    steps in the Python framework.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: The steps of model development in Python presented in this chapter serve as
    the foundation for the case studies presented in the rest of the book. The Python
    framework can also be leveraged while developing any machine learning–based model
    in finance.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: Why Python?
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Some reasons for Python’s popularity are as follows:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: High-level syntax (compared to lower-level languages of C, Java, and C++). Applications
    can be developed by writing fewer lines of code, making Python attractive to beginners
    and advanced programmers alike.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Efficient development lifecycle.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Large collection of community-managed, open-source libraries.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strong portability.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The simplicity of Python has attracted many developers to create new libraries
    for machine learning, leading to strong adoption of Python.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: Python Packages for Machine Learning
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The main Python packages used for machine learning are highlighted in [Figure 2-1](#Packages).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: '![mlbf 0201](Images/mlbf_0201.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
- en: Figure 2-1\. Python packages
  id: totrans-14
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Here is a brief summary of each of these packages:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: '[NumPy](https://numpy.org)'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: Provides support for large, multidimensional arrays as well as an extensive
    collection of mathematical functions.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: '[Pandas](https://pandas.pydata.org)'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: A library for data manipulation and analysis. Among other features, it offers
    data structures to handle tables and the tools to manipulate them.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: '[Matplotlib](https://matplotlib.org)'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: A plotting library that allows the creation of 2D charts and plots.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: '[SciPy](https://www.scipy.org)'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: The combination of NumPy, Pandas, and Matplotlib is generally referred to as
    SciPy. SciPy is an ecosystem of Python libraries for mathematics, science, and
    engineering.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: '[Scikit-learn](https://scikit-learn.org) (or sklearn)'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: A machine learning library offering a wide range of algorithms and utilities.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: '[StatsModels](https://www.statsmodels.org)'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: A Python module that provides classes and functions for the estimation of many
    different statistical models, as well as for conducting statistical tests and
    statistical data exploration.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: '[TensorFlow](https://www.tensorflow.org) and [Theano](http://deeplearning.net/software/theano)'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: Dataflow programming libraries that facilitate working with neural networks.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: '[Keras](https://keras.io)'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: An artificial neural network library that can act as a simplified interface
    to TensorFlow/Theano packages.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: '[Seaborn](https://seaborn.pydata.org)'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: A data visualization library based on Matplotlib. It provides a high-level interface
    for drawing attractive and informative statistical graphics.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 基于Matplotlib的数据可视化库。它提供了一个高级接口，用于绘制引人入胜且信息丰富的统计图形。
- en: '[pip](https://pypi.org/project/pip) and [Conda](https://docs.conda.io/en/latest)'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '[pip](https://pypi.org/project/pip)和[Conda](https://docs.conda.io/en/latest)'
- en: These are Python package managers. pip is a package manager that facilitates
    installation, upgrade, and uninstallation of Python packages. Conda is a package
    manager that handles Python packages as well as library dependencies outside of
    the Python packages.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是Python包管理器。pip是一个包管理器，用于简化Python包的安装、升级和卸载。Conda是一个包管理器，处理Python包以及Python包之外的库依赖。
- en: Python and Package Installation
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Python和包安装
- en: There are different ways of installing Python. However, it is strongly recommended
    that you install Python through [Anaconda](https://www.anaconda.com). Anaconda
    contains Python, SciPy, and Scikit-learn.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 安装Python有不同的方法。然而，强烈建议通过[Anaconda](https://www.anaconda.com)安装Python。Anaconda包含Python、SciPy和Scikit-learn。
- en: 'After installing Anaconda, a Jupyter server can be started locally by opening
    the machine’s terminal and typing in the following code:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完Anaconda后，可以通过打开机器的终端并输入以下代码来在本地启动Jupyter服务器：
- en: '[PRE0]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Note
  id: totrans-40
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: All code samples in this book use Python 3 and are presented in Jupyter notebooks.
    Several Python packages, especially Scikit-learn and Keras, are extensively used
    in the case studies.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的所有代码示例均使用Python 3，并以Jupyter笔记本形式呈现。在案例研究中广泛使用了多个Python包，特别是Scikit-learn和Keras。
- en: Steps for Model Development in Python Ecosystem
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python生态系统中模型开发步骤
- en: Working through machine learning problems from end to end is critically important.
    Applied machine learning will not come alive unless the steps from beginning to
    end are well defined.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 从头到尾解决机器学习问题至关重要。除非从开始到结束定义了步骤，否则应用的机器学习将无法真正发挥作用。
- en: '[Figure 2-2](#StepsofML) provides an outline of the simple seven-step machine
    learning project template that can be used to jump-start any machine learning
    model in Python. The first few steps include exploratory data analysis and data
    preparation, which are typical data science–based steps aimed at extracting meaning
    and insights from data. These steps are followed by model evaluation, fine-tuning,
    and finalizing the model.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '[图2-2](#StepsofML)提供了一个简单的七步机器学习项目模板概述，可用于快速启动Python中的任何机器学习模型。前几个步骤包括探索性数据分析和数据准备，这是典型的数据科学步骤，旨在从数据中提取含义和洞见。这些步骤之后是模型评估、微调和最终化模型。'
- en: '![mlbf 0202](Images/mlbf_0202.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![mlbf 0202](Images/mlbf_0202.png)'
- en: Figure 2-2\. Model development steps
  id: totrans-46
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图2-2\. 模型开发步骤
- en: Note
  id: totrans-47
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: All the case studies in this book follow the standard seven-step model development
    process. However, there are a few case studies in which some of the steps are
    skipped, renamed, or reordered based on the appropriateness and intuitiveness
    of the steps.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的所有案例研究均遵循标准的七步模型开发过程。然而，有些案例研究会根据步骤的适当性和直观性跳过、重命名或重新排序一些步骤。
- en: Model Development Blueprint
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模型开发蓝图
- en: The following section covers the details of each model development step with
    supporting Python code.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 下一节详细介绍了每个模型开发步骤及其支持的Python代码细节。
- en: 1\. Problem definition
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1\. 问题定义
- en: The first step in any project is defining the problem. Powerful algorithms can
    be used for solving the problem, but the results will be meaningless if the wrong
    problem is solved.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 任何项目的第一步都是定义问题。可以使用强大的算法来解决问题，但如果解决了错误的问题，结果将毫无意义。
- en: 'The following framework should be used for defining the problem:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 应使用以下框架来定义问题：
- en: Describe the problem informally and formally. List assumptions and similar problems.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 非正式和正式地描述问题。列出假设和类似问题。
- en: List the motivation for solving the problem, the benefits a solution provides,
    and how the solution will be used.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 列出解决问题的动机，解决方案提供的好处以及解决方案的使用方式。
- en: Describe how the problem would be solved using the domain knowledge.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 描述如何使用领域知识解决问题。
- en: 2\. Loading the data and packages
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2\. 加载数据和包
- en: The second step gives you everything needed to start working on the problem.
    This includes loading libraries, packages, and individual functions needed for
    the model development.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 第二步提供了开始解决问题所需的一切。这包括加载用于模型开发所需的库、包和单个函数。
- en: 2.1\. Load libraries
  id: totrans-59
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 2.1\. 加载库
- en: 'A sample code for loading libraries is as follows:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 加载库的示例代码如下：
- en: '[PRE1]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The details of the libraries and modules for specific functionalities are defined
    further in the individual case studies.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: 2.2\. Load data
  id: totrans-63
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'The following items should be checked and removed before loading the data:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: Column headers
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Comments or special characters
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Delimiter
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'There are many ways of loading data. Some of the most common ways are as follows:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: '`Load CSV files with Pandas`'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '`Load file from URL`'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '`Load file using pandas_datareader`'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 3\. Exploratory data analysis
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In this step, we look at the dataset.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
- en: 3.1\. Descriptive statistics
  id: totrans-77
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Understanding the dataset is one of the most important steps of model development.
    The steps to understanding data include:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
- en: Viewing the raw data.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Reviewing the dimensions of the dataset.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Reviewing the data types of attributes.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Summarizing the distribution, descriptive statistics, and relationship among
    the variables in the dataset.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'These steps are demonstrated below using sample Python code:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
- en: '`Viewing the data`'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '`Output`'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
- en: '|  | Age | Sex | Job | Housing | SavingAccounts | CheckingAccount | CreditAmount
    | Duration | Purpose | Risk |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
- en: '| 0 | 67 | male | 2 | own | NaN | little | 1169 | 6 | radio/TV | good |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
- en: '`Reviewing the dimensions of the dataset`'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '`Output`'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The results show the dimension of the dataset and mean that the dataset has
    284,807 rows and 31 columns.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
- en: '`Reviewing the data types of the attributes in the data`'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '`Summarizing the data using descriptive statistics`'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '`Output`'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: '|  | Age | Job | CreditAmount | Duration |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
- en: '| count | 1000.000 | 1000.000 | 1000.000 | 1000.000 |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
- en: '| mean | 35.546 | 1.904 | 3271.258 | 20.903 |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
- en: '| std | 11.375 | 0.654 | 2822.737 | 12.059 |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
- en: '| min | 19.000 | 0.000 | 250.000 | 4.000 |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
- en: '| 25% | 27.000 | 2.000 | 1365.500 | 12.000 |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
- en: '| 50% | 33.000 | 2.000 | 2319.500 | 18.000 |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
- en: '| 75% | 42.000 | 2.000 | 3972.250 | 24.000 |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
- en: '| max | 75.000 | 3.000 | 18424.000 | 72.000 |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
- en: 3.2\. Data visualization
  id: totrans-110
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The fastest way to learn more about the data is to visualize it. Visualization
    involves independently understanding each attribute of the dataset.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
- en: 'Some of the plot types are as follows:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: Univariate plots
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: Histograms and density plots
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: Multivariate plots
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: Correlation matrix plot and scatterplot
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
- en: 'The Python code for univariate plot types is illustrated with examples below:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
- en: '`Univariate plot: histogram`'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '`Univariate plot: density plot`'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[Figure 2-3](#HistDesn) illustrates the output.'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: '![mlbf 0203](Images/mlbf_0203.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
- en: Figure 2-3\. Histogram (top) and density plot (bottom)
  id: totrans-124
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'The Python code for multivariate plot types is illustrated with examples below:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
- en: '`Multivariate plot: correlation matrix plot`'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '`Multivariate plot: scatterplot matrix`'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[Figure 2-4](#CorrScatter) illustrates the output.'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
- en: '![mlbf 0204](Images/mlbf_0204.png)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
- en: Figure 2-4\. Correlation (left) and scatterplot (right)
  id: totrans-132
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 4\. Data preparation
  id: totrans-133
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Data preparation is a preprocessing step in which data from one or more sources
    is cleaned and transformed to improve its quality prior to its use.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
- en: 4.1\. Data cleaning
  id: totrans-135
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 4.1\. 数据清洗
- en: 'In machine learning modeling, incorrect data can be costly. Data cleaning involves
    checking the following:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在机器学习建模中，不正确的数据可能会很昂贵。数据清洗包括检查以下内容：
- en: Validity
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 有效性
- en: The data type, range, etc.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 数据类型、范围等。
- en: Accuracy
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 准确性
- en: The degree to which the data is close to the true values.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 数据接近真实值的程度。
- en: Completeness
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 完整性
- en: The degree to which all required data is known.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 所需数据完全已知的程度。
- en: Uniformity
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 统一性
- en: The degree to which the data is specified using the same unit of measure.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 使用相同测量单位指定数据的程度。
- en: 'The different options for performing data cleaning include:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 执行数据清洗的不同选项包括：
- en: '*Dropping “NA” values within data*'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '*删除数据中的“NA”值*'
- en: '[PRE14]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '*Filling “NA” with 0*'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '*用0填充“NA”*'
- en: '[PRE15]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '*Filling NAs with the mean of the column*'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '*用列均值填充NA值*'
- en: '[PRE16]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 4.2\. Feature selection
  id: totrans-152
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 4.2\. 特征选择
- en: The data features used to train the machine learning models have a huge influence
    on the performance. Irrelevant or partially relevant features can negatively impact
    model performance. Feature selection^([1](ch02.xhtml#idm45174937229416)) is a
    process in which features in data that contribute most to the prediction variable
    or output are automatically selected.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 用于训练机器学习模型的数据特征对性能有很大影响。不相关或部分相关的特征可能会对模型性能产生负面影响。特征选择^([1](ch02.xhtml#idm45174937229416))
    是一个过程，在这个过程中，自动选择对预测变量或输出贡献最大的数据特征。
- en: 'The benefits of performing feature selection before modeling the data are:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在对数据建模之前执行特征选择的好处是：
- en: Reduces overfitting^([2](ch02.xhtml#idm45174937225672))
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 减少过拟合^([2](ch02.xhtml#idm45174937225672))
- en: Less redundant data means fewer opportunities for the model to make decisions
    based on noise.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 较少冗余数据意味着模型基于噪声进行决策的机会更少。
- en: Improves performance
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 改善性能
- en: Less misleading data means improved modeling performance.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 较少误导性数据意味着改进的建模性能。
- en: Reduces training time and memory footprint
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 减少训练时间和内存占用
- en: Less data means faster training and lower memory footprint.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 较少的数据意味着更快的训练速度和更低的内存占用。
- en: 'The following sample feature is an example demonstrating when the best two
    features are selected using the [`SelectKBest` function](https://oreil.ly/JDo-F)
    under sklearn. The `SelectKBest` function scores the features using an underlying
    function and then removes all but the *k* highest scoring feature:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的样本特征是一个示例，演示了如何使用[`SelectKBest`函数](https://oreil.ly/JDo-F)选择最佳的两个特征。`SelectKBest`函数使用底层函数对特征进行评分，然后移除除了*k*个最高评分特征以外的所有特征：
- en: '[PRE17]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '`Output`'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '`输出`'
- en: '[PRE18]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'When features are irrelevant, they should be dropped. Dropping the irrelevant
    features is illustrated in the following sample code:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 当特征无关时，它们应该被删除。删除无关特征的方法如下示例代码所示：
- en: '[PRE19]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 4.3\. Data transformation
  id: totrans-167
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 4.3\. 数据转换
- en: Many machine learning algorithms make assumptions about the data. It is a good
    practice to perform the data preparation in such a way that exposes the data in
    the best possible manner to the machine learning algorithms. This can be accomplished
    through data transformation.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 许多机器学习算法对数据有假设。以最佳方式对数据进行准备，使数据能够最好地暴露给机器学习算法，这是一个良好的实践。这可以通过数据转换来实现。
- en: 'The different data transformation approaches are as follows:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是不同的数据转换方法：
- en: Rescaling
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 重新调整比例
- en: 'When data comprises attributes with varying scales, many machine learning algorithms
    can benefit from *rescaling* all the attributes to the same scale. Attributes
    are often rescaled in the range between zero and one. This is useful for optimization
    algorithms used in the core of machine learning algorithms, and it also helps
    to speed up the calculations in an algorithm:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 当数据包含具有不同比例的属性时，许多机器学习算法可以通过将所有属性重新调整到相同的比例来受益。属性通常重新调整到零到一的范围内。这对于机器学习算法中使用的优化算法非常有用，也有助于加速算法中的计算：
- en: '[PRE20]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Standardization
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 标准化
- en: '*Standardization* is a useful technique to transform attributes to a standard
    [normal distribution](https://oreil.ly/4a70f) with a mean of zero and a standard
    deviation of one. It is most suitable for techniques that assume the input variables
    represent a normal distribution:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '*标准化* 是一种有用的技术，用于将属性转换为均值为零、标准差为一的标准[正态分布](https://oreil.ly/4a70f)。对于假设输入变量表示正态分布的技术非常适用：'
- en: '[PRE21]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Normalization
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 标准化
- en: '*Normalization* refers to rescaling each observation (row) to have a length
    of one (called a unit norm or a vector). This preprocessing method can be useful
    for sparse datasets of attributes of varying scales when using algorithms that
    weight input values:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '*标准化* 指的是将每个观察（行）重新缩放为长度为一（称为单位范数或向量）。在使用加权输入值的算法处理具有不同尺度属性的稀疏数据集时，这种预处理方法非常有用：'
- en: '[PRE22]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 5\. Evaluate models
  id: totrans-179
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 5\. 评估模型
- en: Once we estimate the performance of our algorithm, we can retrain the final
    algorithm on the entire training dataset and get it ready for operational use.
    The best way to do this is to evaluate the performance of the algorithm on a new
    dataset. Different machine learning techniques require different evaluation metrics.
    Other than model performance, several other factors such as simplicity, interpretability,
    and training time are considered when selecting a model. The details regarding
    these factors are covered in [Chapter 4](ch04.xhtml#Chapter4).
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们估算了算法的性能，我们可以在整个训练数据集上重新训练最终的算法，并准备好用于操作。这样做的最佳方法是在新数据集上评估算法的性能。不同的机器学习技术需要不同的评估指标。在选择模型时，除了模型性能之外，还考虑了几个其他因素，如简易性、可解释性和训练时间。有关这些因素的详细信息在[第4章](ch04.xhtml#Chapter4)中有所涵盖。
- en: 5.1\. Training and test split
  id: totrans-181
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 5.1\. 训练和测试分割
- en: 'The simplest method we can use to evaluate the performance of a machine learning
    algorithm is to use different training and testing datasets. We can take our original
    dataset and split it into two parts: train the algorithm on the first part, make
    predictions on the second part, and evaluate the predictions against the expected
    results. The size of the split can depend on the size and specifics of the dataset,
    although it is common to use 80% of the data for training and the remaining 20%
    for testing. The differences in the training and test datasets can result in meaningful
    differences in the estimate of accuracy. The data can easily be split into the
    training and test sets using the `train_test_split` function available in sklearn:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 评估机器学习算法性能的最简单方法是使用不同的训练和测试数据集。我们可以将原始数据集分成两部分：在第一部分上训练算法，对第二部分进行预测，并将预测结果与期望结果进行评估。分割的大小可以取决于数据集的大小和具体情况，尽管通常使用80%的数据进行训练，剩余的20%用于测试。训练和测试数据集之间的差异可能导致准确度估计的显著差异。可以使用sklearn中提供的`train_test_split`函数轻松地将数据分割成训练集和测试集：
- en: '[PRE23]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 5.2\. Identify evaluation metrics
  id: totrans-184
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 5.2\. 确定评估指标
- en: Choosing which metric to use to evaluate machine learning algorithms is very
    important. An important aspect of evaluation metrics is the capability to discriminate
    among model results. Different types of evaluation metrics used for different
    kinds of ML models are covered in detail across several chapters of this book.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 选择用于评估机器学习算法的度量标准非常重要。评估指标的一个重要方面是其在区分模型结果方面的能力。本书的多个章节详细介绍了不同类型的ML模型所使用的不同类型的评估指标。
- en: 5.3\. Compare models and algorithms
  id: totrans-186
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 5.3\. 比较模型和算法
- en: Selecting a machine learning model or algorithm is both an art and a science.
    There is no one solution or approach that fits all. There are several factors
    over and above the model performance that can impact the decision to choose a
    machine learning algorithm.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 选择机器学习模型或算法既是一门艺术，也是一门科学。没有一种适合所有情况的解决方案或方法。除了模型性能之外，还有多个因素可能影响选择机器学习算法的决策。
- en: 'Let’s understand the process of model comparison with a simple example. We
    define two variables, *X* and *Y*, and try to build a model to predict *Y* using
    *X*. As a first step, the data is divided into training and test split as mentioned
    in the preceding section:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过一个简单的例子来理解模型比较的过程。我们定义两个变量，*X*和*Y*，并尝试构建一个预测*Y*使用*X*的模型。作为第一步，数据按前面部分提到的训练和测试分割进行分割：
- en: '[PRE24]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'We have no idea which algorithms will do well on this problem. Let’s design
    our test now. We will use two models—one linear regression and the second polynomial
    regression to fit *Y* against *X*. We will evaluate algorithms using the *Root
    Mean Squared Error (RMSE)* metric, which is one of the measures of the model performance.
    RMSE will give a gross idea of how wrong all predictions are (zero is perfect):'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不知道哪种算法在这个问题上表现良好。现在让我们设计我们的测试。我们将使用两个模型——一个线性回归和第二个多项式回归来拟合*Y*和*X*。我们将使用*均方根误差（RMSE）*指标来评估算法的性能，这是模型性能的一种度量。RMSE将给出所有预测的错误程度的大致概念（零是完美的）：
- en: '[PRE25]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '`Output`'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '`输出`'
- en: '[PRE26]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: We can see that the RMSE of the polynomial regression is slightly better than
    that of the linear regression.^([3](ch02.xhtml#idm45174934446200)) With the former
    having the better fit, it is the preferred model in this step.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到多项式回归的RMSE略优于线性回归的RMSE。由于前者拟合效果更好，因此在这一步骤中它是首选模型。
- en: 6\. Model tuning
  id: totrans-195
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 6\. 模型调优
- en: Finding the best combination of hyperparameters of a model can be treated as
    a search problem.^([4](ch02.xhtml#idm45174934250120)) This searching exercise
    is often known as *model tuning* and is one of the most important steps of model
    development. It is achieved by searching for the best parameters of the model
    by using techniques such as a *grid search*. In a grid search, you create a grid
    of all possible hyperparameter combinations and train the model using each one
    of them. Besides a grid search, there are several other techniques for model tuning,
    including randomized search, [Bayesian optimization](https://oreil.ly/ZGVPM),
    and hyperbrand.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 找到模型最佳超参数组合可以被视为一个搜索问题。^([4](ch02.xhtml#idm45174934250120)) 这种搜索练习通常被称为*模型调优*，是模型开发中最重要的步骤之一。通过使用诸如网格搜索等技术，通过创建所有可能的超参数组合网格并对每一个进行训练来寻找最佳模型的参数。除了网格搜索外，还有几种其他模型调优技术，包括随机搜索、[贝叶斯优化](https://oreil.ly/ZGVPM)和超品牌。
- en: In the case studies presented in this book, we focus primarily on grid search
    for model tuning.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书介绍的案例研究中，我们主要集中于模型调优的网格搜索。
- en: 'Continuing on from the preceding example, with the polynomial as the best model:
    next, run a grid search for the model, refitting the polynomial regression with
    different degrees. We compare the RMSE results for all the models:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 继续前述示例，以多项式作为最佳模型：接下来，对模型进行网格搜索，使用不同的次数重新拟合多项式回归。我们比较所有模型的RMSE结果：
- en: '[PRE27]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '`Output`'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '`输出`'
- en: '![mlbf 02in01](Images/mlbf_02in01.png)'
  id: totrans-201
  prefs: []
  type: TYPE_IMG
  zh: '![mlbf 02in01](Images/mlbf_02in01.png)'
- en: The RMSE decreases when the degree increases, and the lowest RMSE is for the
    model with degree 10\. However, models with degrees lower than 10 performed very
    well, and the test set will be used to finalize the best model.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 当多项式模型的次数增加时，RMSE减小，而次数为10的模型具有最低的RMSE。然而，次数低于10的模型表现非常好，测试集将用于确定最佳模型。
- en: While the generic set of input parameters for each algorithm provides a starting
    point for analysis, it may not have the optimal configurations for the particular
    dataset and business problem.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 每个算法的通用输入参数集为分析提供了一个起点，但可能并非特定数据集和业务问题的最优配置。
- en: 7\. Finalize the model
  id: totrans-204
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 7\. 完善模型
- en: Here, we perform the final steps for selecting the model. First, we run predictions
    on the test dataset with the trained model. Then we try to understand the model
    intuition and save it for further usage.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们执行选择模型的最后步骤。首先，我们使用训练好的模型对测试数据集进行预测。然后，我们尝试理解模型的直觉并保存以备进一步使用。
- en: 7.1\. Performance on the test set
  id: totrans-206
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 7.1\. 测试集上的性能
- en: 'The model selected during the training steps is further evaluated on the test
    set. The test set allows us to compare different models in an unbiased way, by
    basing the comparisons in data that were not used in any part of the training.
    The test results for the model developed in the previous step are shown in the
    following example:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 在训练步骤中选择的模型会在测试集上进一步评估。测试集能够以无偏的方式比较不同模型，通过在训练的任何部分都未使用的数据进行比较。以下是前述步骤开发的模型的测试结果示例：
- en: '[PRE28]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '`Output`'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '`输出`'
- en: '![mlbf 02in02](Images/mlbf_02in02.png)'
  id: totrans-210
  prefs: []
  type: TYPE_IMG
  zh: '![mlbf 02in02](Images/mlbf_02in02.png)'
- en: In the training set we saw that the RMSE decreases with an increase in the degree
    of polynomial model, and the polynomial of degree 10 had the lowest RMSE. However,
    as shown in the preceding output for the polynomial of degree 10, although the
    training set had the best results, the results in the test set are poor. For the
    polynomial of degree 8, the RMSE in the test set is relatively higher. The polynomial
    of degree 6 shows the best result in the test set (although the difference is
    small compared to other lower-degree polynomials in the test set) as well as good
    results in the training set. For these reasons, this is the preferred model.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 在训练集中，我们看到随着多项式模型次数的增加，RMSE减小，并且次数为10的多项式具有最低的RMSE。然而，正如前面输出的次数为10的多项式所示，尽管训练集结果最佳，但测试集结果较差。对于次数为8的多项式，测试集中的RMSE相对较高。次数为6的多项式在测试集中表现最佳（尽管与测试集中其他次数较低的多项式相比差距不大），并且在训练集中也有良好的结果。因此，这是首选的模型。
- en: In addition to the model performance, there are several other factors to consider
    when selecting a model, such as simplicity, interpretability, and training time.
    These factors will be covered in the upcoming chapters.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 除了模型性能之外，在选择模型时还有几个其他因素需要考虑，例如简单性、可解释性和训练时间。这些因素将在接下来的章节中进行讨论。
- en: 7.2\. Model/variable intuition
  id: totrans-213
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 7.2\. 模型/变量直觉
- en: This step involves considering a holistic view of the approach taken to solve
    the problem, including the model’s limitations as it relates to the desired outcome,
    the variables used, and the selected model parameters. Details on model and variable
    intuition regarding different types of machine learning models are presented in
    the subsequent chapters and case studies.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 本步骤涉及综合考虑解决问题所采用的方法，包括模型在实现所期望的结果时的局限性、使用的变量以及选择的模型参数。关于不同类型的机器学习模型的模型和变量直觉的详细信息将在随后的章节和案例研究中呈现。
- en: 7.3\. Save/deploy
  id: totrans-215
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 7.3\. 保存/部署
- en: After finding an accurate machine learning model, it must be saved and loaded
    in order to ensure its usage later.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 找到准确的机器学习模型后，必须保存和加载它以确保以后的使用。
- en: '*Pickle* is one of the packages for saving and loading a trained model in Python.
    Using pickle operations, trained machine learning models can be saved in the *serialized*
    format to a file. Later, this serialized file can be loaded to *de-serialize*
    the model for its usage. The following sample code demonstrates how to save the
    model to a file and load it to make predictions on new data:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: '*Pickle* 是 Python 中用于保存和加载训练模型的包之一。使用 pickle 操作，训练好的机器学习模型可以以*序列化*的格式保存到文件中。稍后，可以加载这个序列化文件以*反序列化*模型进行使用。以下示例代码演示了如何将模型保存到文件并加载以在新数据上进行预测：'
- en: '[PRE29]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Tip
  id: totrans-219
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 提示
- en: In recent years, frameworks such as [AutoML](https://oreil.ly/ChjFb) have been
    built to automate the maximum number of steps in a machine learning model development
    process. Such frameworks allow the model developers to build ML models with high
    scale, efficiency, and productivity. Readers are encouraged to explore such frameworks.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 近年来，像[AutoML](https://oreil.ly/ChjFb)这样的框架已经被构建出来，以自动化机器学习模型开发过程中的最大数量步骤。这些框架允许模型开发人员以高规模、高效率和高生产力构建ML模型。建议读者探索这些框架。
- en: Chapter Summary
  id: totrans-221
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 章节总结
- en: Given its popularity, rate of adoption, and flexibility, Python is often the
    preferred language for machine learning development. There are many available
    Python packages to perform numerous tasks, including data cleaning, visualization,
    and model development. Some of these key packages are Scikit-learn and Keras.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 由于其流行度、采纳率和灵活性，Python 往往是机器学习开发的首选语言。有许多可用的 Python 包来执行多种任务，包括数据清洗、可视化和模型开发。其中一些关键包括
    Scikit-learn 和 Keras。
- en: The seven steps of model development mentioned in this chapter can be leveraged
    while developing any machine learning–based model in finance.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 本章提到的模型开发的七个步骤可以在金融中开发任何基于机器学习的模型时使用。
- en: Next Steps
  id: totrans-224
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下一步
- en: In the next chapter, we will cover the key algorithm for machine learning—the
    artificial neural network. The artificial neural network is another building block
    of machine learning in finance and is used across all types of machine learning
    and deep learning algorithms.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将涵盖机器学习的关键算法——人工神经网络。人工神经网络是金融领域机器学习的另一个构建模块，并且在各类机器学习和深度学习算法中广泛使用。
- en: ^([1](ch02.xhtml#idm45174937229416-marker)) Feature selection is more relevant
    for supervised learning models and is described in detail in the individual case
    studies in Chapters [5](ch05.xhtml#Chapter5) and [6](ch06.xhtml#Chapter6).
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: ^([1](ch02.xhtml#idm45174937229416-marker)) 特征选择对监督学习模型更为重要，在第五章和第六章的个案研究中有详细描述。
- en: ^([2](ch02.xhtml#idm45174937225672-marker)) Overfitting is covered in detail
    in [Chapter 4](ch04.xhtml#Chapter4).
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: ^([2](ch02.xhtml#idm45174937225672-marker)) 过拟合在[第四章](ch04.xhtml#Chapter4)中有详细讨论。
- en: ^([3](ch02.xhtml#idm45174934446200-marker)) It should be noted that the difference
    in RMSE is small in this case and may not replicate with a different split of
    the train/test data.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: ^([3](ch02.xhtml#idm45174934446200-marker)) 应注意，在这种情况下，RMSE 的差异很小，并且可能在不同的训练/测试数据拆分下不会复制。
- en: ^([4](ch02.xhtml#idm45174934250120-marker)) Hyperparameters are the external
    characteristics of the model, can be considered the model’s settings, and are
    not estimated based on data-like model parameters.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: ^([4](ch02.xhtml#idm45174934250120-marker)) 超参数是模型的外部特性，可以被视为模型的设置，并且不是基于数据估计的模型参数。
